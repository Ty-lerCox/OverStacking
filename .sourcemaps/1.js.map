{"version":3,"sources":["../../src/pages/layout/app1/list-map1/list-map1.ngfactory.js","../../src/pages/layout/app1/list-map1/list-map1.ts","../../src/pages/layout/app1/list-map1/list-map1.module.ts","../../src/pages/layout/app1/list-map1/list-map1.module.ngfactory.js","../../node_modules/@firebase/database/dist/cjs/src/core/util/util.js","../../node_modules/@firebase/database/dist/cjs/src/core/util/Path.js","../../node_modules/@firebase/database/dist/cjs/src/core/snap/indexes/PriorityIndex.js","../../node_modules/@firebase/database/dist/cjs/src/core/snap/ChildrenNode.js","../../node_modules/@firebase/database/dist/cjs/src/core/snap/Node.js","../../node_modules/@firebase/database/dist/cjs/src/core/util/validation.js","../../node_modules/@firebase/database/dist/cjs/src/core/operation/Operation.js","../../node_modules/firebase/database/index.js","../../node_modules/@firebase/database/dist/cjs/src/core/view/Change.js","../../node_modules/@firebase/database/dist/cjs/src/core/snap/indexes/KeyIndex.js","../../node_modules/@firebase/database/dist/cjs/src/core/snap/nodeFromJSON.js","../../node_modules/@firebase/database/dist/cjs/src/core/storage/storage.js","../../node_modules/@firebase/database/dist/cjs/src/realtime/Constants.js","../../node_modules/@firebase/database/dist/cjs/src/core/snap/indexes/Index.js","../../node_modules/@firebase/database/dist/cjs/src/core/snap/LeafNode.js","../../node_modules/@firebase/database/dist/cjs/src/core/util/SortedMap.js","../../node_modules/@firebase/database/dist/cjs/src/core/Repo.js","../../node_modules/@firebase/database/dist/cjs/src/core/view/CacheNode.js","../../node_modules/@firebase/database/dist/cjs/src/api/Reference.js","../../node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","../../node_modules/@firebase/database/dist/cjs/src/core/util/ImmutableTree.js","../../node_modules/@firebase/database/dist/cjs/src/core/view/filter/IndexedFilter.js","../../node_modules/@firebase/database/dist/cjs/src/core/stats/StatsManager.js","../../node_modules/@firebase/database/dist/cjs/src/core/RepoManager.js","../../node_modules/rxjs/scheduler/async.js","../../node_modules/angularfire2/database-deprecated/utils.js","../../node_modules/angularfire2/database-deprecated/query_observable.js","../../node_modules/angularfire2/database-deprecated/firebase_list_factory.js","../../node_modules/angularfire2/database-deprecated/firebase_object_factory.js","../../node_modules/angularfire2/database-deprecated/database.module.js","../../node_modules/angularfire2/database-deprecated/firebase_list_observable.js","../../node_modules/angularfire2/database-deprecated/interfaces.js","../../node_modules/angularfire2/database-deprecated/firebase_object_observable.js","../../node_modules/angularfire2/database-deprecated/database.js","../../node_modules/@firebase/database/dist/cjs/src/api/Database.js","../../node_modules/@firebase/database/dist/cjs/src/core/util/libs/parser.js","../../node_modules/@firebase/database/dist/cjs/src/core/RepoInfo.js","../../node_modules/@firebase/database/dist/cjs/src/api/onDisconnect.js","../../node_modules/@firebase/database/dist/cjs/src/api/Query.js","../../node_modules/@firebase/database/dist/cjs/src/core/snap/snap.js","../../node_modules/@firebase/database/dist/cjs/src/core/snap/indexes/ValueIndex.js","../../node_modules/@firebase/database/dist/cjs/src/core/snap/IndexMap.js","../../node_modules/@firebase/database/dist/cjs/src/core/snap/childSet.js","../../node_modules/@firebase/database/dist/cjs/src/core/snap/comparators.js","../../node_modules/@firebase/database/dist/cjs/src/core/snap/indexes/PathIndex.js","../../node_modules/@firebase/database/dist/cjs/src/core/util/ServerValues.js","../../node_modules/@firebase/database/dist/cjs/src/core/SparseSnapshotTree.js","../../node_modules/@firebase/database/dist/cjs/src/core/util/CountedSet.js","../../node_modules/@firebase/database/dist/cjs/src/core/operation/Overwrite.js","../../node_modules/@firebase/database/dist/cjs/src/core/SyncPoint.js","../../node_modules/@firebase/database/dist/cjs/src/core/view/ViewCache.js","../../node_modules/@firebase/database/dist/cjs/src/core/stats/StatsListener.js","../../node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","../../node_modules/@firebase/database/dist/cjs/src/core/util/EventEmitter.js","../../node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","../../node_modules/@firebase/database/dist/cjs/src/realtime/BrowserPollConnection.js","../../node_modules/@firebase/database/dist/cjs/src/realtime/WebSocketConnection.js","../../node_modules/@firebase/database/dist/cjs/src/core/ServerActions.js","../../node_modules/@firebase/database/dist/cjs/src/core/view/filter/RangedFilter.js","../../node_modules/@firebase/database/dist/cjs/index.js","../../node_modules/@firebase/database/dist/cjs/src/core/storage/DOMStorageWrapper.js","../../node_modules/@firebase/database/dist/cjs/src/core/storage/MemoryStorage.js","../../node_modules/@firebase/database/dist/cjs/src/api/TransactionResult.js","../../node_modules/@firebase/database/dist/cjs/src/core/util/NextPushId.js","../../node_modules/@firebase/database/dist/cjs/src/core/view/EventRegistration.js","../../node_modules/@firebase/database/dist/cjs/src/core/view/Event.js","../../node_modules/@firebase/database/dist/cjs/src/core/SyncTree.js","../../node_modules/@firebase/database/dist/cjs/src/core/operation/AckUserWrite.js","../../node_modules/@firebase/database/dist/cjs/src/core/operation/ListenComplete.js","../../node_modules/@firebase/database/dist/cjs/src/core/operation/Merge.js","../../node_modules/@firebase/database/dist/cjs/src/core/view/View.js","../../node_modules/@firebase/database/dist/cjs/src/core/view/ViewProcessor.js","../../node_modules/@firebase/database/dist/cjs/src/core/view/ChildChangeAccumulator.js","../../node_modules/@firebase/database/dist/cjs/src/core/view/CompleteChildSource.js","../../node_modules/@firebase/database/dist/cjs/src/core/view/EventGenerator.js","../../node_modules/@firebase/database/dist/cjs/src/core/WriteTree.js","../../node_modules/@firebase/database/dist/cjs/src/core/CompoundWrite.js","../../node_modules/@firebase/database/dist/cjs/src/core/SnapshotHolder.js","../../node_modules/@firebase/database/dist/cjs/src/core/AuthTokenProvider.js","../../node_modules/@firebase/database/dist/cjs/src/core/stats/StatsCollection.js","../../node_modules/@firebase/database/dist/cjs/src/core/stats/StatsReporter.js","../../node_modules/@firebase/database/dist/cjs/src/core/view/EventQueue.js","../../node_modules/@firebase/database/dist/cjs/src/core/util/VisibilityMonitor.js","../../node_modules/@firebase/database/dist/cjs/src/core/util/OnlineMonitor.js","../../node_modules/@firebase/database/dist/cjs/src/realtime/TransportManager.js","../../node_modules/@firebase/database/dist/cjs/src/realtime/polling/PacketReceiver.js","../../node_modules/@firebase/database/dist/cjs/src/core/ReadonlyRestClient.js","../../node_modules/@firebase/database/dist/cjs/src/core/view/QueryParams.js","../../node_modules/@firebase/database/dist/cjs/src/core/view/filter/LimitedFilter.js","../../node_modules/@firebase/database/dist/cjs/src/core/Repo_transaction.js","../../node_modules/@firebase/database/dist/cjs/src/core/util/Tree.js","../../node_modules/@firebase/database/dist/cjs/src/api/internal.js","../../node_modules/@firebase/database/dist/cjs/src/api/test_access.js","../../node_modules/rxjs/operator/combineLatest.js","../../node_modules/rxjs/operators/combineLatest.js","../../node_modules/rxjs/operator/auditTime.js","../../node_modules/rxjs/operators/auditTime.js","../../node_modules/rxjs/operators/audit.js","../../node_modules/rxjs/observable/timer.js","../../node_modules/rxjs/observable/TimerObservable.js","../../node_modules/rxjs/util/isNumeric.js","../../node_modules/rxjs/util/isDate.js"],"names":["View_ListMap1Page_0","_l","core","mapElement","content_ngfactory","content","config","platform","dom_controller","app","keyboard","view_controller","nav_controller","grid","row","col","_v","en","$event","ad","component","dismiss","button_ngfactory","button_button","color","mode","large","block","_ck","statusbarPadding","_hasRefresher","ListMap1Page","navCtrl","navParams","loadingCtrl","viewCtrl","afDB","_this","this","items","markerSelected","mapStyle","featureType","elementType","stylers","lightness","gamma","weight","saturation","hue","infoWindows","loadingPopup","create","spinner","present","categoryId","get","list","query","orderByChild","equalTo","parseInt","subscribe","listItems","displayGoogleMap","prototype","ionViewDidLoad","mapOptions","center","google","maps","LatLng","zoom","styles","mapTypeId","MapTypeId","ROADMAP","disableDefaultUI","map","Map","nativeElement","addMarkersToMap","_i","_a","length","position","lat","lng","mapMarker","Marker","animation","Animation","DROP","title","name","email","web","phone","icon","url","size","Size","scaledSize","origin","Point","anchor","labelOrigin","anchorPoint","setMap","addInfoWindowToMarker","setCenter","marker","infoWindowContent","infoWindow","InfoWindow","setContent","addListener","closeAllInfoWindows","open","push","doSomething","console","log","close","ListMap1PageModule","RenderType_ListMap1Page","encapsulation","data","ListMap1PageNgFactory","nav_params","loading_controller","database_deprecated","__webpack_require__","d","__webpack_exports__","ListMap1PageModuleNgFactory","action_sheet_component_ngfactory","alert_component_ngfactory","app_root_ngfactory","loading_component_ngfactory","modal_component_ngfactory","picker_component_ngfactory","popover_component_ngfactory","select_popover_component_ngfactory","toast_component_ngfactory","common","esm5_forms","ionic_angular_module","module_loader","Object","defineProperty","exports","value","util_1","util_2","util_3","util_4","util_5","util_6","storage_1","util_7","LUIDGenerator","id","sha1","str","utf8Bytes","stringToByteArray","Sha1","update","sha1Bytes","digest","base64","encodeByteArray","buildLogMessage_","var_args","arguments","message","i","Array","isArray","apply","stringify","logger","firstLog_","enableLogging","logger_","persistent","assert","bind","SessionStorage","set","remove","logWrapper","prefix","concat","error","fatal","Error","warn","warnIfPageIsSecure","window","location","protocol","indexOf","warnAboutUnsupportedMethod","methodName","isInvalidJSONNumber","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","executeWhenDOMReady","fn","isNodeSdk","document","readyState","called_1","wrappedFn_1","body","setTimeout","Math","floor","addEventListener","attachEvent","MIN_NAME","MAX_NAME","nameCompare","a","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","key","obj","ObjectToUniqueKey","keys","k","sort","splitStringBySize","segsize","len","dataSegs","c","substring","each","forEach","val","bindCallback","callback","context","doubleToIEEE754String","v","s","e","f","ln","bits","Infinity","abs","pow","min","LN2","round","reverse","join","hexByteString","hexByte","substr","toString","toLowerCase","isChromeExtensionContentScript","test","href","isWindowsStoreApp","Windows","UI","errorForServerCode","code","reason","path","toUpperCase","INTEGER_REGEXP_","RegExp","intVal","exceptionGuard","stack","callUserCallback","beingCrawled","search","exportPropGetter","object","fnGet","setTimeoutNonBlocking","time","timeout","Path","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","enumerable","configurable","getFront","getLength","popFront","getBack","pathString","toUrlEncodedString","encodeURIComponent","String","slice","begin","parent","pieces","child","childPathObj","childPieces","isEmpty","relativePath","outerPath","innerPath","outer","inner","comparePaths","left","right","leftKeys","rightKeys","cmp","equals","other","j","contains","ValidationPath","errorPrefix_","parts_","byteLength_","max","stringLength","checkValid_","pop","last","MAX_PATH_LENGTH_BYTES","MAX_PATH_DEPTH","toErrorString","nodeFromJSON","MAX_NODE","tslib_1","Index_1","Node_1","LeafNode_1","setNodeFromJSON","setMaxNode","PriorityIndex","_super","__extends","compare","aPriority","node","getPriority","bPriority","indexCmp","compareTo","isDefinedOn","indexedValueChanged","oldNode","newNode","minPost","NamedNode","MIN","maxPost","LeafNode","makePost","indexValue","priorityNode","Index","PRIORITY_INDEX","EMPTY_NODE","SortedMap_1","snap_1","PriorityIndex_1","KeyIndex_1","IndexMap_1","comparators_1","ChildrenNode","children_","priorityNode_","indexMap_","lazyHash_","validatePriorityNode","SortedMap","NAME_COMPARATOR","IndexMap","Default","isLeafNode","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","front","hasChild","updateImmediateChild","newChildNode","namedNode","newChildren","newIndexMap","newPriority","removeFromIndexes","insert","addToIndexes","updateChild","newImmediateChild","numChildren","count","exportFormat","numKeys","maxKey","allIntegerKeys","forEachChild","childNode","array","hash","toHash_1","priorityHashText","childHash","getPredecessorChildName","index","idx","resolveIndex_","predecessor","getPredecessorKey","getFirstChildName","indexDefinition","minKey","getFirstChild","getLastChildName","getLastChild","action","inorderTraversal","wrappedNode","getIterator","getIteratorFrom","startPost","iterator","Wrap","next","peek","getNext","getReverseIterator","getReverseIteratorFrom","endPost","withIndex","KEY_INDEX","hasIndex","addIndex","isIndexed","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","call","defineProperties","MAX","KeyIndex","__EMPTY_NODE","__childrenNodeConstructor","Path_1","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","MAX_LEAF_SIZE_","isValidKey","isValidPathString","isValidRootPathString","replace","isValidPriority","priority","validateFirebaseDataArg","fnName","argumentNumber","optional","undefined","validateFirebaseData","errorPrefix","path_","hasDotValue_1","hasActualChild_1","validateFirebaseMergePaths","mergePaths","curPath","prevPath","validateFirebaseMergeDataArg","validatePriority","validateEventType","eventType","validateKey","validatePathString","validateRootPathString","validateWritablePath","validateUrl","parsedUrl","repoInfo","host","namespace","validateCredential","cred","validateBoolean","bool","validateString","string","validateObject","validateObjectContainsKey","opt_type","safeGet","OperationType","OperationSource","fromUser","fromServer","queryId","tagged","User","Server","forServerTaggedQuery","module","Change","type","snapshotNode","oldSnap","prevName","valueChange","snapshot","VALUE","childAddedChange","childKey","CHILD_ADDED","childRemovedChange","CHILD_REMOVED","childChangedChange","newSnapshot","oldSnapshot","CHILD_CHANGED","childMovedChange","CHILD_MOVED","assertionError","json","ChildrenNode_1","USE_HINZE","node_1","jsonObj_1","childData","children_1","childrenHavePriority_1","hinzeJsonObj_1","childSet","childSet_1","buildChildSet","NAME_ONLY_COMPARATOR","sortedChildSet","getCompare",".priority","DOMStorageWrapper_1","MemoryStorage_1","createStoragefor","domStorageName","domStorage","setItem","removeItem","DOMStorageWrapper","MemoryStorage","PersistentStorage","PROTOCOL_VERSION","VERSION_PARAM","TRANSPORT_SESSION_PARAM","REFERER_PARAM","FORGE_REF","FORGE_DOMAIN","LAST_SESSION_PARAM","WEBSOCKET","LONG_POLLING","oldWrapped","newWrapped","value_",".value","getValue","toHash","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","result","hasNext","LLRBNode","RED","copy","reverseTraversal","min_","n","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","rightParent","resultGenerator","ServerValues_1","nodeFromJSON_1","SparseSnapshotTree_1","SyncTree_1","SnapshotHolder_1","AuthTokenProvider_1","StatsManager_1","StatsReporter_1","StatsListener_1","EventQueue_1","PersistentConnection_1","ReadonlyRestClient_1","Database_1","Repo","repoInfo_","forceRestClient","dataUpdateCount","statsListener_","eventQueue_","EventQueue","nextWriteId_","interceptServerDataCallback_","onDisconnect_","SparseSnapshotTree","persistentConnection_","authTokenProvider","AuthTokenProvider","stats_","StatsManager","getCollection","server_","ReadonlyRestClient","onDataUpdate_","onConnectStatus_","authOverride","options","PersistentConnection","onServerInfoUpdate_","addTokenChangeListener","token","refreshAuthToken","statsReporter_","getOrCreateReporter","StatsReporter","transactions_init_","infoData_","SnapshotHolder","infoSyncTree_","SyncTree","startListening","tag","currentHashFn","onComplete","infoEvents","getNode","applyServerOverwrite","stopListening","updateInfo_","serverSyncTree_","listen","status","events","raiseEventsForChangedPath","unlisten","secure","serverTime","offset","Date","getTime","generateServerValues","generateWithValues","timestamp","isMerge","taggedChildren","raw","applyTaggedQueryMerge","taggedSnap","applyTaggedQueryOverwrite","changedChildren","applyServerMerge","snap","affectedPath","rerunTransactions_","interceptServerData_","connectStatus","runOnDisconnectEvents_","updates","updateSnapshot","getNextWriteId_","setWithPriority","newVal","log_","serverValues","newNodeUnresolved","resolveDeferredValueSnapshot","writeId","applyUserOverwrite","queueEvents","put","errorReason","success","clearEvents","ackUserWrite","callOnCompleteCallback","abortTransactions_","childrenToMerge","empty","changedKey","changedValue","writeId_1","applyUserMerge","merge","changedPath","resolveDeferredValueTree","forEachTree","Empty","onDisconnectCancel","forget","onDisconnectSet","onDisconnectPut","remember","onDisconnectSetWithPriority","onDisconnectUpdate","onDisconnectMerge","addEventCallbackForQuery","eventRegistration","addEventRegistration","raiseEventsAtPath","removeEventCallbackForQuery","removeEventRegistration","interrupt","resume","stats","showDelta","StatsListener","longestName","reduce","previousValue","currentValue","stat","statsIncrementCounter","metric","incrementCounter","includeStat","__database","Database","CacheNode","node_","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","onDisconnect_1","TransactionResult_1","NextPushId_1","Query_1","Repo_1","QueryParams_1","validation_1","SyncPoint_1","Reference","repo","QueryParams","DEFAULT","getKey","validateArgCount","getParent","parentPath","getRoot","ref","databaseProp","database","validateCallback","deferred","Deferred","wrapCallback","promise","objectToMerge","newObjectToMerge","transaction","transactionUpdate","applyLocally","catch","startTransaction","committed","reject","resolve","TransactionResult","setPriority","now","nextPushId","thennablePushRef","pushRef","then","Promise","onDisconnect","OnDisconnect","Query","__referenceConstructor","SyncPoint","DataSnapshot","ref_","index_","exportVal","toJSON","exists","childPathString","childPath","childRef","hasChildren","getRef","emptyChildrenSingleton","EmptyChildren","ImmutableTree","children","fromObject","tree","childSnap","findRootMostMatchingPathAndValue","predicate","childExistingPathAndValue","findRootMostValueAndPath","subtree","childTree","toSet","newChild","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","nextChild","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","Change_1","IndexedFilter","source","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","getIndex","StatsCollection_1","hashString","collections_","StatsCollection","creatorFunction","reporters_","parser_1","_staticInstance","RepoManager","repos_","useRestClient_","getInstance","appName","dbUrl","databaseFromApp","parseRepoInfo","createRepo","deleteRepo","appRepos","toURLString","AsyncAction_1","AsyncScheduler_1","async","AsyncScheduler","AsyncAction","isNil","hasKey","isFirebaseRef","unwrapMapFn","unwrapped","$value","pathRef","REGEX_ABSOLUTE_URL","isAbsoluteUrl","refFromURL","observeQuery","audit","of","Observable","observer","combined","combineLatest","getOrderObservables","getStartAtObservable","getEndAtObservable","getEqualToObservable","getLimitToObservables","auditTime","orderBy","startAt","endAt","limitTo","serializedOrder","OrderByOptions","Key","orderByKey","Priority","orderByPriority","Value","orderByValue","Child","LimitToOptions","First","limitToFirst","Last","limitToLast","observables","option","filter","subscriber","mapToOrderBySelection","mapToLimitToSelection","FirebaseListFactory","_b","preserveSnapshot","_c","JSON","isEmptyObject","firebaseListObservable","queryObs","firebase_list_observable_FirebaseListObservable","sub","switchMap","queried","queryRef","ix","unsubscribe","toValue","toKey","$key","listObs","obs","handles","hasLoaded","lastLoadedKey","once","find","err","complete","addFn","on","prevKey","onChildAdded","event","handle","remFn","onChildRemoved","chgFn","onChildChanged","item","off","observeOn","angularfire2","Zone","current","arr","accumulator","curr","valKey","onChildUpdated","FirebaseObjectFactory","objectObservable","FirebaseObjectObservable","_getAngularFireDatabase","database_AngularFireDatabase","extendStatics","setPrototypeOf","__proto__","p","hasOwnProperty","__","constructor","FirebaseListObservable","$ref","lift","operator","observable","_checkOperationCases","stringCase","firebaseCase","snapshotCase","unwrappedSnapshotCase","cases","isString","isFirebaseDataSnapshot","isAFUnwrappedSnapshot","firebase_object_observable___extends","AngularFireDatabase","pathOrRef","opts","AngularFireDatabaseProvider","provide","useFactory","deps","DATABASE_PROVIDERS","AngularFireDatabaseModule","Reference_1","RepoManager_1","repo_","INTERNAL","DatabaseInternals","checkDeleted_","apiName","parsedURL","goOffline","goOnline","ServerValue","TIMESTAMP",".sv","delete","__awaiter","__generator","RepoInfo_1","dataURL","parseURL","subdomain","domain","RepoInfo","scheme","port","colonInd","slashInd","questionMarkInd","pathStringDecoded","piece","decodeURIComponent","decodePath","queryParams","queryString","results","startsWith","segment","kv","decodeQuery","parts","Constants_1","webSocketOnly","persistenceKey","internalHost","needsQueryParam","isCustomHost","isCacheableHost","isDemoHost","updateHost","newHost","connectionURL","params","connURL","pairs","cancel","ValueIndex_1","PathIndex_1","EventRegistration_1","queryParams_","orderByCalled_","validateQueryEndpoints_","startNode","endNode","hasStart","getIndexStartValue","hasEnd","getIndexEndValue","tooManyArgsError","wrongArgTypeError","getIndexStartName","getIndexEndName","PathIndex","VALUE_INDEX","validateLimit_","hasLimit","hasAnchoredLimit","validateNoPreviousOrderByCall_","getQueryParams","cancelCallbackOrContext","ret","getCancelAndContextArgs_","onValueEvent","callbacks","onChildEvent","cancelCallback","container","ValueEventRegistration","ChildEventRegistration","validateContextObject","userCallback","cancelOrContext","firstCall","onceCallback","limit","parsedPath","newParams","queryObject","getQueryObject","queryIdentifier","isEqual","sameRepo","samePath","sameQueryIdentifier","ValueIndex","valueNode","_defaultIndexMap","fallbackObject","indexes_","indexSet_","indexKey","sortedMap","existingChildren","childList","sawIndexedValue","iter","newIndex","indexName","newIndexSet","clone","newIndexes","indexedChildren","existingSnap","SortedMap_2","LOG_2","Base12Num","num","logBase2","current_","mask","bitMask","bits_","nextBitIsOne","keyFn","mapSortFn","buildBalancedTree","low","high","middle","root","base12","buildPennant","chunkSize","attachPennant","pennant","isOne","buildFrom12Array","indexPath_","extractChild","aChild","bChild","values","resolveDeferredValue","resolvedTree","rawPri","leafNode","childrenNode","CountedSet_1","CountedSet","add","self_1","prefixPath","func","clear","getCount","Operation_1","Overwrite","OVERWRITE","operationForChild","CacheNode_1","ViewCache_1","View_1","views_","applyOperation","operation","writesCache","optCompleteServerCache","view","events_1","serverCache","serverCacheComplete","eventCache","calcCompleteEventCache","eventCacheComplete","calcCompleteEventChildren","viewCache","ViewCache","View","getInitialEvents","cancelError","removed","cancelEvents","hadCompleteView","hasCompleteView","viewQueryId","getQuery","loadsAllData","getQueryViews","getCompleteServerCache","viewForQuery","getCompleteView","viewExistsForQuery","findValue","eventCache_","serverCache_","updateEventSnap","eventSnap","filtered","updateServerSnap","serverSnap","getEventCache","getCompleteEventSnap","getServerCache","getCompleteServerSnap","collection_","last_","newStats","delta","app_1","VisibilityMonitor_1","OnlineMonitor_1","Connection_1","RECONNECT_MIN_DELAY","RECONNECT_MAX_DELAY_DEFAULT","authTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens_","outstandingPuts_","outstandingPutCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","lastSessionId","establishConnectionTimer_","visible_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","VisibilityMonitor","onVisible_","OnlineMonitor","onOnline_","sendRequest","onResponse","curReqNum","msg","r","isDefault","listenSpec","hashFn","sendListen_","req","payload","warnOnListenWarnings_","removeListen_","warnings","indexSpec","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isAdmin","token_1","authMethod","isValidFormat","requestData","res","onAuthRevoked_","sendUnlisten_","queryObj","sendOnDisconnect_","request","response","putInternal","sendPut_","queued","reportStats","onDataMessage_","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","onReady_","sessionId","handleTimestamp_","sendConnectStats_","restoreState_","clearTimeout","establishConnection_","visible","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectAttempt","reconnectDelay","random","onDataMessage_1","onReady_1","connId_1","nextConnectionId_","lastSessionId_1","canceled_1","connection_1","closeFn_1","forceRefresh","getToken","accessToken","Connection","CONSTANTS","NODE_ADMIN","serverTimeOffset","q","normalizedPathString","statusCode","explanation","notifyForInvalidToken","queries","shift","clientName","NODE_CLIENT","default","SDK_VERSION","isMobileCordova","isReactNative","currentlyOnline","ServerActions","EventEmitter","allowedEvents_","listeners_","trigger","listeners","validateEventType_","eventData","getInitialEvent","splice","et","TransportManager_1","onMessage_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","TransportManager","start_","conn","initialTransport","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeout_ms","healthyTimeout_","bytesReceived","markConnectionHealthy","bytesSent","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","dataMsg","sendData_","t","tryCleanupConnection","connId","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","send","start","onControl_","onPrimaryResponse_","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","ts","version","h","onConnectionEstablished_","tryStartUpgrade_","upgradeTransport","startUpgrade_","onMessage","closeConnections_","PacketReceiver_1","FIREBASE_LONGPOLL_START_PARAM","FIREBASE_LONGPOLL_CLOSE_COMMAND","FIREBASE_LONGPOLL_COMMAND_CB_NAME","FIREBASE_LONGPOLL_DATA_CB_NAME","FIREBASE_LONGPOLL_ID_PARAM","FIREBASE_LONGPOLL_PW_PARAM","FIREBASE_LONGPOLL_SERIAL_PARAM","FIREBASE_LONGPOLL_CALLBACK_ID_PARAM","FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM","FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET","FIREBASE_LONGPOLL_DATA_PARAM","FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM","FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM","BrowserPollConnection","transportSessionId","everConnected_","urlFn","curSegmentNum","myPacketOrderer","PacketReceiver","isClosed_","connectTimeoutTimer_","onClosed_","scriptTagHolder","FirebaseIFrameScriptHolder","args","command","arg1","arg2","incrementIncomingBytes_","password","sendNewPolls","closeAfter","pN","handleResponse","urlParams","uniqueCallbackIdentifier","connectURL","addTag","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","createElement","shutdown_","myDisconnFrame","removeChild","dataStr","base64data","base64Encode","MAX_URL_DATA_SIZE","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","pendingSegs","currentSerial","myIFrame","createIFrame_","script","iframeContents","doc","write","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","theURL","nodeRestRequest","newRequest_","curDataString","theSeg","seg","addLongPollTag_","segnum","totalsegs","serial","doNewRequest","keepaliveTimeout","loadCB","doNodeLongPoll","newScript_1","onload","onreadystatechange","rstate","parentNode","onerror","WebSocketImpl","MozWebSocket","WebSocket","setWebSocketImpl","impl","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","headers","User-Agent","process","env","proxy","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","isOldAndroid","navigator","userAgent","oldAndroidRegex","oldAndroidMatch","match","parseFloat","previouslyFailed","isInMemoryStorage","appendFrame_","fullMess","jsonMess","jsonEval","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","IndexedFilter_1","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","matches","self","startName","endName","registerDatabase","instance","registerService","unused","TEST_ACCESS","DataSnapshot_1","domStorage_","prefix_","prefixedName_","storedVal","getItem","cache_","PUSH_CHARS","lastPushTime","lastRandChars","duplicateTime","timeStampChars","charAt","Event_1","callback_","cancelCallback_","context_","respondsTo","createEvent","change","DataEvent","getEventRunner","ctx","getEventType","cancelCB_1","cb_1","createCancelEvent","CancelEvent","hasAnyCallback","callbacks_","eventToCheck","cancelCB_2","cb_2","otherCount","otherKey","getAnyKey","thisKey","every","cb","getPath","AckUserWrite_1","ImmutableTree_1","ListenComplete_1","Merge_1","Overwrite_1","WriteTree_1","listenProvider_","syncPointTree_","pendingWriteTree_","WriteTree","tagToQueryMap_","queryToTagMap_","newData","addOverwrite","applyOperationToSyncPoints_","addMerge","changeTree","Merge","revert","getWrite","removeWrite","affectedTree_1","AckUserWrite","applyListenComplete","ListenComplete","queryKey","queryKeyForTag_","parseQueryKey_","queryPath","op","applyTaggedOperation_","applyTaggedListenComplete","foundAncestorDefaultView","pathToSyncPoint","sp","syncPoint","childSyncPoint","completeCache","viewAlreadyExists","makeQueryKey_","getNextQueryTag_","childWrites","setupListener_","maybeSyncPoint","removedAndEvents","removingDefault","findIndex","covered","parentSyncPoint","newViews","collectDistinctViewsForSubTree_","newQuery","listener","createListenerForView_","queryForListening_","tagForQuery_","queryToRemove","tagToRemove","removeTags_","writeIdsToExclude","writeTree","maybeChildSyncPoint","childMap","views_1","childViews","removedQuery","removedQueryKey","removedQueryTag","queriesToStop","queries_1","childQueries","queryToStop","splitIndex","nextQueryTag_","applyOperationHelper_","syncPointTree","applyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","affectedTree","ACK_USER_WRITE","LISTEN_COMPLETE","MERGE","ViewProcessor_1","EventGenerator_1","query_","initialViewCache","eventRegistrations_","indexFilter","getNodeFilter","processor_","ViewProcessor","initialServerCache","initialEventCache","newServerCache","newEventCache","viewCache_","eventGenerator_","EventGenerator","cache","path_1","registration","maybeEvent","remaining","existing","completeServerCache","oldViewCache","assertIndexed","generateEventsForChanges_","changes","initialChanges","generateEventsForChanges","ChildChangeAccumulator_1","CompleteChildSource_1","ProcessorResult","filter_","newViewCache","filterServerNode","ChildChangeAccumulator","overwrite","applyUserOverwrite_","applyServerOverwrite_","applyUserMerge_","applyServerMerge_","revertUserWrite_","ackUserWrite_","listenComplete_","getChanges","maybeAddValueEvent_","isLeafOrEmpty","oldCompleteSnap","generateEventCacheAfterServerEvent_","changePath","oldEventSnap","shadowingWrite","serverNode","completeEventChildren","completeNode","oldEventNode","updatedPriority","calcEventCacheAfterServerOverwrite","childChangePath","newEventChild","eventChildUpdate","calcCompleteChild","changedSnap","oldServerSnap","serverFilter","newServerNode","NO_COMPLETE_CHILD_SOURCE","WriteTreeCompleteChildSource","getCompleteChild","newEventSnap","cacheHasChild_","curViewCache","writePath","applyMerge_","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","oldServerNode","oldEventCache","serverChildren","changeMap_","oldChange","oldType","getValues","NoCompleteChildSource_","getChildAfterChild","writes_","optCompleteServerCache_","completeServerData","nodes","calcIndexedSlice","eventRegistrations","moves","generateEventsForType_","registrations","filteredChanges","compareChanges_","materializedChange","materializeSingleChange_","aWrapped","bWrapped","CompoundWrite_1","visibleWrites_","CompoundWrite","allWrites_","lastWriteId_","WriteTreeRef","addWrite","addWrites","record","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","recordContainsPath_","resetTree_","getCompleteWriteData","getCompleteNode","treePath","includeHiddenWrites","childCompoundWrite","hasCompleteWrite","mergeAtPath","layerTree_","layeredCache","shadowingNode","subMerge","completeServerChildren","completeChildren","topLevelSet","merge_1","getCompleteChildren","existingEventSnap","existingServerSnap","childMerge","toIterate","writeRecord","findKey","DefaultFilter_","writes","treeRoot","compoundWrite","deepNode","treePath_","writeTree_","existingServerCache","rootmost","rootMostPath","newWrite","applySubtreeWrite_","priorityWrite_1","rootNode_","newSnapshotNode","app_","removeTokenChangeListener","errorMessage","counters_","amount","deepCopy","FIRST_STATS_MIN_TIME","FIRST_STATS_MAX_TIME","collection","statsToReport_","reportStats_","reportedStats","haveStatsToReport","eventLists_","recursionDepth_","eventDataList","currList","eventPath","EventList","raiseQueuedEventsMatchingPredicate_","sentAll","eventList","raise","events_","eventFn","EventEmitter_1","hidden","visibilityChange","online_","BrowserPollConnection_1","WebSocketConnection_1","initTransports_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports_1","ALL_TRANSPORTS","transport","pendingResponses","currentResponseNum","closeAfterResponse","onClose","responseNum","requestNum","_loop_1","toProcess","this_1","_loop_2","getListenId_","listenId","thisListen","queryStringParamaters","toRestQueryStringParameters","restRequest_","queryStringParameters","authTokenData","authToken","querystring","xhr","XMLHttpRequest","responseText","LimitedFilter_1","RangedFilter_1","limitSet_","startSet_","startNameSet_","endSet_","endNameSet_","limit_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","isViewFromLeft","WIRE_PROTOCOL_CONSTANTS_","VIEW_FROM_LEFT","getLimit","copy_","newLimit","VIEW_FROM_RIGHT","WIRE_PROTOCOL_CONSTANTS","INDEX_START_VALUE","INDEX_START_NAME","INDEX_END_VALUE","INDEX_END_NAME","LIMIT","viewFrom","VIEW_FROM","INDEX","LimitedFilter","REST_CONSTANTS","REST_QUERY_CONSTANTS_","qs","ORDER_BY","START_AT","END_AT","LIMIT_TO_FIRST","LIMIT_TO_LAST","rangedFilter_","reverse_","fullLimitUpdateChild_","indexCompare_1","foundStartPost","changeAccumulator","indexCmp_1","newChildNamedNode","windowBoundary","inRange","oldChildSnap","compareNext","TransactionStatus","Tree_1","MAX_TRANSACTION_RETRIES_","transactionQueueTree_","Tree","valueCallback","watchRef","order","retryCount","unwatcher","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","getLatestState_","RUN","queueNode","subTree","nodeQueue","setValue","priorityForNode","sendReadyTransactions_","excludeSets","pruneCompletedTransactionsBelowNode_","queue","buildTransactionQueue_","sendTransactionQueue_","setsToIgnore","txn","latestState","snapToSend","latestHash","SENT","dataToSend","pathToSend","COMPLETED","SENT_NEEDS_ABORT","NEEDS_ABORT","rootMostTransactionNode","getAncestorTransactionNode_","rerunTransactionQueue_","abortTransaction","currentNode","newDataNode","oldWriteId","newNodeResolved","transactionNode","transactionQueue","aggregateTransactionQueuesForNode_","to","from","forEachAncestor","abortTransactionsOnNode_","forEachDescendant","lastSent","TreeNode","childCount","name_","parent_","pathObj","updateParents_","includeSelf","childrenFirst","forEachImmediateDescendantWithValue","updateChild_","childEmpty","childExists","forceLongPolling","forceWebSockets","setSecurityDebugCallback","interceptServerData","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","hijackHash","newHash","oldPut","opt_onComplete","opt_hash","ConnectionTarget","listens","firebaseRef","combineLatest_1","ArrayObservable_1","isArray_1","OuterSubscriber_1","subscribeToResult_1","none","project","ArrayObservable","CombineLatestOperator","CombineLatestSubscriber","destination","active","_next","_complete","toRespond","subscribeToResult","notifyComplete","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","_tryProject","OuterSubscriber","async_1","auditTime_1","duration","scheduler","audit_1","timer_1","timer","tryCatch_1","errorObject_1","durationSelector","AuditOperator","AuditSubscriber","hasValue","throttled","tryCatch","errorObject","innerSubscription","closed","clearThrottle","TimerObservable_1","TimerObservable","isNumeric_1","Observable_1","isScheduler_1","isDate_1","dueTime","period","isNumeric","isScheduler","isDate","initialDelay","dispatch","state","schedule","_subscribe"],"mappings":"mDA4BM,SAAAA,EAA8BC,GAAM,OAAOC,EAAA,IAAQ,GAAIA,EAAA,IAAQ,UAAW,GAAKC,WAAY,KAAOF,GAAAA,GAAQC,EAAA,KAAS,EAAG,MAAO,SAAUD,GAAAA,GAAQC,EAAA,EAAQ,EAAG,EAAG,KAAM,KAAM,GAAI,mBAAqB,EAAG,oBAAqB,OAAQ,EAAG,gBAAiB,OAAQ,KAAM,KAAME,EAAA,EAAmBA,EAAA,IAAyBF,EAAA,EAAQ,EAAG,QAAS,KAAM,EAAGG,EAAA,GAAaC,EAAA,EAAWC,EAAA,EAAaC,EAAA,EAAkBN,EAAA,EAAeA,EAAA,EAAaO,EAAA,EAAQC,EAAA,EAAaR,EAAA,GAAY,EAAGS,EAAA,IAAqB,EAAGC,EAAA,IAAoB,KAAM,OAAQX,GAAAA,GAAQC,EAAA,KAAS,EAAG,GAAI,eAAgBD,GAAAA,GAAQC,EAAA,KAAS,EAAG,GAAI,WAAYD,GAAAA,GAAQC,EAAA,EAAQ,EAAG,EAAG,KAAM,EAAG,GAAI,QAAS,KAAM,YAAa,KAAM,KAAM,KAAM,KAAM,QAASD,GAAAA,GAAQC,EAAA,KAAS,EAAG,MAAO,iBAAkBD,GAAAA,GAAQC,EAAA,KAAS,EAAG,MAAO,kBAAmBD,GAAAA,GAAQC,EAAA,EAAQ,EAAG,IAAK,EAAG,IAAK,MAAO,IAAK,KAAM,EAAG,QAAS,KAAM,QAAS,KAAM,KAAM,KAAM,KAAM,QAASD,GAAAA,GAAQC,EAAA,KAAS,EAAG,MAAO,mBAAoBD,GAAAA,GAAQC,EAAA,KAAS,EAAG,MAAO,iBAAkBD,GAAAA,GAAQC,EAAA,EAAQ,GAAI,EAAG,KAAM,KAAM,GAAI,QAAS,QAAS,gCAAiC,KAAM,KAAM,KAAM,KAAM,QAASD,GAAAA,GAAQC,EAAA,KAAS,EAAG,MAAO,qBAAsBD,GAAAA,GAAQC,EAAA,EAAQ,GAAI,EAAG,KAAM,KAAM,GAAI,aAAc,QAAS,SAAU,KAAM,KAAM,KAAM,KAAM,OAAQA,EAAA,EAAQ,GAAI,MAAO,KAAM,EAAGW,EAAA,KAAc,KAAM,OAAQZ,GAAAA,GAAQC,EAAA,KAAS,EAAG,MAAO,yBAA0BD,GAAAA,GAAQC,EAAA,EAAQ,GAAI,EAAG,KAAM,KAAM,GAAI,YAAa,QAAS,QAAS,KAAM,KAAM,KAAM,KAAM,OAAQA,EAAA,EAAQ,GAAI,MAAO,KAAM,EAAGY,EAAA,KAAa,KAAM,OAAQb,GAAAA,GAAQC,EAAA,KAAS,EAAG,MAAO,6BAA8BD,GAAAA,GAAQC,EAAA,EAAQ,GAAI,EAAG,KAAM,KAAM,EAAG,YAAa,QAAS,QAAS,KAAM,KAAM,KAAM,KAAM,OAAQA,EAAA,EAAQ,GAAI,MAAO,KAAM,EAAGa,EAAA,KAAa,KAAM,OAAQd,GAAAA,GAAQC,EAAA,KAAS,EAAG,MAAO,6BAA8BD,GAAAA,GAAQC,EAAA,EAAQ,GAAI,EAAG,KAAM,KAAM,EAAG,WAAY,QAAS,KAAM,QAAS,aAAc,aAAc,KAAM,QAAS,KAAM,OAAQ,QAAS,OAAQ,KAAM,UAAW,SAAUc,EAAIC,EAAIC,GAAU,IAAIC,GAAK,EAA8B,GAAK,UAAYF,EAAK,CAE7/DE,GAD8B,IAD27DH,EAAGI,UAC58DC,WACFF,EAChB,OAAOA,GAAOG,EAAA,EAAmBA,EAAA,IAAyBpB,EAAA,EAAQ,GAAI,QAAS,KAAM,EAAGqB,EAAA,IAAc,EAAG,IAAKjB,EAAA,EAAWJ,EAAA,EAAeA,EAAA,IAAgBsB,OAAQ,EAAG,SAAUC,MAAO,EAAG,QAASC,OAAQ,EAAG,SAAUC,OAAQ,EAAG,UAAY,OAAQ1B,GAAAA,GAAQC,EAAA,KAAS,EAAG,GAAI,YAAaD,GAAAA,GAAQC,EAAA,KAAS,EAAG,MAAO,6BAA8BD,GAAAA,GAAQC,EAAA,KAAS,EAAG,MAAO,yBAA0BD,GAAAA,GAAQC,EAAA,KAAS,EAAG,MAAO,qBAAsBD,GAAAA,GAAQC,EAAA,KAAS,EAAG,MAAO,iBAAkBD,GAAAA,GAAQC,EAAA,KAAS,EAAG,MAAO,aAAcD,GAAAA,GAAQC,EAAA,KAAS,EAAG,GAAI,SAAUD,GAAAA,GAAQC,EAAA,KAAS,EAAG,MAAO,WAAY,SAAU0B,EAAKZ,GAAiGY,EAAIZ,EAAI,GAAI,EAAvF,WAA4B,MAAuB,GAAoB,KAAmE,SAAUY,EAAKZ,GAAqGY,EAAIZ,EAAI,EAAG,EAA1Fd,EAAA,IAAQc,EAAI,GAAGa,iBAAkC3B,EAAA,IAAQc,EAAI,GAAGc,mGClB72BC,SAAgB,WAChB,SAAAA,EAAsBC,EAASC,EAAWC,EAAaC,EAAUC,GAC7D,IAAIC,EAAQC,KACZA,KAAKN,QAAUA,EACfM,KAAKL,UAAYA,EACjBK,KAAKJ,YAAcA,EACnBI,KAAKH,SAAWA,EAChBG,KAAKF,KAAOA,EACZE,KAAKC,SACLD,KAAKE,gBAAiB,EAItBF,KAAKG,WAAcC,YAAe,qBAAsBC,YAAe,MAAOC,UAAcpB,MAAS,YAAeqB,UAAa,MAASC,MAAS,QAAYJ,YAAe,WAAYC,YAAe,gBAAiBC,UAAcpB,MAAS,cAAkBkB,YAAe,OAAQC,YAAe,MAAOC,UAAcG,OAAU,SAAYD,MAAS,QAAWE,WAAc,QAAYN,YAAe,OAAQC,YAAe,gBAAiBC,UAAcK,IAAO,cAAkBP,YAAe,gBAAiBC,YAAe,gBAAiBC,UAAcC,UAAa,MAASC,MAAS,QAAYJ,YAAe,0BAA2BC,YAAe,MAAOC,UAAcK,IAAO,YAAeD,WAAc,OAAUH,UAAa,OAAUC,MAAS,WAAeJ,YAAe,QAASC,YAAe,MAAOC,UAAcpB,MAAS,cACz0Bc,KAAKY,eACL,IAAIC,EAAeb,KAAKJ,YAAYkB,QAChCC,QAAS,WACThD,QAAS,KAEb8C,EAAaG,UACbhB,KAAKiB,WAAajB,KAAKL,UAAUuB,IAAI,cACrClB,KAAKF,KAAKqB,KAAK,SAAWC,OAClBC,aAAc,aACdC,QAASC,SAASvB,KAAKiB,eACtBO,UAAU,SAAUC,GACzB1B,EAAME,MAAQwB,EACd1B,EAAM2B,mBACNb,EAAa9B,YAmGrB,OAhGAU,EAAakC,UAAUC,eAAiB,aAExCnC,EAAakC,UAAUD,iBAAmB,WACtC,IACIG,GACAC,OAFS,IAAIC,OAAOC,KAAKC,OAAO,mBAAoB,oBAGpDC,KAAM,GACNC,OAAQnC,KAAKG,SACbiC,UAAWL,OAAOC,KAAKK,UAAUC,QACjCC,kBAAkB,GAEtBvC,KAAKwC,IAAM,IAAIT,OAAOC,KAAKS,IAAIzC,KAAKnC,WAAW6E,cAAeb,GAC9D7B,KAAK2C,mBAETlD,EAAakC,UAAUgB,gBAAkB,WACrC,IAAK,IAAIC,EAAK,EAAGC,EAAK7C,KAAKC,MAAO2C,EAAKC,EAAGC,OAAQF,IAAM,CACpD,IAAI3C,EAAQ4C,EAAGD,GACXG,EAAW,IAAIhB,OAAOC,KAAKC,OAAOhC,EAAM+C,IAAK/C,EAAMgD,KACnDC,EAAY,IAAInB,OAAOC,KAAKmB,QAC5BJ,SAAUA,EACVK,UAAWrB,OAAOC,KAAKqB,UAAUC,KACjCpD,gBAAgB,EAChBqD,MAAOtD,EAAMuD,KACbC,MAAOxD,EAAMwD,MACbC,IAAKzD,EAAMyD,IACXC,MAAO1D,EAAM0D,MAGbC,MACIC,IAAK,0BAELC,KAAM,IAAI/B,OAAOC,KAAK+B,KAAK,GAAI,IAE/BC,WAAY,IAAIjC,OAAOC,KAAK+B,KAAK,GAAI,IAErCE,OAAQ,IAAIlC,OAAOC,KAAKkC,MAAM,EAAG,GAEjCC,OAAQ,IAAIpC,OAAOC,KAAKkC,MAAM,GAAI,IAClCE,YAAa,IAAIrC,OAAOC,KAAKkC,MAAM,GAAI,KAE3CG,YAAa,IAAItC,OAAOC,KAAKkC,MAAM,GAAI,MAE3ChB,EAAUoB,OAAOtE,KAAKwC,KACtBxC,KAAKuE,sBAAsBrB,GAC3BlD,KAAKwC,IAAIgC,UAAUzB,KAG3BtD,EAAakC,UAAU4C,sBAAwB,SAAUE,GACrD,IAAI1E,EAAQC,KACR0E,EAAoB,2EAEUD,EAAOlB,MAAQ,2BACtBkB,EAAOd,MAAQ,qBAAuBc,EAAOhB,MAAQ,uBAAyBgB,EAAOf,IAAM,mBAIlHiB,EAAa,IAAI5C,OAAOC,KAAK4C,WAIjCD,EAAWE,WAAWH,GACtBD,EAAOK,YAAY,QAAS,WACxB/E,EAAMgF,sBACNJ,EAAWK,KAAKjF,EAAMyC,IAAKiC,KAQ/BzE,KAAKY,YAAYqE,KAAKN,IAE1BlF,EAAakC,UAAUuD,YAAc,WACjCC,QAAQC,IAAI,gBAEhB3F,EAAakC,UAAUoD,oBAAsB,WACzC,IAAK,IAAInC,EAAK,EAAGC,EAAK7C,KAAKY,YAAagC,EAAKC,EAAGC,OAAQF,IAAM,CAC3CC,EAAGD,GACTyC,UAGjB5F,EAAakC,UAAU5C,QAAU,WAC7BiB,KAAKH,SAASd,WAaXU,EA9HQ,ICJf6F,EAAsB,WAgBtB,OAfA,aADqB,oNFiBrBC,EAA0B3H,EAAA,GAAU4H,cAAe,EAAGrD,UAA6BsD,UAOnFC,EAAwB9H,EAAA,EAAQ,iBAAkB6B,EADhD,SAAmC9B,GAAM,OAAOC,EAAA,IAAQ,IAAKD,GAAAA,GAAQC,EAAA,EAAQ,EAAG,EAAG,KAAM,KAAM,EAAG,oBAAsB,KAAM,KAAM,KAAMF,EAAqB6H,IAA2B3H,EAAA,EAAQ,EAAG,MAAO,KAAM,EAAG6B,GAAmBnB,EAAA,EAAkBqH,EAAA,EAAeC,EAAA,EAAuBvH,EAAA,EAAmBwH,EAAA,GAA0B,KAAM,OAAQ,KAAM,iDGhCvWC,EAAAC,EAAAC,EAAA,8BAAA,WAAA,OAAAC,IAuBA,IAAIA,EAA8BrI,EAAA,EAAQ0H,KAA2B,SAAU3H,GAAM,OAAOC,EAAA,KAASA,EAAA,IAAQ,IAAKA,EAAA,EAA6BA,EAAA,IAAuC,GAAIsI,EAAA,EAA4BC,EAAA,EAAsBC,EAAA,EAAsBC,EAAA,EAAwBC,EAAA,EAAsBC,EAAA,EAAuBC,EAAA,EAAwBC,EAAA,EAA2BC,EAAA,EAAuBhB,KAA8B,EAAG9H,EAAA,GAA8BA,EAAA,IAAkBA,EAAA,IAAQ,KAAM+I,EAAA,EAAoBA,EAAA,GAA2B/I,EAAA,GAAe,EAAG+I,EAAA,KAAW/I,EAAA,IAAQ,KAAMgJ,EAAA,EAAQA,EAAA,MAAahJ,EAAA,IAAQ,KAAMgJ,EAAA,EAAiBA,EAAA,MAAsBhJ,EAAA,IAAQ,IAAK+I,EAAA,EAAkBA,EAAA,MAAuB/I,EAAA,IAAQ,IAAKgJ,EAAA,EAASA,EAAA,MAAchJ,EAAA,IAAQ,IAAKgJ,EAAA,EAAiBA,EAAA,MAAsBhJ,EAAA,IAAQ,IAAKgJ,EAAA,EAAyBA,EAAA,MAA8BhJ,EAAA,IAAQ,IAAKiJ,EAAA,EAAiBA,EAAA,MAAsBjJ,EAAA,IAAQ,IAAKiJ,EAAA,EAAqBA,EAAA,MAA0BjJ,EAAA,IAAQ,IAAK0H,EAAuBA,MAA4B1H,EAAA,IAAQ,IAAKkJ,EAAA,EAAuBrH,4CCP1jCsH,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAArB,EAAA,KACAsB,EAAAtB,EAAA,KACAuB,EAAAvB,EAAA,KACAwB,EAAAxB,EAAA,KACAyB,EAAAzB,EAAA,KACA0B,EAAA1B,EAAA,KACA2B,EAAA3B,EAAA,KACA4B,EAAA5B,EAAA,KAKAmB,EAAAU,cAAA,WACA,IAAAC,EAAA,EACA,OAAA,WACA,OAAAA,KAHA,GAWAX,EAAAY,KAAA,SAAAC,GACA,IAAAC,EAAAR,EAAAS,kBAAAF,GACAD,EAAA,IAAAP,EAAAW,KACAJ,EAAAK,OAAAH,GACA,IAAAI,EAAAN,EAAAO,SACA,OAAAf,EAAAgB,OAAAC,gBAAAH,IAOA,IAAAI,EAAA,WAEA,IAAA,IADAC,KACA5F,EAAA,EAAoBA,EAAA6F,UAAA3F,OAAuBF,IAC3C4F,EAAA5F,GAAA6F,UAAA7F,GAGA,IAAA,IADA8F,EAAA,GACAC,EAAA,EAAmBA,EAAAH,EAAA1F,OAAqB6F,IACxCC,MAAAC,QAAAL,EAAAG,KACAH,EAAAG,IACA,iBAAAH,EAAAG,IACA,iBAAAH,EAAAG,GAAA7F,OACA4F,GAAAH,EAAAO,MAAA,KAAAN,EAAAG,IAGAD,GADA,iBAAAF,EAAAG,GACAnB,EAAAuB,UAAAP,EAAAG,IAGAH,EAAAG,GAEAD,GAAA,IAEA,OAAAA,GAMAzB,EAAA+B,OAAA,KAMA,IAAAC,GAAA,EAMAhC,EAAAiC,cAAA,SAAAC,EAAAC,GACAjC,EAAAkC,QAAAD,IAAA,IAAAD,IAAA,IAAAA,EAAA,+CACA,IAAAA,GACA,oBAAAhE,UACA,mBAAAA,QAAAC,IACA6B,EAAA+B,OAAA7D,QAAAC,IAAAkE,KAAAnE,SAEA,iBAAAA,QAAAC,MAEA6B,EAAA+B,OAAA,SAAAN,GACAvD,QAAAC,IAAAsD,MAIAU,GACA3B,EAAA8B,eAAAC,IAAA,mBAAA,IAEA,mBAAAL,EACAlC,EAAA+B,OAAAG,GAGAlC,EAAA+B,OAAA,KACAvB,EAAA8B,eAAAE,OAAA,qBAOAxC,EAAA7B,IAAA,WAEA,IAAA,IADAoD,KACA5F,EAAA,EAAoBA,EAAA6F,UAAA3F,OAAuBF,IAC3C4F,EAAA5F,GAAA6F,UAAA7F,GAOA,IALA,IAAAqG,IACAA,GAAA,EACA,OAAAhC,EAAA+B,SAAA,IAAAvB,EAAA8B,eAAArI,IAAA,oBACA+F,EAAAiC,eAAA,IAEAjC,EAAA+B,OAAA,CACA,IAAAN,EAAAH,EAAAO,MAAA,KAAAN,GACAvB,EAAA+B,OAAAN,KAOAzB,EAAAyC,WAAA,SAAAC,GACA,OAAA,WAEA,IAAA,IADAnB,KACA5F,EAAA,EAAwBA,EAAA6F,UAAA3F,OAAuBF,IAC/C4F,EAAA5F,GAAA6F,UAAA7F,GAEAqE,EAAA7B,IAAA0D,WAAA,GAAAa,GAAAC,OAAApB,MAMAvB,EAAA4C,MAAA,WAEA,IAAA,IADArB,KACA5F,EAAA,EAAoBA,EAAA6F,UAAA3F,OAAuBF,IAC3C4F,EAAA5F,GAAA6F,UAAA7F,GAEA,GAAA,oBAAAuC,QAAA,CACA,IAAAuD,EAAA,4BAAAH,EAAAO,WAAA,EAAAN,QACA,IAAArD,QAAA0E,MACA1E,QAAA0E,MAAAnB,GAGAvD,QAAAC,IAAAsD,KAOAzB,EAAA6C,MAAA,WAEA,IAAA,IADAtB,KACA5F,EAAA,EAAoBA,EAAA6F,UAAA3F,OAAuBF,IAC3C4F,EAAA5F,GAAA6F,UAAA7F,GAEA,IAAA8F,EAAAH,EAAAO,WAAA,EAAAN,GACA,MAAA,IAAAuB,MAAA,yBAAArB,IAKAzB,EAAA+C,KAAA,WAEA,IAAA,IADAxB,KACA5F,EAAA,EAAoBA,EAAA6F,UAAA3F,OAAuBF,IAC3C4F,EAAA5F,GAAA6F,UAAA7F,GAEA,GAAA,oBAAAuC,QAAA,CACA,IAAAuD,EAAA,qBAAAH,EAAAO,WAAA,EAAAN,QACA,IAAArD,QAAA6E,KACA7E,QAAA6E,KAAAtB,GAGAvD,QAAAC,IAAAsD,KAQAzB,EAAAgD,mBAAA,WAEA,oBAAAC,QACAA,OAAAC,UACAD,OAAAC,SAAAC,WACA,IAAAF,OAAAC,SAAAC,SAAAC,QAAA,WACApD,EAAA+C,KAAA,8FAOA/C,EAAAqD,2BAAA,SAAAC,GACAtD,EAAA+C,KAAAO,EACA,qEAQAtD,EAAAuD,oBAAA,SAAA/E,GACA,MAAA,iBAAAA,IACAA,GAAAA,GACAA,GAAAgF,OAAAC,mBACAjF,GAAAgF,OAAAE,oBAKA1D,EAAA2D,oBAAA,SAAAC,GACA,GAAAnD,EAAAoD,aAAA,aAAAC,SAAAC,WACAH,QAEA,CAGA,IAAAI,GAAA,EACAC,EAAA,WACAH,SAAAI,KAIAF,IACAA,GAAA,EACAJ,KALAO,WAAAF,EAAAG,KAAAC,MAAA,MAQAP,SAAAQ,kBACAR,SAAAQ,iBAAA,mBAAAL,GAAA,GAEAhB,OAAAqB,iBAAA,OAAAL,GAAA,IAEAH,SAAAS,cAEAT,SAAAS,YAAA,qBAAA,WACA,aAAAT,SAAAC,YACAE,MAGAhB,OAAAsB,YAAA,SAAAN,MAWAjE,EAAAwE,SAAA,aAKAxE,EAAAyE,SAAA,aAOAzE,EAAA0E,YAAA,SAAAC,EAAAC,GACA,GAAAD,IAAAC,EACA,OAAA,EAEA,GAAAD,IAAA3E,EAAAwE,UAAAI,IAAA5E,EAAAyE,SACA,OAAA,EAEA,GAAAG,IAAA5E,EAAAwE,UAAAG,IAAA3E,EAAAyE,SACA,OAAA,EAGA,IAAAI,EAAA7E,EAAA8E,YAAAH,GAAAI,EAAA/E,EAAA8E,YAAAF,GACA,OAAA,OAAAC,EACA,OAAAE,EACAF,EAAAE,GAAA,EAAAJ,EAAA9I,OAAA+I,EAAA/I,OAAAgJ,EAAAE,GAGA,EAGA,OAAAA,EACA,EAGAJ,EAAAC,GAAA,EAAA,GASA5E,EAAAgF,cAAA,SAAAL,EAAAC,GACA,OAAAD,IAAAC,EACA,EAEAD,EAAAC,GACA,EAGA,GAQA5E,EAAAiF,WAAA,SAAAC,EAAAC,GACA,GAAAA,GAAAD,KAAAC,EACA,OAAAA,EAAAD,GAGA,MAAA,IAAApC,MAAA,yBAAAoC,EAAA,gBAAA3E,EAAAuB,UAAAqD,KAOAnF,EAAAoF,kBAAA,SAAAD,GACA,GAAA,iBAAAA,GAAA,OAAAA,EACA,OAAA5E,EAAAuB,UAAAqD,GACA,IAAAE,KACA,IAAA,IAAAC,KAAAH,EACAE,EAAArH,KAAAsH,GAGAD,EAAAE,OAEA,IAAA,IADAL,EAAA,IACAxD,EAAA,EAAmBA,EAAA2D,EAAAxJ,OAAiB6F,IACpC,IAAAA,IACAwD,GAAA,KACAA,GAAA3E,EAAAuB,UAAAuD,EAAA3D,IACAwD,GAAA,IACAA,GAAAlF,EAAAoF,kBAAAD,EAAAE,EAAA3D,KAGA,OADAwD,GAAA,KASAlF,EAAAwF,kBAAA,SAAA3E,EAAA4E,GACA,IAAAC,EAAA7E,EAAAhF,OACA,GAAA6J,GAAAD,EACA,OAAA5E,GAGA,IAAA,IADA8E,KACAC,EAAA,EAAmBA,EAAAF,EAASE,GAAAH,EAE5BE,EAAA3H,KADA4H,EAAAH,EAAAC,EACA7E,EAAAgF,UAAAD,EAAAF,GAGA7E,EAAAgF,UAAAD,EAAAA,EAAAH,IAGA,OAAAE,GAQA3F,EAAA8F,KAAA,SAAAX,EAAAvB,GACA,GAAAjC,MAAAC,QAAAuD,GACA,IAAA,IAAAzD,EAAA,EAAuBA,EAAAyD,EAAAtJ,SAAgB6F,EACvCkC,EAAAlC,EAAAyD,EAAAzD,SAUAvB,EAAA4F,QAAAZ,EAAA,SAAAD,EAAAc,GAAiD,OAAApC,EAAAoC,EAAAd,MASjDlF,EAAAiG,aAAA,SAAAC,EAAAC,GACA,OAAAA,EAAAD,EAAA7D,KAAA8D,GAAAD,GASAlG,EAAAoG,sBAAA,SAAAC,GACAnG,EAAAkC,QAAApC,EAAAuD,oBAAA8C,GAAA,uBACA,IACAC,EAAAC,EAAAC,EAAAC,EAAA/E,EAAAgF,EAAA7F,EAyBA,IAtBA,IAAAwF,GACAE,EAAA,EACAC,EAAA,EACAF,EAAA,EAAAD,IAAAM,EAAAA,EAAA,EAAA,IAGAL,EAAAD,EAAA,GACAA,EAAAjC,KAAAwC,IAAAP,KACAjC,KAAAyC,IAAA,GAAA,OAGAN,GADAE,EAAArC,KAAA0C,IAAA1C,KAAAC,MAAAD,KAAAjG,IAAAkI,GAAAjC,KAAA2C,KAbA,OAAA,KAeAP,EAAApC,KAAA4C,MAAAX,EAAAjC,KAAAyC,IAAA,EAhBA,GAgBAJ,GAAArC,KAAAyC,IAAA,EAhBA,OAoBAN,EAAA,EACAC,EAAApC,KAAA4C,MAAAX,EAAAjC,KAAAyC,IAAA,GAAA,SAIAH,KACAhF,EA1BA,GA0BmBA,EAAGA,GAAA,EACtBgF,EAAA1I,KAAAwI,EAAA,EAAA,EAAA,GACAA,EAAApC,KAAAC,MAAAmC,EAAA,GAEA,IAAA9E,EA9BA,GA8BmBA,EAAGA,GAAA,EACtBgF,EAAA1I,KAAAuI,EAAA,EAAA,EAAA,GACAA,EAAAnC,KAAAC,MAAAkC,EAAA,GAEAG,EAAA1I,KAAAsI,EAAA,EAAA,GACAI,EAAAO,UACApG,EAAA6F,EAAAQ,KAAA,IAEA,IAAAC,EAAA,GACA,IAAAzF,EAAA,EAAeA,EAAA,GAAQA,GAAA,EAAA,CACvB,IAAA0F,EAAA9M,SAAAuG,EAAAwG,OAAA3F,EAAA,GAAA,GAAA4F,SAAA,IACA,IAAAF,EAAAvL,SACAuL,EAAA,IAAAA,GACAD,GAAAC,EAEA,OAAAD,EAAAI,eAOAvH,EAAAwH,+BAAA,WACA,QAAA,iBAAAvE,SACAA,OAAA,SACAA,OAAA,OAAA,WACA,UAAAwE,KAAAxE,OAAAC,SAAAwE,QAMA1H,EAAA2H,kBAAA,WAEA,MAAA,iBAAAC,SAAA,iBAAAA,QAAAC,IAQA7H,EAAA8H,mBAAA,SAAAC,EAAA5N,GACA,IAAA6N,EAAA,gBACA,YAAAD,EACAC,EACA,0FAGA,qBAAAD,EACAC,EAAA,6DAEA,eAAAD,IACAC,EAAA,8BAEA,IAAApF,EAAA,IAAAE,MAAAiF,EAAA,OAAA5N,EAAA8N,KAAAX,WAAA,KAAAU,GAEA,OADApF,EAAAmF,KAAAA,EAAAG,cACAtF,GAOA5C,EAAAmI,gBAAA,IAAAC,OAAA,iBAMApI,EAAA8E,YAAA,SAAAjE,GACA,GAAAb,EAAAmI,gBAAAV,KAAA5G,GAAA,CACA,IAAAwH,EAAA7E,OAAA3C,GACA,GAAAwH,IAAA,YAAAA,GAAA,WACA,OAAAA,EAGA,OAAA,MAmBArI,EAAAsI,eAAA,SAAA1E,GACA,IACAA,IAEA,MAAA2C,GAEApC,WAAA,WAOA,MADAnE,EAAA+C,KAAA,yCADAwD,EAAAgC,OAAA,IAEAhC,GACSnC,KAAAC,MAAA,MAWTrE,EAAAwI,iBAAA,SAAAtC,GAEA,IAAA,IADA3E,KACA5F,EAAA,EAAoBA,EAAA6F,UAAA3F,OAAuBF,IAC3C4F,EAAA5F,EAAA,GAAA6F,UAAA7F,GAEA,mBAAAuK,GACAlG,EAAAsI,eAAA,WACApC,EAAArE,WAAA,EAAAN,MAOAvB,EAAAyI,aAAA,WASA,OARA,iBAAAxF,QACAA,OAAA,WACAA,OAAA,UAAA,WACA,IAKAyF,OAAA,6FAAA,GASA1I,EAAA2I,iBAAA,SAAAC,EAAArM,EAAAsM,GACA/I,OAAAC,eAAA6I,EAAArM,GAAyCtC,IAAA4O,KAWzC7I,EAAA8I,sBAAA,SAAAlF,EAAAmF,GACA,IAAAC,EAAA7E,WAAAP,EAAAmF,GAIA,MAHA,iBAAAC,GAAAA,EAAA,OACAA,EAAA,QAEAA,qCCnmBAlJ,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAIC,EAASrB,EAAQ,KACjBsB,EAAStB,EAAQ,KAsNrBmB,EAAQiJ,KAhNkB,WAMtB,SAAAA,EAAcC,EAAcC,GACxB,QAAiB,IAAbA,EAAqB,CACrBpQ,KAAKqQ,QAAUF,EAAaG,MAAM,KAGlC,IAAK,IADDC,EAAS,EACJ5H,EAAI,EAAGA,EAAI3I,KAAKqQ,QAAQvN,OAAQ6F,IACjC3I,KAAKqQ,QAAQ1H,GAAG7F,OAAS,IACzB9C,KAAKqQ,QAAQE,GAAUvQ,KAAKqQ,QAAQ1H,GACpC4H,KAGRvQ,KAAKqQ,QAAQvN,OAASyN,EACtBvQ,KAAKwQ,UAAY,OAGjBxQ,KAAKqQ,QAAUF,EACfnQ,KAAKwQ,UAAYJ,EAwLzB,OArLArJ,OAAOC,eAAekJ,EAAM,SAMxBhP,IAAK,WACD,OAAO,IAAIgP,EAAK,KAEpBO,YAAY,EACZC,cAAc,IAElBR,EAAKvO,UAAUgP,SAAW,WACtB,OAAI3Q,KAAKwQ,WAAaxQ,KAAKqQ,QAAQvN,OACxB,KACJ9C,KAAKqQ,QAAQrQ,KAAKwQ,YAK7BN,EAAKvO,UAAUiP,UAAY,WACvB,OAAO5Q,KAAKqQ,QAAQvN,OAAS9C,KAAKwQ,WAKtCN,EAAKvO,UAAUkP,SAAW,WACtB,IAAIT,EAAWpQ,KAAKwQ,UAIpB,OAHIJ,EAAWpQ,KAAKqQ,QAAQvN,QACxBsN,IAEG,IAAIF,EAAKlQ,KAAKqQ,QAASD,IAKlCF,EAAKvO,UAAUmP,QAAU,WACrB,OAAI9Q,KAAKwQ,UAAYxQ,KAAKqQ,QAAQvN,OACvB9C,KAAKqQ,QAAQrQ,KAAKqQ,QAAQvN,OAAS,GACvC,MAEXoN,EAAKvO,UAAU4M,SAAW,WAEtB,IAAK,IADDwC,EAAa,GACRpI,EAAI3I,KAAKwQ,UAAW7H,EAAI3I,KAAKqQ,QAAQvN,OAAQ6F,IAC1B,KAApB3I,KAAKqQ,QAAQ1H,KACboI,GAAc,IAAM/Q,KAAKqQ,QAAQ1H,IAEzC,OAAOoI,GAAc,KAEzBb,EAAKvO,UAAUqP,mBAAqB,WAEhC,IAAK,IADDD,EAAa,GACRpI,EAAI3I,KAAKwQ,UAAW7H,EAAI3I,KAAKqQ,QAAQvN,OAAQ6F,IAC1B,KAApB3I,KAAKqQ,QAAQ1H,KACboI,GAAc,IAAME,mBAAmBC,OAAOlR,KAAKqQ,QAAQ1H,MAEnE,OAAOoI,GAAc,KAQzBb,EAAKvO,UAAUwP,MAAQ,SAAUC,GAE7B,YADc,IAAVA,IAAoBA,EAAQ,GACzBpR,KAAKqQ,QAAQc,MAAMnR,KAAKwQ,UAAYY,IAK/ClB,EAAKvO,UAAU0P,OAAS,WACpB,GAAIrR,KAAKwQ,WAAaxQ,KAAKqQ,QAAQvN,OAC/B,OAAO,KAEX,IAAK,IADDwO,KACK3I,EAAI3I,KAAKwQ,UAAW7H,EAAI3I,KAAKqQ,QAAQvN,OAAS,EAAG6F,IACtD2I,EAAOrM,KAAKjF,KAAKqQ,QAAQ1H,IAC7B,OAAO,IAAIuH,EAAKoB,EAAQ,IAM5BpB,EAAKvO,UAAU4P,MAAQ,SAAUC,GAE7B,IAAK,IADDF,KACK3I,EAAI3I,KAAKwQ,UAAW7H,EAAI3I,KAAKqQ,QAAQvN,OAAQ6F,IAClD2I,EAAOrM,KAAKjF,KAAKqQ,QAAQ1H,IAC7B,GAAI6I,aAAwBtB,EACxB,IAASvH,EAAI6I,EAAahB,UAAW7H,EAAI6I,EAAanB,QAAQvN,OAAQ6F,IAClE2I,EAAOrM,KAAKuM,EAAanB,QAAQ1H,SAKrC,IAAK,IADD8I,EAAcD,EAAalB,MAAM,KAC5B3H,EAAI,EAAGA,EAAI8I,EAAY3O,OAAQ6F,IAChC8I,EAAY9I,GAAG7F,OAAS,GACxBwO,EAAOrM,KAAKwM,EAAY9I,IAGpC,OAAO,IAAIuH,EAAKoB,EAAQ,IAK5BpB,EAAKvO,UAAU+P,QAAU,WACrB,OAAO1R,KAAKwQ,WAAaxQ,KAAKqQ,QAAQvN,QAO1CoN,EAAKyB,aAAe,SAAUC,EAAWC,GACrC,IAAIC,EAAQF,EAAUjB,WAAYoB,EAAQF,EAAUlB,WACpD,GAAc,OAAVmB,EACA,OAAOD,EAEN,GAAIC,IAAUC,EACf,OAAO7B,EAAKyB,aAAaC,EAAUf,WAAYgB,EAAUhB,YAGzD,MAAM,IAAI9G,MAAM,8BACZ8H,EACA,8BAEAD,EACA,MAQZ1B,EAAK8B,aAAe,SAAUC,EAAMC,GAGhC,IAAK,IAFDC,EAAWF,EAAKd,QAChBiB,EAAYF,EAAMf,QACbxI,EAAI,EAAGA,EAAIwJ,EAASrP,QAAU6F,EAAIyJ,EAAUtP,OAAQ6F,IAAK,CAC9D,IAAI0J,EAAMlL,EAAOwE,YAAYwG,EAASxJ,GAAIyJ,EAAUzJ,IACpD,GAAY,IAAR0J,EACA,OAAOA,EAEf,OAAIF,EAASrP,SAAWsP,EAAUtP,OACvB,EACJqP,EAASrP,OAASsP,EAAUtP,QAAU,EAAI,GAOrDoN,EAAKvO,UAAU2Q,OAAS,SAAUC,GAC9B,GAAIvS,KAAK4Q,cAAgB2B,EAAM3B,YAC3B,OAAO,EAEX,IAAK,IAAIjI,EAAI3I,KAAKwQ,UAAWgC,EAAID,EAAM/B,UAAW7H,GAAK3I,KAAKqQ,QAAQvN,OAAQ6F,IAAK6J,IAC7E,GAAIxS,KAAKqQ,QAAQ1H,KAAO4J,EAAMlC,QAAQmC,GAClC,OAAO,EAGf,OAAO,GAOXtC,EAAKvO,UAAU8Q,SAAW,SAAUF,GAChC,IAAI5J,EAAI3I,KAAKwQ,UACTgC,EAAID,EAAM/B,UACd,GAAIxQ,KAAK4Q,YAAc2B,EAAM3B,YACzB,OAAO,EAEX,KAAOjI,EAAI3I,KAAKqQ,QAAQvN,QAAQ,CAC5B,GAAI9C,KAAKqQ,QAAQ1H,KAAO4J,EAAMlC,QAAQmC,GAClC,OAAO,IAET7J,IACA6J,EAEN,OAAO,GAEJtC,EA9Mc,GA2SzBjJ,EAAQyL,eAhF4B,WAKhC,SAAAA,EAAwBxD,EAAMyD,GAC1B3S,KAAK2S,aAAeA,EAEpB3S,KAAK4S,OAAS1D,EAAKiC,QAEnBnR,KAAK6S,YAAcxH,KAAKyH,IAAI,EAAG9S,KAAK4S,OAAO9P,QAC3C,IAAK,IAAI6F,EAAI,EAAGA,EAAI3I,KAAK4S,OAAO9P,OAAQ6F,IACpC3I,KAAK6S,aAAezL,EAAO2L,aAAa/S,KAAK4S,OAAOjK,IAExD3I,KAAKgT,cAgET,OA9DAjM,OAAOC,eAAe0L,EAAgB,kBAElCxR,IAAK,WACD,OAAO,IAEXuP,YAAY,EACZC,cAAc,IAElB3J,OAAOC,eAAe0L,EAAgB,yBAElCxR,IAAK,WACD,OAAO,KAEXuP,YAAY,EACZC,cAAc,IAGlBgC,EAAe/Q,UAAUsD,KAAO,SAAUsM,GAElCvR,KAAK4S,OAAO9P,OAAS,IACrB9C,KAAK6S,aAAe,GAExB7S,KAAK4S,OAAO3N,KAAKsM,GACjBvR,KAAK6S,aAAezL,EAAO2L,aAAaxB,GACxCvR,KAAKgT,eAETN,EAAe/Q,UAAUsR,IAAM,WAC3B,IAAIC,EAAOlT,KAAK4S,OAAOK,MACvBjT,KAAK6S,aAAezL,EAAO2L,aAAaG,GAEpClT,KAAK4S,OAAO9P,OAAS,IACrB9C,KAAK6S,aAAe,IAG5BH,EAAe/Q,UAAUqR,YAAc,WACnC,GAAIhT,KAAK6S,YAAcH,EAAeS,sBAClC,MAAM,IAAIpJ,MAAM/J,KAAK2S,aACjB,8BACAD,EAAeS,sBACf,WACAnT,KAAK6S,YACL,MAER,GAAI7S,KAAK4S,OAAO9P,OAAS4P,EAAeU,eACpC,MAAM,IAAIrJ,MAAM/J,KAAK2S,aACjB,iEACAD,EAAeU,eACf,gCACApT,KAAKqT,kBAQjBX,EAAe/Q,UAAU0R,cAAgB,WACrC,OAA0B,GAAtBrT,KAAK4S,OAAO9P,OACL,GAEJ,gBAAkB9C,KAAK4S,OAAOzE,KAAK,KAAO,KAE9CuE,EA9EwB,qCCnOnC3L,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAKAoM,EACAC,EANAC,EAAA1N,EAAA,GACA2N,EAAA3N,EAAA,KACAqB,EAAArB,EAAA,KACA4N,EAAA5N,EAAA,KACA6N,EAAA7N,EAAA,KAMAmB,EAAA2M,gBAHA,SAAA3G,GACAqG,EAAArG,GAMAhG,EAAA4M,WAHA,SAAA5G,GACAsG,EAAAtG,GAQA,IAAA6G,EAAA,SAAAC,GAEA,SAAAD,IACA,OAAA,OAAAC,GAAAA,EAAAjL,MAAA9I,KAAAyI,YAAAzI,KAuDA,OAzDAwT,EAAAQ,UAAAF,EAAAC,GAOAD,EAAAnS,UAAAsS,QAAA,SAAArI,EAAAC,GACA,IAAAqI,EAAAtI,EAAAuI,KAAAC,cACAC,EAAAxI,EAAAsI,KAAAC,cACAE,EAAAJ,EAAAK,UAAAF,GACA,OAAA,IAAAC,EACAnN,EAAAwE,YAAAC,EAAApI,KAAAqI,EAAArI,MAGA8Q,GAMAR,EAAAnS,UAAA6S,YAAA,SAAAL,GACA,OAAAA,EAAAC,cAAA1C,WAKAoC,EAAAnS,UAAA8S,oBAAA,SAAAC,EAAAC,GACA,OAAAD,EAAAN,cAAA9B,OAAAqC,EAAAP,gBAKAN,EAAAnS,UAAAiT,QAAA,WACA,OAAAlB,EAAAmB,UAAAC,KAKAhB,EAAAnS,UAAAoT,QAAA,WACA,OAAA,IAAArB,EAAAmB,UAAA1N,EAAAuE,SAAA,IAAAiI,EAAAqB,SAAA,kBAAAzB,KAOAO,EAAAnS,UAAAsT,SAAA,SAAAC,EAAA1R,GACA,IAAA2R,EAAA7B,EAAA4B,GACA,OAAA,IAAAxB,EAAAmB,UAAArR,EAAA,IAAAmQ,EAAAqB,SAAA,kBAAAG,KAKArB,EAAAnS,UAAA4M,SAAA,WACA,MAAA,aAEAuF,EA1DA,CA2DCL,EAAA2B,OACDnO,EAAA6M,cAAAA,EACA7M,EAAAoO,eAAA,IAAAvB,oCClFA/M,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAYIoO,EAZA9B,EAAU1N,EAAQ,GAClBqB,EAASrB,EAAQ,KACjBsB,EAAStB,EAAQ,KACjByP,EAAczP,EAAQ,KACtB4N,EAAS5N,EAAQ,KACjB0P,EAAS1P,EAAQ,KACjB2P,EAAkB3P,EAAQ,KAC1B4P,EAAa5P,EAAQ,KACrB6P,EAAa7P,EAAQ,KACrB6N,EAAa7N,EAAQ,KACrB8P,EAAgB9P,EAAQ,KAWxB+P,EAA8B,WAQ9B,SAAAA,EAAsBC,EAAWC,EAAeC,GAC5ChW,KAAK8V,UAAYA,EACjB9V,KAAK+V,cAAgBA,EACrB/V,KAAKgW,UAAYA,EACjBhW,KAAKiW,UAAY,KAMbjW,KAAK+V,eACLP,EAAOU,qBAAqBlW,KAAK+V,eAEjC/V,KAAK8V,UAAUpE,WACfvK,EAAOkC,QAAQrJ,KAAK+V,eAAiB/V,KAAK+V,cAAcrE,UAAW,wCAuX3E,OApXA3K,OAAOC,eAAe6O,EAAc,cAChC3U,IAAK,WACD,OAAQoU,IACHA,EAAa,IAAIO,EAAa,IAAIN,EAAYY,UAAUP,EAAcQ,iBAAkB,KAAMT,EAAWU,SAASC,WAE3H7F,YAAY,EACZC,cAAc,IAGlBmF,EAAalU,UAAU4U,WAAa,WAChC,OAAO,GAGXV,EAAalU,UAAUyS,YAAc,WACjC,OAAOpU,KAAK+V,eAAiBT,GAGjCO,EAAalU,UAAU6U,eAAiB,SAAUC,GAC9C,OAAIzW,KAAK8V,UAAUpE,UAER1R,KAGA,IAAI6V,EAAa7V,KAAK8V,UAAWW,EAAiBzW,KAAKgW,YAItEH,EAAalU,UAAU+U,kBAAoB,SAAUC,GAEjD,GAAkB,cAAdA,EACA,OAAO3W,KAAKoU,cAGZ,IAAI7C,EAAQvR,KAAK8V,UAAU5U,IAAIyV,GAC/B,OAAiB,OAAVpF,EAAiB+D,EAAa/D,GAI7CsE,EAAalU,UAAUiV,SAAW,SAAU1H,GACxC,IAAI2H,EAAQ3H,EAAKyB,WACjB,OAAc,OAAVkG,EACO7W,KACJA,KAAK0W,kBAAkBG,GAAOD,SAAS1H,EAAK2B,aAGvDgF,EAAalU,UAAUmV,SAAW,SAAUH,GACxC,OAAyC,OAAlC3W,KAAK8V,UAAU5U,IAAIyV,IAG9Bd,EAAalU,UAAUoV,qBAAuB,SAAUJ,EAAWK,GAE/D,GADA7P,EAAOkC,OAAO2N,EAAc,8CACV,cAAdL,EACA,OAAO3W,KAAKwW,eAAeQ,GAG3B,IAAIC,EAAY,IAAIvD,EAAOmB,UAAU8B,EAAWK,GAC5CE,OAAc,EAAQC,OAAc,EAAQC,OAAc,EAU9D,OATIJ,EAAatF,WACbwF,EAAclX,KAAK8V,UAAUrM,OAAOkN,GACpCQ,EAAcnX,KAAKgW,UAAUqB,kBAAkBJ,EAAWjX,KAAK8V,aAG/DoB,EAAclX,KAAK8V,UAAUwB,OAAOX,EAAWK,GAC/CG,EAAcnX,KAAKgW,UAAUuB,aAAaN,EAAWjX,KAAK8V,YAE9DsB,EAAcF,EAAYxF,UAAY4D,EAAatV,KAAK+V,cACjD,IAAIF,EAAaqB,EAAaE,EAAaD,IAI1DtB,EAAalU,UAAU6V,YAAc,SAAUtI,EAAM8H,GACjD,IAAIH,EAAQ3H,EAAKyB,WACjB,GAAc,OAAVkG,EACA,OAAOG,EAGP7P,EAAOkC,OAA2B,cAApB6F,EAAKyB,YAAmD,IAArBzB,EAAK0B,YAAmB,8CACzE,IAAI6G,EAAoBzX,KAAK0W,kBAAkBG,GAAOW,YAAYtI,EAAK2B,WAAYmG,GACnF,OAAOhX,KAAK+W,qBAAqBF,EAAOY,IAIhD5B,EAAalU,UAAU+P,QAAU,WAC7B,OAAO1R,KAAK8V,UAAUpE,WAG1BmE,EAAalU,UAAU+V,YAAc,WACjC,OAAO1X,KAAK8V,UAAU6B,SAG1B9B,EAAalU,UAAUsL,IAAM,SAAU2K,GACnC,GAAI5X,KAAK0R,UACL,OAAO,KACX,IAAItF,KACAyL,EAAU,EAAGC,EAAS,EAAGC,GAAiB,EAW9C,GAVA/X,KAAKgY,aAAavC,EAAgBJ,eAAgB,SAAUlJ,EAAK8L,GAC7D7L,EAAID,GAAO8L,EAAUhL,IAAI2K,GACzBC,IACIE,GAAkBlC,EAAazG,gBAAgBV,KAAKvC,GACpD2L,EAASzM,KAAKyH,IAAIgF,EAAQrN,OAAO0B,IAGjC4L,GAAiB,KAGpBH,GAAgBG,GAAkBD,EAAS,EAAID,EAAS,CAEzD,IAAIK,KACJ,IAAK,IAAI/L,KAAOC,EACZ8L,EAAM/L,GAAOC,EAAID,GACrB,OAAO+L,EAMP,OAHIN,IAAiB5X,KAAKoU,cAAc1C,YACpCtF,EAAI,aAAepM,KAAKoU,cAAcnH,OAEnCb,GAIfyJ,EAAalU,UAAUwW,KAAO,WAC1B,GAAuB,OAAnBnY,KAAKiW,UAAoB,CACzB,IAAImC,EAAW,GACVpY,KAAKoU,cAAc1C,YACpB0G,GACI,YACI5C,EAAO6C,iBAAiBrY,KAAKoU,cAAcnH,OAC3C,KACZjN,KAAKgY,aAAavC,EAAgBJ,eAAgB,SAAUlJ,EAAK8L,GAC7D,IAAIK,EAAYL,EAAUE,OACR,KAAdG,IACAF,GAAY,IAAMjM,EAAM,IAAMmM,KAEtCtY,KAAKiW,UAAyB,KAAbmC,EAAkB,GAAKhR,EAAOS,KAAKuQ,GAExD,OAAOpY,KAAKiW,WAGhBJ,EAAalU,UAAU4W,wBAA0B,SAAU5B,EAAWsB,EAAWO,GAC7E,IAAIC,EAAMzY,KAAK0Y,cAAcF,GAC7B,GAAIC,EAAK,CACL,IAAIE,EAAcF,EAAIG,kBAAkB,IAAIlF,EAAOmB,UAAU8B,EAAWsB,IACxE,OAAOU,EAAcA,EAAYnV,KAAO,KAGxC,OAAOxD,KAAK8V,UAAU8C,kBAAkBjC,IAOhDd,EAAalU,UAAUkX,kBAAoB,SAAUC,GACjD,IAAIL,EAAMzY,KAAK0Y,cAAcI,GAC7B,GAAIL,EAAK,CACL,IAAIM,EAASN,EAAIM,SACjB,OAAOA,GAAUA,EAAOvV,KAGxB,OAAOxD,KAAK8V,UAAUiD,UAO9BlD,EAAalU,UAAUqX,cAAgB,SAAUF,GAC7C,IAAIC,EAAS/Y,KAAK6Y,kBAAkBC,GACpC,OAAIC,EACO,IAAIrF,EAAOmB,UAAUkE,EAAQ/Y,KAAK8V,UAAU5U,IAAI6X,IAGhD,MAQflD,EAAalU,UAAUsX,iBAAmB,SAAUH,GAChD,IAAIL,EAAMzY,KAAK0Y,cAAcI,GAC7B,GAAIL,EAAK,CACL,IAAIX,EAASW,EAAIX,SACjB,OAAOA,GAAUA,EAAOtU,KAGxB,OAAOxD,KAAK8V,UAAUgC,UAO9BjC,EAAalU,UAAUuX,aAAe,SAAUJ,GAC5C,IAAIhB,EAAS9X,KAAKiZ,iBAAiBH,GACnC,OAAIhB,EACO,IAAIpE,EAAOmB,UAAUiD,EAAQ9X,KAAK8V,UAAU5U,IAAI4W,IAGhD,MAMfjC,EAAalU,UAAUqW,aAAe,SAAUQ,EAAOW,GACnD,IAAIV,EAAMzY,KAAK0Y,cAAcF,GAC7B,OAAIC,EACOA,EAAIW,iBAAiB,SAAUC,GAClC,OAAOF,EAAOE,EAAY7V,KAAM6V,EAAYlF,QAIzCnU,KAAK8V,UAAUsD,iBAAiBD,IAO/CtD,EAAalU,UAAU2X,YAAc,SAAUR,GAC3C,OAAO9Y,KAAKuZ,gBAAgBT,EAAgBlE,UAAWkE,IAQ3DjD,EAAalU,UAAU4X,gBAAkB,SAAUC,EAAWV,GAC1D,IAAIL,EAAMzY,KAAK0Y,cAAcI,GAC7B,GAAIL,EACA,OAAOA,EAAIc,gBAAgBC,EAAW,SAAUrN,GAAO,OAAOA,IAK9D,IAFA,IAAIsN,EAAWzZ,KAAK8V,UAAUyD,gBAAgBC,EAAUhW,KAAMkQ,EAAOmB,UAAU6E,MAC3EC,EAAOF,EAASG,OACL,MAARD,GAAgBb,EAAgB7E,QAAQ0F,EAAMH,GAAa,GAC9DC,EAASI,UACTF,EAAOF,EAASG,OAEpB,OAAOH,GAOf5D,EAAalU,UAAUmY,mBAAqB,SAAUhB,GAClD,OAAO9Y,KAAK+Z,uBAAuBjB,EAAgB/D,UAAW+D,IAOlEjD,EAAalU,UAAUoY,uBAAyB,SAAUC,EAASlB,GAC/D,IAAIL,EAAMzY,KAAK0Y,cAAcI,GAC7B,GAAIL,EACA,OAAOA,EAAIsB,uBAAuBC,EAAS,SAAU7N,GACjD,OAAOA,IAMX,IAFA,IAAIsN,EAAWzZ,KAAK8V,UAAUiE,uBAAuBC,EAAQxW,KAAMkQ,EAAOmB,UAAU6E,MAChFC,EAAOF,EAASG,OACL,MAARD,GAAgBb,EAAgB7E,QAAQ0F,EAAMK,GAAW,GAC5DP,EAASI,UACTF,EAAOF,EAASG,OAEpB,OAAOH,GAMf5D,EAAalU,UAAU4S,UAAY,SAAUhC,GACzC,OAAIvS,KAAK0R,UACDa,EAAMb,UACC,GAGC,EAGPa,EAAMgE,cAAgBhE,EAAMb,UAC1B,EAEFa,IAAUtL,EAAQsM,UACf,EAID,GAMfsC,EAAalU,UAAUsY,UAAY,SAAUnB,GACzC,GAAIA,IAAoBpD,EAAWwE,WAC/Bla,KAAKgW,UAAUmE,SAASrB,GACxB,OAAO9Y,KAGP,IAAImX,EAAcnX,KAAKgW,UAAUoE,SAAStB,EAAiB9Y,KAAK8V,WAChE,OAAO,IAAID,EAAa7V,KAAK8V,UAAW9V,KAAK+V,cAAeoB,IAMpEtB,EAAalU,UAAU0Y,UAAY,SAAU7B,GACzC,OAAOA,IAAU9C,EAAWwE,WAAala,KAAKgW,UAAUmE,SAAS3B,IAKrE3C,EAAalU,UAAU2Q,OAAS,SAAUC,GACtC,GAAIA,IAAUvS,KACV,OAAO,EAEN,GAAIuS,EAAMgE,aACX,OAAO,EAGP,IAAI+D,EAAoB/H,EACxB,GAAKvS,KAAKoU,cAAc9B,OAAOgI,EAAkBlG,eAG5C,CAAA,GAAIpU,KAAK8V,UAAU6B,UAAY2C,EAAkBxE,UAAU6B,QAAS,CAKrE,IAJA,IAAI4C,EAAWva,KAAKsZ,YAAY7D,EAAgBJ,gBAC5CmF,EAAYF,EAAkBhB,YAAY7D,EAAgBJ,gBAC1DoF,EAAcF,EAASV,UACvBa,EAAeF,EAAUX,UACtBY,GAAeC,GAAc,CAChC,GAAID,EAAYjX,OAASkX,EAAalX,OACjCiX,EAAYtG,KAAK7B,OAAOoI,EAAavG,MACtC,OAAO,EAEXsG,EAAcF,EAASV,UACvBa,EAAeF,EAAUX,UAE7B,OAAuB,OAAhBY,GAAyC,OAAjBC,EAG/B,OAAO,EAlBP,OAAO,GA8BnB7E,EAAalU,UAAU+W,cAAgB,SAAUI,GAC7C,OAAIA,IAAoBpD,EAAWwE,UACxB,KAGAla,KAAKgW,UAAU9U,IAAI4X,EAAgBvK,aAOlDsH,EAAazG,gBAAkB,iBACxByG,EA7YsB,GA+YjC5O,EAAQ4O,aAAeA,EAMvB,IAAI8E,EAAyB,SAAU5G,GAEnC,SAAA4G,IACI,OAAO5G,EAAO6G,KAAK5a,KAAM,IAAIuV,EAAYY,UAAUP,EAAcQ,iBAAkBP,EAAaP,WAAYK,EAAWU,SAASC,UAAYtW,KAuBhJ,OAzBAwT,EAAQQ,UAAU2G,EAAS5G,GAI3B4G,EAAQhZ,UAAU4S,UAAY,SAAUhC,GACpC,OAAIA,IAAUvS,KACH,EAGA,GAGf2a,EAAQhZ,UAAU2Q,OAAS,SAAUC,GAEjC,OAAOA,IAAUvS,MAErB2a,EAAQhZ,UAAUyS,YAAc,WAC5B,OAAOpU,MAEX2a,EAAQhZ,UAAU+U,kBAAoB,SAAUC,GAC5C,OAAOd,EAAaP,YAExBqF,EAAQhZ,UAAU+P,QAAU,WACxB,OAAO,GAEJiJ,EA1BiB,CA2B1B9E,GACF5O,EAAQ0T,QAAUA,EAMlB1T,EAAQsM,SAAW,IAAIoH,EACvB5T,OAAO8T,iBAAiBnH,EAAOmB,WAC3BC,KACI5N,MAAO,IAAIwM,EAAOmB,UAAUzN,EAAOqE,SAAUoK,EAAaP,aAE9DwF,KACI5T,MAAO,IAAIwM,EAAOmB,UAAUzN,EAAOsE,SAAUzE,EAAQsM,aAM7DmC,EAAWqF,SAASC,aAAenF,EAAaP,WAChD3B,EAAWqB,SAASiG,0BAA4BpF,EAChDL,EAAO3B,WAAW5M,EAAQsM,UAC1BkC,EAAgB5B,WAAW5M,EAAQsM,4CC5dnCxM,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IAwBtDD,EAAQ4N,UAhBuB,WAC3B,SAAAA,EAAmBrR,EAAM2Q,GACrBnU,KAAKwD,KAAOA,EACZxD,KAAKmU,KAAOA,EAWhB,OAHAU,EAAU6E,KAAO,SAAUlW,EAAM2Q,GAC7B,OAAO,IAAIU,EAAUrR,EAAM2Q,IAExBU,EAdmB,qCCR9B9N,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAgU,EAAApV,EAAA,KACAqB,EAAArB,EAAA,KACAsB,EAAAtB,EAAA,KACAuB,EAAAvB,EAAA,KACAwB,EAAAxB,EAAA,KAMAmB,EAAAkU,mBAAA,iCAOAlU,EAAAmU,oBAAA,+BAMAnU,EAAAoU,eAAA,SAKApU,EAAAqU,WAAA,SAAAnP,GACA,MAAA,iBAAAA,GAAA,IAAAA,EAAArJ,SAAAmE,EAAAkU,mBAAAzM,KAAAvC,IAMAlF,EAAAsU,kBAAA,SAAAxK,GACA,MAAA,iBAAAA,GACA,IAAAA,EAAAjO,SACAmE,EAAAmU,oBAAA1M,KAAAqC,IAMA9J,EAAAuU,sBAAA,SAAAzK,GAKA,OAJAA,IAEAA,EAAAA,EAAA0K,QAAA,mBAAA,MAEAxU,EAAAsU,kBAAAxK,IAMA9J,EAAAyU,gBAAA,SAAAC,GACA,OAAA,OAAAA,GACA,iBAAAA,GACA,iBAAAA,IAAAvU,EAAAoD,oBAAAmR,IACAA,GAAA,iBAAAA,GAAAxU,EAAAsL,SAAAkJ,EAAA,QAWA1U,EAAA2U,wBAAA,SAAAC,EAAAC,EAAArW,EAAAyJ,EAAA6M,GACAA,QAAAC,IAAAvW,GAEAwB,EAAAgV,qBAAA5U,EAAA6U,YAAAL,EAAAC,EAAAC,GAAAtW,EAAAyJ,IASAjI,EAAAgV,qBAAA,SAAAC,EAAAzW,EAAA0W,GACA,IAAAjN,EAAAiN,aAAAjB,EAAAhL,KAAA,IAAAgL,EAAAxI,eAAAyJ,EAAAD,GAAAC,EACA,QAAAH,IAAAvW,EACA,MAAA,IAAAsE,MAAAmS,EAAA,sBAAAhN,EAAAmE,iBAEA,GAAA,mBAAA5N,EACA,MAAA,IAAAsE,MAAAmS,EACA,uBACAhN,EAAAmE,gBACA,oBACA5N,EAAA8I,YAEA,GAAAnH,EAAAoD,oBAAA/E,GACA,MAAA,IAAAsE,MAAAmS,EAAA,YAAAzW,EAAA8I,WAAA,IAAAW,EAAAmE,iBAGA,GAAA,iBAAA5N,GACAA,EAAA3C,OAAAmE,EAAAoU,eAAA,GACA/T,EAAAyL,aAAAtN,GAAAwB,EAAAoU,eACA,MAAA,IAAAtR,MAAAmS,EACA,kCACAjV,EAAAoU,eACA,eACAnM,EAAAmE,gBACA,MACA5N,EAAAqH,UAAA,EAAA,IACA,SAIA,GAAArH,GAAA,iBAAAA,EAAA,CACA,IAAA2W,GAAA,EAAAC,GAAA,EAqBA,GApBAlV,EAAA6F,QAAAvH,EAAA,SAAA0G,EAAAjF,GACA,GAAA,WAAAiF,EACAiQ,GAAA,OAEA,GAAA,cAAAjQ,GAAA,QAAAA,IACAkQ,GAAA,GACApV,EAAAqU,WAAAnP,IACA,MAAA,IAAApC,MAAAmS,EACA,6BACA/P,EACA,KACA+C,EAAAmE,gBACA,wFAIAnE,EAAAjK,KAAAkH,GACAlF,EAAAgV,qBAAAC,EAAAhV,EAAAgI,GACAA,EAAA+D,QAEAmJ,GAAAC,EACA,MAAA,IAAAtS,MAAAmS,EACA,4BACAhN,EAAAmE,gBACA,sCAUApM,EAAAqV,2BAAA,SAAAJ,EAAAK,GACA,IAAA5T,EAAA6T,EACA,IAAA7T,EAAA,EAAeA,EAAA4T,EAAAzZ,OAAuB6F,IAGtC,IAAA,IADA2D,GADAkQ,EAAAD,EAAA5T,IACAwI,QACAqB,EAAA,EAAuBA,EAAAlG,EAAAxJ,OAAiB0P,IACxC,GAAA,cAAAlG,EAAAkG,IAAAA,IAAAlG,EAAAxJ,OAAA,QAGA,IAAAmE,EAAAqU,WAAAhP,EAAAkG,IACA,MAAA,IAAAzI,MAAAmS,EACA,4BACA5P,EAAAkG,GACA,aACAgK,EAAAjO,WACA,uFAQAgO,EAAA/P,KAAA0O,EAAAhL,KAAA8B,cACA,IAAAyK,EAAA,KACA,IAAA9T,EAAA,EAAeA,EAAA4T,EAAAzZ,OAAuB6F,IAAA,CAEtC,GADA6T,EAAAD,EAAA5T,GACA,OAAA8T,GAAAA,EAAAhK,SAAA+J,GACA,MAAA,IAAAzS,MAAAmS,EACA,mBACAO,EAAAlO,WACA,qCACAiO,EAAAjO,YAEAkO,EAAAD,IAaAvV,EAAAyV,6BAAA,SAAAb,EAAAC,EAAArW,EAAAyJ,EAAA6M,GACA,IAAAA,QAAAC,IAAAvW,EAAA,CAEA,IAAAyW,EAAA7U,EAAA6U,YAAAL,EAAAC,EAAAC,GACA,IAAAtW,GAAA,iBAAAA,GAAAmD,MAAAC,QAAApD,GACA,MAAA,IAAAsE,MAAAmS,EAAA,0DAEA,IAAAK,KACApV,EAAA6F,QAAAvH,EAAA,SAAA0G,EAAAjF,GACA,IAAAsV,EAAA,IAAAtB,EAAAhL,KAAA/D,GAEA,GADAlF,EAAAgV,qBAAAC,EAAAhV,EAAAgI,EAAAqC,MAAAiL,IACA,cAAAA,EAAA1L,YACA7J,EAAAyU,gBAAAxU,GACA,MAAA,IAAA6C,MAAAmS,EACA,kCACAM,EAAAjO,WACA,gGAIAgO,EAAAtX,KAAAuX,KAEAvV,EAAAqV,2BAAAJ,EAAAK,KAEAtV,EAAA0V,iBAAA,SAAAd,EAAAC,EAAAH,EAAAI,GACA,IAAAA,QAAAC,IAAAL,EAAA,CAEA,GAAAvU,EAAAoD,oBAAAmR,GACA,MAAA,IAAA5R,MAAA1C,EAAA6U,YAAAL,EAAAC,EAAAC,GACA,MACAJ,EAAApN,WACA,6FAGA,IAAAtH,EAAAyU,gBAAAC,GACA,MAAA,IAAA5R,MAAA1C,EAAA6U,YAAAL,EAAAC,EAAAC,GACA,yFAGA9U,EAAA2V,kBAAA,SAAAf,EAAAC,EAAAe,EAAAd,GACA,IAAAA,QAAAC,IAAAa,EAEA,OAAAA,GACA,IAAA,QACA,IAAA,cACA,IAAA,gBACA,IAAA,gBACA,IAAA,cACA,MACA,QACA,MAAA,IAAA9S,MAAA1C,EAAA6U,YAAAL,EAAAC,EAAAC,GACA,8GAIA9U,EAAA6V,YAAA,SAAAjB,EAAAC,EAAA3P,EAAA4P,GACA,KAAAA,QAAAC,IAAA7P,GAEAlF,EAAAqU,WAAAnP,IACA,MAAA,IAAApC,MAAA1C,EAAA6U,YAAAL,EAAAC,EAAAC,GACA,yBACA5P,EACA,qGAGAlF,EAAA8V,mBAAA,SAAAlB,EAAAC,EAAA/K,EAAAgL,GACA,KAAAA,QAAAC,IAAAjL,GAEA9J,EAAAsU,kBAAAxK,IACA,MAAA,IAAAhH,MAAA1C,EAAA6U,YAAAL,EAAAC,EAAAC,GACA,0BACAhL,EACA,qFAGA9J,EAAA+V,uBAAA,SAAAnB,EAAAC,EAAA/K,EAAAgL,GACAhL,IAEAA,EAAAA,EAAA0K,QAAA,mBAAA,MAEAxU,EAAA8V,mBAAAlB,EAAAC,EAAA/K,EAAAgL,IAEA9U,EAAAgW,qBAAA,SAAApB,EAAA3M,GACA,GAAA,UAAAA,EAAAyB,WACA,MAAA,IAAA5G,MAAA8R,EAAA,8CAGA5U,EAAAiW,YAAA,SAAArB,EAAAC,EAAAqB,GAEA,IAAApM,EAAAoM,EAAAjO,KAAAX,WACA,GAAA,iBAAA4O,EAAAC,SAAAC,MACA,IAAAF,EAAAC,SAAAC,KAAAva,SACAmE,EAAAqU,WAAA6B,EAAAC,SAAAE,YACA,cAAAH,EAAAC,SAAAC,KAAA/M,MAAA,KAAA,IACA,IAAAS,EAAAjO,SAAAmE,EAAAuU,sBAAAzK,GACA,MAAA,IAAAhH,MAAA1C,EAAA6U,YAAAL,EAAAC,GAAA,GACA,yFAIA7U,EAAAsW,mBAAA,SAAA1B,EAAAC,EAAA0B,EAAAzB,GACA,KAAAA,QAAAC,IAAAwB,IAEA,iBAAAA,EACA,MAAA,IAAAzT,MAAA1C,EAAA6U,YAAAL,EAAAC,EAAAC,GACA,2CAEA9U,EAAAwW,gBAAA,SAAA5B,EAAAC,EAAA4B,EAAA3B,GACA,KAAAA,QAAAC,IAAA0B,IAEA,kBAAAA,EACA,MAAA,IAAA3T,MAAA1C,EAAA6U,YAAAL,EAAAC,EAAAC,GAAA,uBAEA9U,EAAA0W,eAAA,SAAA9B,EAAAC,EAAA8B,EAAA7B,GACA,KAAAA,QAAAC,IAAA4B,IAEA,iBAAAA,EACA,MAAA,IAAA7T,MAAA1C,EAAA6U,YAAAL,EAAAC,EAAAC,GACA,4BAGA9U,EAAA4W,eAAA,SAAAhC,EAAAC,EAAA1P,EAAA2P,GACA,KAAAA,QAAAC,IAAA5P,GAEAA,GAAA,iBAAAA,GAAA,OAAAA,GACA,MAAA,IAAArC,MAAA1C,EAAA6U,YAAAL,EAAAC,EAAAC,GACA,4BAGA9U,EAAA6W,0BAAA,SAAAjC,EAAAC,EAAA1P,EAAAD,EAAA4P,EAAAgC,GAEA,KADA3R,GAAA,iBAAAA,GAAAjF,EAAAsL,SAAArG,EAAAD,IACA,CACA,GAAA4P,EACA,OAGA,MAAA,IAAAhS,MAAA1C,EAAA6U,YAAAL,EAAAC,EAAAC,GACA,yBACA5P,EACA,KAGA,GAAA4R,EAAA,CACA,IAAA9Q,EAAA9F,EAAA6W,QAAA5R,EAAAD,GACA,GAAA,WAAA4R,GAAA,iBAAA9Q,GACA,WAAA8Q,GAAA,iBAAA9Q,GACA,YAAA8Q,GAAA,kBAAA9Q,GACA,aAAA8Q,GAAA,mBAAA9Q,GACA,WAAA8Q,GAAA,iBAAA9Q,GAAAA,EACA,MAAA8O,EACA,IAAAhS,MAAA1C,EAAA6U,YAAAL,EAAAC,EAAAC,GACA,mCACA5P,EACA,uBACA4R,EACA,MAGA,IAAAhU,MAAA1C,EAAA6U,YAAAL,EAAAC,EAAAC,GACA,yBACA5P,EACA,gBACA4R,EACA,yCCvWAhX,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAIC,EAASrB,EAAQ,MAMrB,SAAWmY,GACPA,EAAcA,EAAyB,UAAI,GAAK,YAChDA,EAAcA,EAAqB,MAAI,GAAK,QAC5CA,EAAcA,EAA8B,eAAI,GAAK,iBACrDA,EAAcA,EAA+B,gBAAI,GAAK,kBAJ1D,CAKmBhX,EAAQgX,gBAAkBhX,EAAQgX,mBAyCrDhX,EAAQiX,gBAjC6B,WACjC,SAAAA,EAAyBC,EAAUC,EAAYC,EAASC,GACpDte,KAAKme,SAAWA,EAChBne,KAAKoe,WAAaA,EAClBpe,KAAKqe,QAAUA,EACfre,KAAKse,OAASA,EACdnX,EAAOkC,QAAQiV,GAAUF,EAAY,uCAyBzC,OAnBAF,EAAgBK,KAAO,IAAIL,GACb,GAAM,EAAO,MACf,GAKZA,EAAgBM,OAAS,IAAIN,GAAgB,GAC7B,EAAM,MACV,GAKZA,EAAgBO,qBAAuB,SAAUJ,GAC7C,OAAO,IAAIH,GAAgB,GACX,EAAMG,GACV,IAETH,EA/ByB,wBCpBpCQ,EAAAzX,QAAAnB,EAAA,uCCAAiB,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IAuEtDD,EAAQ0X,OA7DoB,WACxB,SAAAA,EAAgBC,EAAMC,EAAclI,EAAWmI,EAASC,GACpD/e,KAAK4e,KAAOA,EACZ5e,KAAK6e,aAAeA,EACpB7e,KAAK2W,UAAYA,EACjB3W,KAAK8e,QAAUA,EACf9e,KAAK+e,SAAWA,EAqDpB,OA/CAJ,EAAOK,YAAc,SAAUC,GAC3B,OAAO,IAAIN,EAAOA,EAAOO,MAAOD,IAOpCN,EAAOQ,iBAAmB,SAAUC,EAAUH,GAC1C,OAAO,IAAIN,EAAOA,EAAOU,YAAaJ,EAAUG,IAOpDT,EAAOW,mBAAqB,SAAUF,EAAUH,GAC5C,OAAO,IAAIN,EAAOA,EAAOY,cAAeN,EAAUG,IAQtDT,EAAOa,mBAAqB,SAAUJ,EAAUK,EAAaC,GACzD,OAAO,IAAIf,EAAOA,EAAOgB,cAAeF,EAAaL,EAAUM,IAOnEf,EAAOiB,iBAAmB,SAAUR,EAAUH,GAC1C,OAAO,IAAIN,EAAOA,EAAOkB,YAAaZ,EAAUG,IAIpDT,EAAOU,YAAc,cAErBV,EAAOY,cAAgB,gBAEvBZ,EAAOgB,cAAgB,gBAEvBhB,EAAOkB,YAAc,cAErBlB,EAAOO,MAAQ,QACRP,EA3DgB,qCCV3B5X,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAKA8T,EALAxH,EAAA1N,EAAA,GACA2N,EAAA3N,EAAA,KACA4N,EAAA5N,EAAA,KACAqB,EAAArB,EAAA,KACAsB,EAAAtB,EAAA,KAEAiV,EAAA,SAAAhH,GAEA,SAAAgH,IACA,OAAA,OAAAhH,GAAAA,EAAAjL,MAAA9I,KAAAyI,YAAAzI,KA8DA,OAhEAwT,EAAAQ,UAAA+G,EAAAhH,GAIAhN,OAAAC,eAAA+T,EAAA,gBACA7Z,IAAA,WACA,OAAA8Z,GAEAxR,IAAA,SAAAyD,GACA+N,EAAA/N,GAEAwD,YAAA,EACAC,cAAA,IAKAqK,EAAApZ,UAAAsS,QAAA,SAAArI,EAAAC,GACA,OAAA1E,EAAAwE,YAAAC,EAAApI,KAAAqI,EAAArI,OAKAuX,EAAApZ,UAAA6S,YAAA,SAAAL,GAGA,MAAA/M,EAAA0Y,eAAA,oDAKA/E,EAAApZ,UAAA8S,oBAAA,SAAAC,EAAAC,GACA,OAAA,GAKAoG,EAAApZ,UAAAiT,QAAA,WACA,OAAAlB,EAAAmB,UAAAC,KAKAiG,EAAApZ,UAAAoT,QAAA,WAGA,OAAA,IAAArB,EAAAmB,UAAA1N,EAAAuE,SAAAsP,IAOAD,EAAApZ,UAAAsT,SAAA,SAAAC,EAAA1R,GAGA,OAFA4D,EAAAiC,OAAA,iBAAA6L,EAAA,gDAEA,IAAAxB,EAAAmB,UAAAK,EAAA8F,IAKAD,EAAApZ,UAAA4M,SAAA,WACA,MAAA,QAEAwM,EAjEA,CAkECtH,EAAA2B,OACDnO,EAAA8T,SAAAA,EACA9T,EAAAiT,UAAA,IAAAa,oCCzDA,SAAAzH,EAAAyM,EAAApE,GAEA,QADA,IAAAA,IAA8BA,EAAA,MAC9B,OAAAoE,EACA,OAAAC,EAAAnK,aAAAP,WAaA,GAXA,iBAAAyK,GAAA,cAAAA,IACApE,EAAAoE,EAAA,cAEA3Y,EAAAiC,OAAA,OAAAsS,GACA,iBAAAA,GACA,iBAAAA,GACA,iBAAAA,GAAA,QAAAA,EAAA,uCAAAA,GACA,iBAAAoE,GAAA,WAAAA,GAAA,OAAAA,EAAA,YACAA,EAAAA,EAAA,WAGA,iBAAAA,GAAA,QAAAA,EAAA,CAEA,OAAA,IAAApM,EAAAqB,SADA+K,EACAzM,EAAAqI,IAEA,GAAAoE,aAAAnX,QAAAqX,EA2BA,CACA,IAAAC,EAAAF,EAAAnK,aAAAP,WACA6K,EAAAJ,EAWA,OAVA5Y,EAAA6F,QAAAmT,EAAA,SAAAhU,EAAAiU,GACA,GAAAjZ,EAAAsL,SAAA0N,EAAAhU,IACA,MAAAA,EAAAW,UAAA,EAAA,GAAA,CAEA,IAAAmL,EAAA3E,EAAA8M,IACAnI,EAAA1B,cAAA0B,EAAAvG,YACAwO,EAAAA,EAAAnJ,qBAAA5K,EAAA8L,OAIAiI,EAAA1J,eAAAlD,EAAAqI,IAvCA,IAAA0E,KACAC,GAAA,EACAC,EAAAR,EAYA,GAXA5Y,EAAA6F,QAAAuT,EAAA,SAAApU,EAAAoF,GACA,GAAA,iBAAApF,GAAA,MAAAA,EAAAW,UAAA,EAAA,GAAA,CAEA,IAAAmL,EAAA3E,EAAAiN,EAAApU,IACA8L,EAAAvG,YACA4O,EACAA,IAAArI,EAAA7D,cAAA1C,UACA2O,EAAApb,KAAA,IAAAyO,EAAAmB,UAAA1I,EAAA8L,QAIA,GAAAoI,EAAAvd,OACA,OAAAkd,EAAAnK,aAAAP,WAEA,IAAAkL,EAAAC,EAAAC,cAAAL,EAAAzK,EAAA+K,qBAAA,SAAA1J,GAAsH,OAAAA,EAAAzT,MAAyBoS,EAAAQ,iBAC/I,GAAAkK,EAAA,CACA,IAAAM,EAAAH,EAAAC,cAAAL,EAAA5K,EAAAJ,eAAAwL,cACA,OAAA,IAAAb,EAAAnK,aAAA2K,EAAAlN,EAAAqI,GAAA,IAAAhG,EAAAU,UAA8GyK,YAAAF,IAAiCE,YAAArL,EAAAJ,kBAG/I,OAAA,IAAA2K,EAAAnK,aAAA2K,EAAAlN,EAAAqI,GAAAhG,EAAAU,SAAAC,SA9DAvP,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAA8Y,EAAAla,EAAA,KACA6N,EAAA7N,EAAA,KACA4N,EAAA5N,EAAA,KACAqB,EAAArB,EAAA,KACAsB,EAAAtB,EAAA,KACA2a,EAAA3a,EAAA,KACA8P,EAAA9P,EAAA,KACA6P,EAAA7P,EAAA,KACA2P,EAAA3P,EAAA,KACAma,GAAA,EAuEAhZ,EAAAqM,aAAAA,EACAmC,EAAA7B,gBAAAN,qCClFAvM,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAA6Z,EAAAjb,EAAA,KACAkb,EAAAlb,EAAA,KAUAmb,EAAA,SAAAC,GACA,IAGA,GAAA,oBAAAhX,aACA,IAAAA,OAAAgX,GAAA,CAEA,IAAAC,EAAAjX,OAAAgX,GAGA,OAFAC,EAAAC,QAAA,oBAAA,SACAD,EAAAE,WAAA,qBACA,IAAAN,EAAAO,kBAAAH,IAGA,MAAA3T,IAGA,OAAA,IAAAwT,EAAAO,eAGAta,EAAAua,kBAAAP,EAAA,gBAEAha,EAAAsC,eAAA0X,EAAA,oDCjCAla,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9CD,EAAAwa,iBAAA,IACAxa,EAAAya,cAAA,IACAza,EAAA0a,wBAAA,IACA1a,EAAA2a,cAAA,IACA3a,EAAA4a,UAAA,IACA5a,EAAA6a,aAAA,iBACA7a,EAAA8a,mBAAA,KACA9a,EAAA+a,UAAA,YACA/a,EAAAgb,aAAA,iDCTAlb,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAIwM,EAAS5N,EAAQ,KACjBqB,EAASrB,EAAQ,KAqCrBmB,EAAQmO,MAhCmB,WACvB,SAAAA,KA6BA,OAvBAA,EAAMzT,UAAUkf,WAAa,WACzB,OAAO7gB,KAAKiU,QAAQ3K,KAAKtJ,OAU7BoV,EAAMzT,UAAU8S,oBAAsB,SAAUC,EAASC,GACrD,IAAIuN,EAAa,IAAIxO,EAAOmB,UAAU1N,EAAOsE,SAAUiJ,GACnDyN,EAAa,IAAIzO,EAAOmB,UAAU1N,EAAOsE,SAAUkJ,GACvD,OAAgD,IAAzC3U,KAAKiU,QAAQiO,EAAYC,IAMpC/M,EAAMzT,UAAUiT,QAAU,WACtB,OAAOlB,EAAOmB,UAAUC,KAErBM,EA9Be,qCCP1BrO,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAGI+T,EAHA9T,EAASrB,EAAQ,KACjBsB,EAAStB,EAAQ,KACjB0P,EAAS1P,EAAQ,KAqPrBmB,EAAQ+N,SA9OsB,WAO1B,SAAAA,EAAkBoN,EAAQrM,QACA,IAAlBA,IAA4BA,EAAgBf,EAASiG,0BAA0B3F,YACnFtV,KAAKoiB,OAASA,EACdpiB,KAAK+V,cAAgBA,EACrB/V,KAAKiW,UAAY,KACjB9O,EAAOkC,YAAuB2S,IAAhBhc,KAAKoiB,QAAwC,OAAhBpiB,KAAKoiB,OAAiB,4DACjE5M,EAAOU,qBAAqBlW,KAAK+V,eA+NrC,OA7NAhP,OAAOC,eAAegO,EAAU,6BAC5B9T,IAAK,WACD,OAAO+Z,GAEXzR,IAAK,SAAUyD,GACXgO,EAA4BhO,GAEhCwD,YAAY,EACZC,cAAc,IAGlBsE,EAASrT,UAAU4U,WAAa,WAC5B,OAAO,GAGXvB,EAASrT,UAAUyS,YAAc,WAC7B,OAAOpU,KAAK+V,eAGhBf,EAASrT,UAAU6U,eAAiB,SAAUC,GAC1C,OAAO,IAAIzB,EAAShV,KAAKoiB,OAAQ3L,IAGrCzB,EAASrT,UAAU+U,kBAAoB,SAAUC,GAE7C,MAAkB,cAAdA,EACO3W,KAAK+V,cAGLf,EAASiG,0BAA0B3F,YAIlDN,EAASrT,UAAUiV,SAAW,SAAU1H,GACpC,OAAIA,EAAKwC,UACE1R,KAEkB,cAApBkP,EAAKyB,WACH3Q,KAAK+V,cAGLf,EAASiG,0BAA0B3F,YAMlDN,EAASrT,UAAUmV,SAAW,WAC1B,OAAO,GAGX9B,EAASrT,UAAU4W,wBAA0B,SAAU5B,EAAWsB,GAC9D,OAAO,MAGXjD,EAASrT,UAAUoV,qBAAuB,SAAUJ,EAAWK,GAC3D,MAAkB,cAAdL,EACO3W,KAAKwW,eAAeQ,GAEtBA,EAAatF,WAA2B,cAAdiF,EACxB3W,KAGAgV,EAASiG,0BAA0B3F,WAAWyB,qBAAqBJ,EAAWK,GAAcR,eAAexW,KAAK+V,gBAI/Hf,EAASrT,UAAU6V,YAAc,SAAUtI,EAAM8H,GAC7C,IAAIH,EAAQ3H,EAAKyB,WACjB,OAAc,OAAVkG,EACOG,EAEFA,EAAatF,WAAuB,cAAVmF,EACxB7W,MAGPmH,EAAOkC,OAAiB,cAAVwN,GAA8C,IAArB3H,EAAK0B,YAAmB,8CACxD5Q,KAAK+W,qBAAqBF,EAAO7B,EAASiG,0BAA0B3F,WAAWkC,YAAYtI,EAAK2B,WAAYmG,MAI3HhC,EAASrT,UAAU+P,QAAU,WACzB,OAAO,GAGXsD,EAASrT,UAAU+V,YAAc,WAC7B,OAAO,GAGX1C,EAASrT,UAAUqW,aAAe,SAAUQ,EAAOW,GAC/C,OAAO,GAKXnE,EAASrT,UAAUsL,IAAM,SAAU2K,GAC/B,OAAIA,IAAiB5X,KAAKoU,cAAc1C,WAEhC2Q,SAAUriB,KAAKsiB,WACfxB,YAAa9gB,KAAKoU,cAAcnH,OAG7BjN,KAAKsiB,YAGpBtN,EAASrT,UAAUwW,KAAO,WACtB,GAAuB,OAAnBnY,KAAKiW,UAAoB,CACzB,IAAIsM,EAAS,GACRviB,KAAK+V,cAAcrE,YACpB6Q,GACI,YACI/M,EAAO6C,iBAAiBrY,KAAK+V,cAAc9I,OAC3C,KACZ,IAAI2R,SAAc5e,KAAKoiB,OACvBG,GAAU3D,EAAO,IAEb2D,GADS,WAAT3D,EACUxX,EAAOiG,sBAAsBrN,KAAKoiB,QAGlCpiB,KAAKoiB,OAEnBpiB,KAAKiW,UAAY7O,EAAOS,KAAK0a,GAEjC,OAAOviB,KAAKiW,WAMhBjB,EAASrT,UAAU2gB,SAAW,WAC1B,OAAOtiB,KAAKoiB,QAKhBpN,EAASrT,UAAU4S,UAAY,SAAUhC,GACrC,OAAIA,IAAUyC,EAASiG,0BAA0B3F,WACtC,EAEF/C,aAAiByC,EAASiG,2BACvB,GAGR9T,EAAOkC,OAAOkJ,EAAMgE,aAAc,qBAC3BvW,KAAKwiB,mBAAmBjQ,KASvCyC,EAASrT,UAAU6gB,mBAAqB,SAAUC,GAC9C,IAAIC,SAAuBD,EAAUL,OACjCO,SAAsB3iB,KAAKoiB,OAC3BQ,EAAa5N,EAAS6N,iBAAiBxY,QAAQqY,GAC/CI,EAAY9N,EAAS6N,iBAAiBxY,QAAQsY,GAGlD,OAFAxb,EAAOkC,OAAOuZ,GAAc,EAAG,sBAAwBF,GACvDvb,EAAOkC,OAAOyZ,GAAa,EAAG,sBAAwBH,GAClDC,IAAeE,EAEM,WAAjBH,EAEO,EAIH3iB,KAAKoiB,OAASK,EAAUL,QAChB,EAEHpiB,KAAKoiB,SAAWK,EAAUL,OACxB,EAGA,EAKRU,EAAYF,GAM3B5N,EAASrT,UAAUsY,UAAY,WAC3B,OAAOja,MAKXgV,EAASrT,UAAU0Y,UAAY,WAC3B,OAAO,GAKXrF,EAASrT,UAAU2Q,OAAS,SAAUC,GAIlC,GAAIA,IAAUvS,KACV,OAAO,EAEN,GAAIuS,EAAMgE,aAAc,CAEzB,OAAQvW,KAAKoiB,SADG7P,EACkB6P,QAC9BpiB,KAAK+V,cAAczD,OAFPC,EAEwBwD,eAGxC,OAAO,GASff,EAAS6N,kBAAoB,SAAU,UAAW,SAAU,UACrD7N,EA5OkB,qCCV7BjO,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IAItD,IAAI6b,EAAmC,WASnC,SAAAA,EAA2B5O,EAAM6O,EAAUC,EAAYC,EAAYC,QACtC,IAArBA,IAA+BA,EAAmB,MACtDnjB,KAAKkjB,WAAaA,EAClBljB,KAAKmjB,iBAAmBA,EAIxBnjB,KAAKojB,cAEL,IADA,IAAI/Q,EAAM,GACF8B,EAAKzC,WAMT,GALAyC,EAAOA,EACP9B,EAAM2Q,EAAWC,EAAW9O,EAAKhI,IAAK6W,GAAY,EAE9CE,IACA7Q,IAAQ,GACRA,EAAM,EAGF8B,EADAnU,KAAKkjB,WACE/O,EAAKlC,KAGLkC,EAAKjC,UAGf,CAAA,GAAY,IAARG,EAAW,CAEhBrS,KAAKojB,WAAWne,KAAKkP,GACrB,MAIAnU,KAAKojB,WAAWne,KAAKkP,GAEjBA,EADAnU,KAAKkjB,WACE/O,EAAKjC,MAGLiC,EAAKlC,MA4C5B,OAvCA8Q,EAAkBphB,UAAUkY,QAAU,WAClC,GAA+B,IAA3B7Z,KAAKojB,WAAWtgB,OAChB,OAAO,KACX,IACIugB,EADAlP,EAAOnU,KAAKojB,WAAWnQ,MAM3B,GAHIoQ,EADArjB,KAAKmjB,iBACInjB,KAAKmjB,iBAAiBhP,EAAKhI,IAAKgI,EAAKjN,QAEnCiF,IAAKgI,EAAKhI,IAAKjF,MAAOiN,EAAKjN,OACtClH,KAAKkjB,WAEL,IADA/O,EAAOA,EAAKlC,MACJkC,EAAKzC,WACT1R,KAAKojB,WAAWne,KAAKkP,GACrBA,EAAOA,EAAKjC,WAKhB,IADAiC,EAAOA,EAAKjC,OACJiC,EAAKzC,WACT1R,KAAKojB,WAAWne,KAAKkP,GACrBA,EAAOA,EAAKlC,KAGpB,OAAOoR,GAEXN,EAAkBphB,UAAU2hB,QAAU,WAClC,OAAOtjB,KAAKojB,WAAWtgB,OAAS,GAEpCigB,EAAkBphB,UAAUiY,KAAO,WAC/B,GAA+B,IAA3B5Z,KAAKojB,WAAWtgB,OAChB,OAAO,KACX,IAAIqR,EAAOnU,KAAKojB,WAAWpjB,KAAKojB,WAAWtgB,OAAS,GACpD,OAAI9C,KAAKmjB,iBACEnjB,KAAKmjB,iBAAiBhP,EAAKhI,IAAKgI,EAAKjN,QAGnCiF,IAAKgI,EAAKhI,IAAKjF,MAAOiN,EAAKjN,QAGrC6b,EAzF2B,GA2FtC9b,EAAQ8b,kBAAoBA,EAI5B,IAAIQ,EAA0B,WAS1B,SAAAA,EAAkBpX,EAAKjF,EAAOhI,EAAO+S,EAAMC,GACvClS,KAAKmM,IAAMA,EACXnM,KAAKkH,MAAQA,EACblH,KAAKd,MAAiB,MAATA,EAAgBA,EAAQqkB,EAASC,IAC9CxjB,KAAKiS,KACO,MAARA,EAAeA,EAAOkE,EAAUb,WACpCtV,KAAKkS,MACQ,MAATA,EAAgBA,EAAQiE,EAAUb,WA+P1C,OAnPAiO,EAAS5hB,UAAU8hB,KAAO,SAAUtX,EAAKjF,EAAOhI,EAAO+S,EAAMC,GACzD,OAAO,IAAIqR,EAAgB,MAAPpX,EAAcA,EAAMnM,KAAKmM,IAAc,MAATjF,EAAgBA,EAAQlH,KAAKkH,MAAgB,MAAThI,EAAgBA,EAAQc,KAAKd,MAAe,MAAR+S,EAAeA,EAAOjS,KAAKiS,KAAe,MAATC,EAAgBA,EAAQlS,KAAKkS,QAK5LqR,EAAS5hB,UAAUgW,MAAQ,WACvB,OAAO3X,KAAKiS,KAAK0F,QAAU,EAAI3X,KAAKkS,MAAMyF,SAK9C4L,EAAS5hB,UAAU+P,QAAU,WACzB,OAAO,GAWX6R,EAAS5hB,UAAUyX,iBAAmB,SAAUD,GAC5C,OAAQnZ,KAAKiS,KAAKmH,iBAAiBD,IAC/BA,EAAOnZ,KAAKmM,IAAKnM,KAAKkH,QACtBlH,KAAKkS,MAAMkH,iBAAiBD,IAUpCoK,EAAS5hB,UAAU+hB,iBAAmB,SAAUvK,GAC5C,OAAQnZ,KAAKkS,MAAMwR,iBAAiBvK,IAChCA,EAAOnZ,KAAKmM,IAAKnM,KAAKkH,QACtBlH,KAAKiS,KAAKyR,iBAAiBvK,IAMnCoK,EAAS5hB,UAAUgiB,KAAO,WACtB,OAAI3jB,KAAKiS,KAAKP,UACH1R,KAGAA,KAAKiS,KAAK0R,QAMzBJ,EAAS5hB,UAAUoX,OAAS,WACxB,OAAO/Y,KAAK2jB,OAAOxX,KAKvBoX,EAAS5hB,UAAUmW,OAAS,WACxB,OAAI9X,KAAKkS,MAAMR,UACJ1R,KAAKmM,IAGLnM,KAAKkS,MAAM4F,UAU1ByL,EAAS5hB,UAAU2V,OAAS,SAAUnL,EAAKjF,EAAO+b,GAC9C,IAAI5Q,EAAKuR,EAYT,OAXAA,EAAI5jB,KACJqS,EAAM4Q,EAAW9W,EAAKyX,EAAEzX,MAEpByX,EADAvR,EAAM,EACFuR,EAAEH,KAAK,KAAM,KAAM,KAAMG,EAAE3R,KAAKqF,OAAOnL,EAAKjF,EAAO+b,GAAa,MAEvD,IAAR5Q,EACDuR,EAAEH,KAAK,KAAMvc,EAAO,KAAM,KAAM,MAGhC0c,EAAEH,KAAK,KAAM,KAAM,KAAM,KAAMG,EAAE1R,MAAMoF,OAAOnL,EAAKjF,EAAO+b,KAEzDY,UAMbN,EAAS5hB,UAAUmiB,WAAa,WAC5B,GAAI9jB,KAAKiS,KAAKP,UACV,OAAOyE,EAAUb,WAErB,IAAIsO,EAAI5jB,KAIR,OAHK4jB,EAAE3R,KAAK8R,UAAaH,EAAE3R,KAAKA,KAAK8R,WACjCH,EAAIA,EAAEI,iBACVJ,EAAIA,EAAEH,KAAK,KAAM,KAAM,KAAMG,EAAE3R,KAAK6R,aAAc,OACzCD,UAObN,EAAS5hB,UAAU8H,OAAS,SAAU0C,EAAK8W,GACvC,IAAIW,EAAGK,EAEP,GADAL,EAAI5jB,KACAijB,EAAW9W,EAAKyX,EAAEzX,KAAO,EACpByX,EAAE3R,KAAKP,WAAckS,EAAE3R,KAAK8R,UAAaH,EAAE3R,KAAKA,KAAK8R,WACtDH,EAAIA,EAAEI,gBAEVJ,EAAIA,EAAEH,KAAK,KAAM,KAAM,KAAMG,EAAE3R,KAAKxI,OAAO0C,EAAK8W,GAAa,UAE5D,CAMD,GALIW,EAAE3R,KAAK8R,WACPH,EAAIA,EAAEM,gBACLN,EAAE1R,MAAMR,WAAckS,EAAE1R,MAAM6R,UAAaH,EAAE1R,MAAMD,KAAK8R,WACzDH,EAAIA,EAAEO,iBAEqB,IAA3BlB,EAAW9W,EAAKyX,EAAEzX,KAAY,CAC9B,GAAIyX,EAAE1R,MAAMR,UACR,OAAOyE,EAAUb,WAGjB2O,EAAWL,EAAE1R,MAAMyR,OACnBC,EAAIA,EAAEH,KAAKQ,EAAS9X,IAAK8X,EAAS/c,MAAO,KAAM,KAAM0c,EAAE1R,MAAM4R,cAGrEF,EAAIA,EAAEH,KAAK,KAAM,KAAM,KAAM,KAAMG,EAAE1R,MAAMzI,OAAO0C,EAAK8W,IAE3D,OAAOW,EAAEC,UAMbN,EAAS5hB,UAAUoiB,OAAS,WACxB,OAAO/jB,KAAKd,OAMhBqkB,EAAS5hB,UAAUkiB,OAAS,WACxB,IAAID,EAAI5jB,KAOR,OANI4jB,EAAE1R,MAAM6R,WAAaH,EAAE3R,KAAK8R,WAC5BH,EAAIA,EAAEQ,eACNR,EAAE3R,KAAK8R,UAAYH,EAAE3R,KAAKA,KAAK8R,WAC/BH,EAAIA,EAAEM,gBACNN,EAAE3R,KAAK8R,UAAYH,EAAE1R,MAAM6R,WAC3BH,EAAIA,EAAES,cACHT,GAMXL,EAAS5hB,UAAUqiB,aAAe,WAC9B,IAAIJ,EAAI5jB,KAAKqkB,aAMb,OALIT,EAAE1R,MAAMD,KAAK8R,WAGbH,GADAA,GADAA,EAAIA,EAAEH,KAAK,KAAM,KAAM,KAAM,KAAMG,EAAE1R,MAAMgS,iBACrCE,eACAC,cAEHT,GAMXL,EAAS5hB,UAAUwiB,cAAgB,WAC/B,IAAIP,EAAI5jB,KAAKqkB,aAKb,OAJIT,EAAE3R,KAAKA,KAAK8R,WAEZH,GADAA,EAAIA,EAAEM,gBACAG,cAEHT,GAMXL,EAAS5hB,UAAUyiB,YAAc,WAC7B,IAAIE,EAAKtkB,KAAKyjB,KAAK,KAAM,KAAMF,EAASC,IAAK,KAAMxjB,KAAKkS,MAAMD,MAC9D,OAAOjS,KAAKkS,MAAMuR,KAAK,KAAM,KAAMzjB,KAAKd,MAAOolB,EAAI,OAMvDf,EAAS5hB,UAAUuiB,aAAe,WAC9B,IAAIK,EAAKvkB,KAAKyjB,KAAK,KAAM,KAAMF,EAASC,IAAKxjB,KAAKiS,KAAKC,MAAO,MAC9D,OAAOlS,KAAKiS,KAAKwR,KAAK,KAAM,KAAMzjB,KAAKd,MAAO,KAAMqlB,IAMxDhB,EAAS5hB,UAAU0iB,WAAa,WAC5B,IAAIpS,EAAOjS,KAAKiS,KAAKwR,KAAK,KAAM,MAAOzjB,KAAKiS,KAAK/S,MAAO,KAAM,MAC1DgT,EAAQlS,KAAKkS,MAAMuR,KAAK,KAAM,MAAOzjB,KAAKkS,MAAMhT,MAAO,KAAM,MACjE,OAAOc,KAAKyjB,KAAK,KAAM,MAAOzjB,KAAKd,MAAO+S,EAAMC,IAQpDqR,EAAS5hB,UAAU6iB,eAAiB,WAChC,IAAIC,EAAazkB,KAAK0kB,SACtB,OAAOrZ,KAAKyC,IAAI,EAAK2W,IAAezkB,KAAK2X,QAAU,GAMvD4L,EAAS5hB,UAAU+iB,OAAS,WACxB,IAAID,EACJ,GAAIzkB,KAAK+jB,UAAY/jB,KAAKiS,KAAK8R,SAC3B,MAAM,IAAIha,MAAM,0BAA4B/J,KAAKmM,IAAM,IAAMnM,KAAKkH,MAAQ,KAE9E,GAAIlH,KAAKkS,MAAM6R,SACX,MAAM,IAAIha,MAAM,mBAAqB/J,KAAKmM,IAAM,IAAMnM,KAAKkH,MAAQ,YAGvE,IADAud,EAAazkB,KAAKiS,KAAKyS,YACJ1kB,KAAKkS,MAAMwS,SAC1B,MAAM,IAAI3a,MAAM,uBAGhB,OAAO0a,GAAczkB,KAAK+jB,SAAW,EAAI,IAGjDR,EAASC,KAAM,EACfD,EAASoB,OAAQ,EACVpB,EA/QkB,GAiR7Btc,EAAQsc,SAAWA,EAInB,IAAIqB,EAA+B,WAC/B,SAAAA,KA2FA,OApFAA,EAAcjjB,UAAU8hB,KAAO,SAAUtX,EAAKjF,EAAOhI,EAAO+S,EAAMC,GAC9D,OAAOlS,MAUX4kB,EAAcjjB,UAAU2V,OAAS,SAAUnL,EAAKjF,EAAO+b,GACnD,OAAO,IAAIM,EAASpX,EAAKjF,EAAO,OASpC0d,EAAcjjB,UAAU8H,OAAS,SAAU0C,EAAK8W,GAC5C,OAAOjjB,MAKX4kB,EAAcjjB,UAAUgW,MAAQ,WAC5B,OAAO,GAKXiN,EAAcjjB,UAAU+P,QAAU,WAC9B,OAAO,GAUXkT,EAAcjjB,UAAUyX,iBAAmB,SAAUD,GACjD,OAAO,GAUXyL,EAAcjjB,UAAU+hB,iBAAmB,SAAUvK,GACjD,OAAO,GAKXyL,EAAcjjB,UAAUoX,OAAS,WAC7B,OAAO,MAKX6L,EAAcjjB,UAAUmW,OAAS,WAC7B,OAAO,MAMX8M,EAAcjjB,UAAU+iB,OAAS,WAC7B,OAAO,GAMXE,EAAcjjB,UAAUoiB,OAAS,WAC7B,OAAO,GAEJa,EA5FuB,GA8FlC3d,EAAQ2d,cAAgBA,EAKxB,IAAIzO,EAA2B,WAM3B,SAAAA,EAAmB0O,EAAaC,QACd,IAAVA,IAAoBA,EAAQ3O,EAAUb,YAC1CtV,KAAK6kB,YAAcA,EACnB7kB,KAAK8kB,MAAQA,EAyJjB,OA/IA3O,EAAUxU,UAAU2V,OAAS,SAAUnL,EAAKjF,GACxC,OAAO,IAAIiP,EAAUnW,KAAK6kB,YAAa7kB,KAAK8kB,MACvCxN,OAAOnL,EAAKjF,EAAOlH,KAAK6kB,aACxBpB,KAAK,KAAM,KAAMF,EAASoB,MAAO,KAAM,QAQhDxO,EAAUxU,UAAU8H,OAAS,SAAU0C,GACnC,OAAO,IAAIgK,EAAUnW,KAAK6kB,YAAa7kB,KAAK8kB,MACvCrb,OAAO0C,EAAKnM,KAAK6kB,aACjBpB,KAAK,KAAM,KAAMF,EAASoB,MAAO,KAAM,QAShDxO,EAAUxU,UAAUT,IAAM,SAAUiL,GAGhC,IAFA,IAAIkG,EACA8B,EAAOnU,KAAK8kB,OACR3Q,EAAKzC,WAAW,CAEpB,GAAY,KADZW,EAAMrS,KAAK6kB,YAAY1Y,EAAKgI,EAAKhI,MAE7B,OAAOgI,EAAKjN,MAEPmL,EAAM,EACX8B,EAAOA,EAAKlC,KAEPI,EAAM,IACX8B,EAAOA,EAAKjC,OAGpB,OAAO,MAOXiE,EAAUxU,UAAUiX,kBAAoB,SAAUzM,GAE9C,IADA,IAAIkG,EAAK8B,EAAOnU,KAAK8kB,MAAOC,EAAc,MAClC5Q,EAAKzC,WAAW,CAEpB,GAAY,KADZW,EAAMrS,KAAK6kB,YAAY1Y,EAAKgI,EAAKhI,MAClB,CACX,GAAKgI,EAAKlC,KAAKP,UAMV,OAAIqT,EACEA,EAAY5Y,IAGZ,KARP,IADAgI,EAAOA,EAAKlC,MACJkC,EAAKjC,MAAMR,WACfyC,EAAOA,EAAKjC,MAChB,OAAOiC,EAAKhI,IASXkG,EAAM,EACX8B,EAAOA,EAAKlC,KAEPI,EAAM,IACX0S,EAAc5Q,EACdA,EAAOA,EAAKjC,OAGpB,MAAM,IAAInI,MAAM,0EAKpBoM,EAAUxU,UAAU+P,QAAU,WAC1B,OAAO1R,KAAK8kB,MAAMpT,WAKtByE,EAAUxU,UAAUgW,MAAQ,WACxB,OAAO3X,KAAK8kB,MAAMnN,SAKtBxB,EAAUxU,UAAUoX,OAAS,WACzB,OAAO/Y,KAAK8kB,MAAM/L,UAKtB5C,EAAUxU,UAAUmW,OAAS,WACzB,OAAO9X,KAAK8kB,MAAMhN,UAWtB3B,EAAUxU,UAAUyX,iBAAmB,SAAUD,GAC7C,OAAOnZ,KAAK8kB,MAAM1L,iBAAiBD,IAUvChD,EAAUxU,UAAU+hB,iBAAmB,SAAUvK,GAC7C,OAAOnZ,KAAK8kB,MAAMpB,iBAAiBvK,IAQvChD,EAAUxU,UAAU2X,YAAc,SAAU0L,GACxC,OAAO,IAAIjC,EAAkB/iB,KAAK8kB,MAAO,KAAM9kB,KAAK6kB,aAAa,EAAOG,IAE5E7O,EAAUxU,UAAU4X,gBAAkB,SAAUpN,EAAK6Y,GACjD,OAAO,IAAIjC,EAAkB/iB,KAAK8kB,MAAO3Y,EAAKnM,KAAK6kB,aAAa,EAAOG,IAE3E7O,EAAUxU,UAAUoY,uBAAyB,SAAU5N,EAAK6Y,GACxD,OAAO,IAAIjC,EAAkB/iB,KAAK8kB,MAAO3Y,EAAKnM,KAAK6kB,aAAa,EAAMG,IAE1E7O,EAAUxU,UAAUmY,mBAAqB,SAAUkL,GAC/C,OAAO,IAAIjC,EAAkB/iB,KAAK8kB,MAAO,KAAM9kB,KAAK6kB,aAAa,EAAMG,IAM3E7O,EAAUb,WAAa,IAAIsP,EACpBzO,EAlKmB,GAoK9BlP,EAAQkP,UAAYA,oCC/nBpBpP,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAI+d,EAAiBnf,EAAQ,KACzBof,EAAiBpf,EAAQ,KACzBoV,EAASpV,EAAQ,KACjBqf,EAAuBrf,EAAQ,KAC/Bsf,EAAatf,EAAQ,KACrBuf,EAAmBvf,EAAQ,KAC3BqB,EAASrB,EAAQ,KACjBsB,EAAStB,EAAQ,KACjBuB,EAASvB,EAAQ,KACjBwf,EAAsBxf,EAAQ,KAC9Byf,EAAiBzf,EAAQ,KACzB0f,EAAkB1f,EAAQ,KAC1B2f,EAAkB3f,EAAQ,KAC1B4f,EAAe5f,EAAQ,KACvB6f,EAAyB7f,EAAQ,KACjC8f,EAAuB9f,EAAQ,KAC/B+f,EAAa/f,EAAQ,KA4ezBmB,EAAQ6e,KAvekB,WAMtB,SAAAA,EAAcC,EAAWC,EAAiB7nB,GACtC,IAAI4B,EAAQC,KACZA,KAAK+lB,UAAYA,EACjB/lB,KAAK7B,IAAMA,EACX6B,KAAKimB,gBAAkB,EACvBjmB,KAAKkmB,eAAiB,KACtBlmB,KAAKmmB,YAAc,IAAIT,EAAaU,WACpCpmB,KAAKqmB,aAAe,EACpBrmB,KAAKsmB,6BAA+B,KAEpCtmB,KAAKumB,cAAgB,IAAIpB,EAAqBqB,mBAK9CxmB,KAAKymB,sBAAwB,KAE7B,IAAIC,EAAoB,IAAIpB,EAAoBqB,kBAAkBxoB,GAElE,GADA6B,KAAK4mB,OAASrB,EAAesB,aAAaC,cAAcf,GACpDC,GAAmB5e,EAAOsI,eAC1B1P,KAAK+mB,QAAU,IAAInB,EAAqBoB,mBAAmBhnB,KAAK+lB,UAAW/lB,KAAKinB,cAAc3d,KAAKtJ,MAAO0mB,GAE1Gtb,WAAWpL,KAAKknB,iBAAiB5d,KAAKtJ,MAAM,GAAO,OAElD,CACD,IAAImnB,EAAehpB,EAAIipB,QAAsC,6BAE7D,QAA4B,IAAjBD,GAAiD,OAAjBA,EAAuB,CAC9D,GAA4B,iBAAjBA,EACP,MAAM,IAAIpd,MAAM,sEAEpB,IACI5C,EAAO4B,UAAUoe,GAErB,MAAO3Z,GACH,MAAM,IAAIzD,MAAM,kCAAoCyD,IAG5DxN,KAAKymB,sBAAwB,IAAId,EAAuB0B,qBAAqBrnB,KAAK+lB,UAAW/lB,KAAKinB,cAAc3d,KAAKtJ,MAAOA,KAAKknB,iBAAiB5d,KAAKtJ,MAAOA,KAAKsnB,oBAAoBhe,KAAKtJ,MAAO0mB,EAAmBS,GACtNnnB,KAAK+mB,QAAU/mB,KAAKymB,sBAExBC,EAAkBa,uBAAuB,SAAUC,GAC/CznB,EAAMgnB,QAAQU,iBAAiBD,KAInCxnB,KAAK0nB,eAAiBnC,EAAesB,aAAac,oBAAoB5B,EAAW,WAAc,OAAO,IAAIP,EAAgBoC,cAAc7nB,EAAM6mB,OAAQ7mB,EAAMgnB,WAC5J/mB,KAAK6nB,qBAEL7nB,KAAK8nB,UAAY,IAAIzC,EAAiB0C,eACtC/nB,KAAKgoB,cAAgB,IAAI5C,EAAW6C,UAChCC,eAAgB,SAAU9mB,EAAO+mB,EAAKC,EAAeC,GACjD,IAAIC,KACAnU,EAAOpU,EAAM+nB,UAAUS,QAAQnnB,EAAM8N,MASzC,OANKiF,EAAKzC,YACN4W,EAAavoB,EAAMioB,cAAcQ,qBAAqBpnB,EAAM8N,KAAMiF,GAClE/I,WAAW,WACPid,EAAW,OACZ,IAEAC,GAEXG,cAAe,eAEnBzoB,KAAK0oB,YAAY,aAAa,GAC9B1oB,KAAK2oB,gBAAkB,IAAIvD,EAAW6C,UAClCC,eAAgB,SAAU9mB,EAAO+mB,EAAKC,EAAeC,GAMjD,OALAtoB,EAAMgnB,QAAQ6B,OAAOxnB,EAAOgnB,EAAeD,EAAK,SAAUU,EAAQpjB,GAC9D,IAAIqjB,EAAST,EAAWQ,EAAQpjB,GAChC1F,EAAMomB,YAAY4C,0BAA0B3nB,EAAM8N,KAAM4Z,SAKhEL,cAAe,SAAUrnB,EAAO+mB,GAC5BpoB,EAAMgnB,QAAQiC,SAAS5nB,EAAO+mB,MAkZ1C,OA3YArC,EAAKnkB,UAAU4M,SAAW,WACtB,OAASvO,KAAK+lB,UAAUkD,OAAS,WAAa,WAAajpB,KAAK+lB,UAAU1I,MAK9EyI,EAAKnkB,UAAU6B,KAAO,WAClB,OAAOxD,KAAK+lB,UAAUzI,WAK1BwI,EAAKnkB,UAAUunB,WAAa,WACxB,IACIC,EADanpB,KAAK8nB,UAAUS,QAAQ,IAAIrN,EAAOhL,KAAK,2BAChCjD,OAAS,EACjC,OAAO,IAAImc,MAAOC,UAAYF,GAMlCrD,EAAKnkB,UAAU2nB,qBAAuB,WAClC,OAAOrE,EAAesE,oBAClBC,UAAWxpB,KAAKkpB,gBAYxBpD,EAAKnkB,UAAUslB,cAAgB,SAAUlW,EAAYtL,EAAMgkB,EAAStB,GAEhEnoB,KAAKimB,kBACL,IAAI/W,EAAO,IAAIgM,EAAOhL,KAAKa,GAC3BtL,EAAOzF,KAAKsmB,6BACNtmB,KAAKsmB,6BAA6BvV,EAAYtL,GAC9CA,EACN,IAAIqjB,KACJ,GAAIX,EACA,GAAIsB,EAAS,CACT,IAAIC,EAAiBriB,EAAO7E,IAAIiD,EAAM,SAAUkkB,GAC5C,OAAOzE,EAAe5R,aAAaqW,KAEvCb,EAAS9oB,KAAK2oB,gBAAgBiB,sBAAsB1a,EAAMwa,EAAgBvB,OAEzE,CACD,IAAI0B,EAAa3E,EAAe5R,aAAa7N,GAC7CqjB,EAAS9oB,KAAK2oB,gBAAgBmB,0BAA0B5a,EAAM2a,EAAY1B,QAG7E,GAAIsB,EAAS,CACd,IAAIM,EAAkB1iB,EAAO7E,IAAIiD,EAAM,SAAUkkB,GAC7C,OAAOzE,EAAe5R,aAAaqW,KAEvCb,EAAS9oB,KAAK2oB,gBAAgBqB,iBAAiB9a,EAAM6a,OAEpD,CACD,IAAIE,EAAO/E,EAAe5R,aAAa7N,GACvCqjB,EAAS9oB,KAAK2oB,gBAAgBH,qBAAqBtZ,EAAM+a,GAE7D,IAAIC,EAAehb,EACf4Z,EAAOhmB,OAAS,IAGhBonB,EAAelqB,KAAKmqB,mBAAmBjb,IAE3ClP,KAAKmmB,YAAY4C,0BAA0BmB,EAAcpB,IAO7DhD,EAAKnkB,UAAUyoB,qBAAuB,SAAUjd,GAC5CnN,KAAKsmB,6BAA+BnZ,GAMxC2Y,EAAKnkB,UAAUulB,iBAAmB,SAAUmD,GACxCrqB,KAAK0oB,YAAY,YAAa2B,IACR,IAAlBA,GACArqB,KAAKsqB,0BAObxE,EAAKnkB,UAAU2lB,oBAAsB,SAAUiD,GAC3C,IAAIxqB,EAAQC,KACZoH,EAAO2F,KAAKwd,EAAS,SAAUrjB,EAAOiF,GAClCpM,EAAM2oB,YAAYvc,EAAKjF,MAS/B4e,EAAKnkB,UAAU+mB,YAAc,SAAU3X,EAAY7J,GAC/C,IAAIgI,EAAO,IAAIgM,EAAOhL,KAAK,UAAYa,GACnC4D,EAAUuQ,EAAe5R,aAAapM,GAC1ClH,KAAK8nB,UAAU0C,eAAetb,EAAMyF,GACpC,IAAImU,EAAS9oB,KAAKgoB,cAAcQ,qBAAqBtZ,EAAMyF,GAC3D3U,KAAKmmB,YAAY4C,0BAA0B7Z,EAAM4Z,IAMrDhD,EAAKnkB,UAAU8oB,gBAAkB,WAC7B,OAAOzqB,KAAKqmB,gBAQhBP,EAAKnkB,UAAU+oB,gBAAkB,SAAUxb,EAAMyb,EAAQvT,EAAaiR,GAClE,IAAItoB,EAAQC,KACZA,KAAK4qB,KAAK,OACN1b,KAAMA,EAAKX,WACXrH,MAAOyjB,EACPhP,SAAUvE,IAId,IAAIyT,EAAe7qB,KAAKspB,uBACpBwB,EAAoB5F,EAAe5R,aAAaqX,EAAQvT,GACxDzC,EAAUsQ,EAAe8F,6BAA6BD,EAAmBD,GACzEG,EAAUhrB,KAAKyqB,kBACf3B,EAAS9oB,KAAK2oB,gBAAgBsC,mBAAmB/b,EAAMyF,EAASqW,GAAS,GAC7EhrB,KAAKmmB,YAAY+E,YAAYpC,GAC7B9oB,KAAK+mB,QAAQoE,IAAIjc,EAAKX,WAAYuc,EAAkB7d,KAAgB,GAAO,SAAU4b,EAAQuC,GACzF,IAAIC,EAAqB,OAAXxC,EACTwC,GACDjkB,EAAO4C,KAAK,UAAYkF,EAAO,YAAc2Z,GAEjD,IAAIyC,EAAcvrB,EAAM4oB,gBAAgB4C,aAAaP,GAAUK,GAC/DtrB,EAAMomB,YAAY4C,0BAA0B7Z,EAAMoc,GAClDvrB,EAAMyrB,uBAAuBnD,EAAYQ,EAAQuC,KAErD,IAAIlB,EAAelqB,KAAKyrB,mBAAmBvc,GAC3ClP,KAAKmqB,mBAAmBD,GAExBlqB,KAAKmmB,YAAY4C,0BAA0BmB,OAO/CpE,EAAKnkB,UAAUuG,OAAS,SAAUgH,EAAMwc,EAAiBrD,GACrD,IAAItoB,EAAQC,KACZA,KAAK4qB,KAAK,UAAY1b,KAAMA,EAAKX,WAAYrH,MAAOwkB,IAEpD,IAAIC,GAAQ,EACRd,EAAe7qB,KAAKspB,uBACpBS,KAMJ,GALA1iB,EAAO2F,QAAQ0e,EAAiB,SAAUE,EAAYC,GAClDF,GAAQ,EACR,IAAIb,EAAoB5F,EAAe5R,aAAauY,GACpD9B,EAAgB6B,GAAc3G,EAAe8F,6BAA6BD,EAAmBD,KAE5Fc,EAsBDvkB,EAAOhC,IAAI,wDACXpF,KAAKwrB,uBAAuBnD,EAAY,UAvBhC,CACR,IAAIyD,EAAY9rB,KAAKyqB,kBACjB3B,EAAS9oB,KAAK2oB,gBAAgBoD,eAAe7c,EAAM6a,EAAiB+B,GACxE9rB,KAAKmmB,YAAY+E,YAAYpC,GAC7B9oB,KAAK+mB,QAAQiF,MAAM9c,EAAKX,WAAYmd,EAAiB,SAAU7C,EAAQuC,GACnE,IAAIC,EAAqB,OAAXxC,EACTwC,GACDjkB,EAAO4C,KAAK,aAAekF,EAAO,YAAc2Z,GAEpD,IAAIyC,EAAcvrB,EAAM4oB,gBAAgB4C,aAAaO,GAAYT,GAC7DnB,EAAeoB,EAAYxoB,OAAS,EAAI/C,EAAMoqB,mBAAmBjb,GAAQA,EAC7EnP,EAAMomB,YAAY4C,0BAA0BmB,EAAcoB,GAC1DvrB,EAAMyrB,uBAAuBnD,EAAYQ,EAAQuC,KAErD/jB,EAAO2F,QAAQ0e,EAAiB,SAAUO,GACtC,IAAI/B,EAAenqB,EAAM0rB,mBAAmBvc,EAAKqC,MAAM0a,IACvDlsB,EAAMoqB,mBAAmBD,KAG7BlqB,KAAKmmB,YAAY4C,0BAA0B7Z,QAWnD4W,EAAKnkB,UAAU2oB,uBAAyB,WACpC,IAAIvqB,EAAQC,KACZA,KAAK4qB,KAAK,sBACV,IAAIC,EAAe7qB,KAAKspB,uBAEpBR,KAD2B7D,EAAeiH,yBAAyBlsB,KAAKumB,cAAesE,GAElEsB,YAAYjR,EAAOhL,KAAKkc,MAAO,SAAUld,EAAM+a,GACpEnB,EAASA,EAAOlf,OAAO7J,EAAM4oB,gBAAgBH,qBAAqBtZ,EAAM+a,IACxE,IAAIC,EAAenqB,EAAM0rB,mBAAmBvc,GAC5CnP,EAAMoqB,mBAAmBD,KAE7BlqB,KAAKumB,cAAgB,IAAIpB,EAAqBqB,mBAC9CxmB,KAAKmmB,YAAY4C,0BAA0B7N,EAAOhL,KAAKkc,MAAOtD,IAMlEhD,EAAKnkB,UAAU0qB,mBAAqB,SAAUnd,EAAMmZ,GAChD,IAAItoB,EAAQC,KACZA,KAAK+mB,QAAQsF,mBAAmBnd,EAAKX,WAAY,SAAUsa,EAAQuC,GAChD,OAAXvC,GACA9oB,EAAMwmB,cAAc+F,OAAOpd,GAE/BnP,EAAMyrB,uBAAuBnD,EAAYQ,EAAQuC,MAQzDtF,EAAKnkB,UAAU4qB,gBAAkB,SAAUrd,EAAMhI,EAAOmhB,GACpD,IAAItoB,EAAQC,KACR2U,EAAUuQ,EAAe5R,aAAapM,GAC1ClH,KAAK+mB,QAAQyF,gBAAgBtd,EAAKX,WAAYoG,EAAQ1H,KAAgB,GAAO,SAAU4b,EAAQuC,GAC5E,OAAXvC,GACA9oB,EAAMwmB,cAAckG,SAASvd,EAAMyF,GAEvC5U,EAAMyrB,uBAAuBnD,EAAYQ,EAAQuC,MASzDtF,EAAKnkB,UAAU+qB,4BAA8B,SAAUxd,EAAMhI,EAAOyU,EAAU0M,GAC1E,IAAItoB,EAAQC,KACR2U,EAAUuQ,EAAe5R,aAAapM,EAAOyU,GACjD3b,KAAK+mB,QAAQyF,gBAAgBtd,EAAKX,WAAYoG,EAAQ1H,KAAgB,GAAO,SAAU4b,EAAQuC,GAC5E,OAAXvC,GACA9oB,EAAMwmB,cAAckG,SAASvd,EAAMyF,GAEvC5U,EAAMyrB,uBAAuBnD,EAAYQ,EAAQuC,MAQzDtF,EAAKnkB,UAAUgrB,mBAAqB,SAAUzd,EAAMwc,EAAiBrD,GACjE,IAAItoB,EAAQC,KACZ,GAAIqH,EAAOqK,QAAQga,GAGf,OAFAtkB,EAAOhC,IAAI,4EACXpF,KAAKwrB,uBAAuBnD,EAAY,MAG5CroB,KAAK+mB,QAAQ6F,kBAAkB1d,EAAKX,WAAYmd,EAAiB,SAAU7C,EAAQuC,GAChE,OAAXvC,GACAxhB,EAAO2F,QAAQ0e,EAAiB,SAAU/U,EAAWsB,GACjD,IAAIjB,EAAekO,EAAe5R,aAAa2E,GAC/ClY,EAAMwmB,cAAckG,SAASvd,EAAKqC,MAAMoF,GAAYK,KAG5DjX,EAAMyrB,uBAAuBnD,EAAYQ,EAAQuC,MAOzDtF,EAAKnkB,UAAUkrB,yBAA2B,SAAUzrB,EAAO0rB,GACvD,IAAIhE,EAEAA,EAD0B,UAA1B1nB,EAAM8N,KAAKyB,WACF3Q,KAAKgoB,cAAc+E,qBAAqB3rB,EAAO0rB,GAG/C9sB,KAAK2oB,gBAAgBoE,qBAAqB3rB,EAAO0rB,GAE9D9sB,KAAKmmB,YAAY6G,kBAAkB5rB,EAAM8N,KAAM4Z,IAMnDhD,EAAKnkB,UAAUsrB,4BAA8B,SAAU7rB,EAAO0rB,GAG1D,IAAIhE,EAEAA,EAD0B,UAA1B1nB,EAAM8N,KAAKyB,WACF3Q,KAAKgoB,cAAckF,wBAAwB9rB,EAAO0rB,GAGlD9sB,KAAK2oB,gBAAgBuE,wBAAwB9rB,EAAO0rB,GAEjE9sB,KAAKmmB,YAAY6G,kBAAkB5rB,EAAM8N,KAAM4Z,IAEnDhD,EAAKnkB,UAAUwrB,UAAY,WACnBntB,KAAKymB,uBACLzmB,KAAKymB,sBAAsB0G,UAzZhB,mBA4ZnBrH,EAAKnkB,UAAUyrB,OAAS,WAChBptB,KAAKymB,uBACLzmB,KAAKymB,sBAAsB2G,OA9ZhB,mBAianBtH,EAAKnkB,UAAU0rB,MAAQ,SAAUC,GAE7B,QADkB,IAAdA,IAAwBA,GAAY,GACjB,oBAAZnoB,QAAX,CAEA,IAAIkoB,EACAC,GACKttB,KAAKkmB,iBACNlmB,KAAKkmB,eAAiB,IAAIT,EAAgB8H,cAAcvtB,KAAK4mB,SACjEyG,EAAQrtB,KAAKkmB,eAAehlB,OAG5BmsB,EAAQrtB,KAAK4mB,OAAO1lB,MAExB,IAAIssB,EAAczmB,OAAOuF,KAAK+gB,GAAOI,OAAO,SAAUC,EAAeC,GACjE,OAAOtiB,KAAKyH,IAAI6a,EAAa7qB,OAAQ4qB,IACtC,GACHrmB,EAAO2F,QAAQqgB,EAAO,SAAUO,EAAM1mB,GAElC,IAAK,IAAIyB,EAAIilB,EAAK9qB,OAAQ6F,EAAI6kB,EAAc,EAAG7kB,IAC3CilB,GAAQ,IACZzoB,QAAQC,IAAIwoB,EAAO1mB,OAG3B4e,EAAKnkB,UAAUksB,sBAAwB,SAAUC,GAC7C9tB,KAAK4mB,OAAOmH,iBAAiBD,GAC7B9tB,KAAK0nB,eAAesG,YAAYF,IAMpChI,EAAKnkB,UAAUipB,KAAO,WAElB,IAAK,IADDpiB,KACK5F,EAAK,EAAGA,EAAK6F,UAAU3F,OAAQF,IACpC4F,EAAS5F,GAAM6F,UAAU7F,GAE7B,IAAI+G,EAAS,GACT3J,KAAKymB,wBACL9c,EAAS3J,KAAKymB,sBAAsB7e,GAAK,KAE7CR,EAAOhC,IAAI0D,WAAM,GAASa,GAAQC,OAAOpB,KAO7Csd,EAAKnkB,UAAU6pB,uBAAyB,SAAUre,EAAU0b,EAAQuC,GAC5Dje,GACA/F,EAAOmI,eAAe,WAClB,GAAc,MAAVsZ,EACA1b,EAAS,UAER,CACD,IAAI6B,GAAQ6Z,GAAU,SAAS1Z,cAC3BzG,EAAUsG,EACVoc,IACA1iB,GAAW,KAAO0iB,GACtB,IAAIvhB,EAAQ,IAAIE,MAAMrB,GACtBmB,EAAMmF,KAAOA,EACb7B,EAAStD,OAKzB9C,OAAOC,eAAe8e,EAAKnkB,UAAW,YAClCT,IAAK,WACD,OAAOlB,KAAKiuB,aAAejuB,KAAKiuB,WAAa,IAAIpI,EAAWqI,SAASluB,QAEzEyQ,YAAY,EACZC,cAAc,IAEXoV,EArec,qCCtBzB/e,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IA0DtDD,EAAQknB,UAnDuB,WAM3B,SAAAA,EAAmBC,EAAOC,EAAmBC,GACzCtuB,KAAKouB,MAAQA,EACbpuB,KAAKquB,kBAAoBA,EACzBruB,KAAKsuB,UAAYA,EAwCrB,OAlCAH,EAAUxsB,UAAU4sB,mBAAqB,WACrC,OAAOvuB,KAAKquB,mBAMhBF,EAAUxsB,UAAU6sB,WAAa,WAC7B,OAAOxuB,KAAKsuB,WAMhBH,EAAUxsB,UAAU8sB,kBAAoB,SAAUvf,GAC9C,GAAIA,EAAKwC,UACL,OAAO1R,KAAKuuB,uBAAyBvuB,KAAKsuB,UAE9C,IAAIlP,EAAWlQ,EAAKyB,WACpB,OAAO3Q,KAAK0uB,mBAAmBtP,IAMnC+O,EAAUxsB,UAAU+sB,mBAAqB,SAAUviB,GAC/C,OAASnM,KAAKuuB,uBAAyBvuB,KAAKsuB,WAActuB,KAAKouB,MAAMtX,SAAS3K,IAKlFgiB,EAAUxsB,UAAU4mB,QAAU,WAC1B,OAAOvoB,KAAKouB,OAETD,EAjDmB,qCCP9BpnB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAsM,EAAA1N,EAAA,GACA6oB,EAAA7oB,EAAA,KACA8oB,EAAA9oB,EAAA,KACAqB,EAAArB,EAAA,KACA+oB,EAAA/oB,EAAA,KACAgpB,EAAAhpB,EAAA,KACAipB,EAAAjpB,EAAA,KACAoV,EAAApV,EAAA,KACAkpB,EAAAlpB,EAAA,KACAmpB,EAAAnpB,EAAA,KACAsB,EAAAtB,EAAA,KACAuB,EAAAvB,EAAA,KACAopB,EAAAppB,EAAA,KACAqpB,EAAA,SAAApb,GAaA,SAAAob,EAAAC,EAAAlgB,GAEA,KAAAkgB,aAAAL,EAAAjJ,MACA,MAAA,IAAA/b,MAAA,6DAIA,OADAgK,EAAA6G,KAAA5a,KAAAovB,EAAAlgB,EAAA8f,EAAAK,YAAAC,SAAA,IAAAtvB,KA6OA,OA/PAwT,EAAAQ,UAAAmb,EAAApb,GAsBAob,EAAAxtB,UAAA4tB,OAAA,WAEA,OADAnoB,EAAAooB,iBAAA,gBAAA,EAAA,EAAA/mB,UAAA3F,QACA9C,KAAAkP,KAAAwC,UACA,KAEA1R,KAAAkP,KAAA4B,WAMAqe,EAAAxtB,UAAA4P,MAAA,SAAAR,GAWA,OAVA3J,EAAAooB,iBAAA,kBAAA,EAAA,EAAA/mB,UAAA3F,QACA,iBAAAiO,EACAA,EAAAG,OAAAH,GAEAA,aAAAmK,EAAAhL,OACA,OAAAlQ,KAAAkP,KAAAyB,WACAse,EAAAjS,uBAAA,kBAAA,EAAAjM,GAAA,GAEAke,EAAAlS,mBAAA,kBAAA,EAAAhM,GAAA,IAEA,IAAAoe,EAAAnvB,KAAAovB,KAAApvB,KAAAkP,KAAAqC,MAAAR,KAGAoe,EAAAxtB,UAAA8tB,UAAA,WACAroB,EAAAooB,iBAAA,mBAAA,EAAA,EAAA/mB,UAAA3F,QACA,IAAA4sB,EAAA1vB,KAAAkP,KAAAmC,SACA,OAAA,OAAAqe,EAAA,KAAA,IAAAP,EAAAnvB,KAAAovB,KAAAM,IAGAP,EAAAxtB,UAAAguB,QAAA,WACAvoB,EAAAooB,iBAAA,iBAAA,EAAA,EAAA/mB,UAAA3F,QAEA,IADA,IAAA8sB,EAAA5vB,KACA,OAAA4vB,EAAAH,aACAG,EAAAA,EAAAH,YAEA,OAAAG,GAGAT,EAAAxtB,UAAAkuB,aAAA,WACA,OAAA7vB,KAAAovB,KAAAU,UAOAX,EAAAxtB,UAAA6H,IAAA,SAAAmhB,EAAAtC,GACAjhB,EAAAooB,iBAAA,gBAAA,EAAA,EAAA/mB,UAAA3F,QACAmsB,EAAAhS,qBAAA,gBAAAjd,KAAAkP,MACA+f,EAAArT,wBAAA,gBAAA,EAAA+O,EAAA3qB,KAAAkP,MAAA,GACA9H,EAAA2oB,iBAAA,gBAAA,EAAA1H,GAAA,GACA,IAAA2H,EAAA,IAAA3oB,EAAA4oB,SAGA,OAFAjwB,KAAAovB,KAAA1E,gBAAA1qB,KAAAkP,KAAAyb,EACA,KAAAqF,EAAAE,aAAA7H,IACA2H,EAAAG,SAOAhB,EAAAxtB,UAAAuG,OAAA,SAAAkoB,EAAA/H,GAGA,GAFAjhB,EAAAooB,iBAAA,mBAAA,EAAA,EAAA/mB,UAAA3F,QACAmsB,EAAAhS,qBAAA,mBAAAjd,KAAAkP,MACAtG,MAAAC,QAAAunB,GAAA,CAEA,IAAA,IADAC,KACA1nB,EAAA,EAA2BA,EAAAynB,EAAAttB,SAA0B6F,EACrD0nB,EAAA,GAAA1nB,GAAAynB,EAAAznB,GAEAynB,EAAAC,EACAlpB,EAAA6C,KAAA,wMAKAilB,EAAAvS,6BAAA,mBAAA,EAAA0T,EAAApwB,KAAAkP,MAAA,GACA9H,EAAA2oB,iBAAA,mBAAA,EAAA1H,GAAA,GACA,IAAA2H,EAAA,IAAA3oB,EAAA4oB,SAEA,OADAjwB,KAAAovB,KAAAlnB,OAAAlI,KAAAkP,KAAAkhB,EAAAJ,EAAAE,aAAA7H,IACA2H,EAAAG,SAQAhB,EAAAxtB,UAAA+oB,gBAAA,SAAAC,EAAAvT,EAAAiR,GAMA,GALAjhB,EAAAooB,iBAAA,4BAAA,EAAA,EAAA/mB,UAAA3F,QACAmsB,EAAAhS,qBAAA,4BAAAjd,KAAAkP,MACA+f,EAAArT,wBAAA,4BAAA,EAAA+O,EAAA3qB,KAAAkP,MAAA,GACA+f,EAAAtS,iBAAA,4BAAA,EAAAvF,GAAA,GACAhQ,EAAA2oB,iBAAA,4BAAA,EAAA1H,GAAA,GACA,YAAAroB,KAAAuvB,UAAA,UAAAvvB,KAAAuvB,SACA,KAAA,qCACAvvB,KAAAuvB,SACA,0BACA,IAAAS,EAAA,IAAA3oB,EAAA4oB,SAEA,OADAjwB,KAAAovB,KAAA1E,gBAAA1qB,KAAAkP,KAAAyb,EAAAvT,EAAA4Y,EAAAE,aAAA7H,IACA2H,EAAAG,SAMAhB,EAAAxtB,UAAA8H,OAAA,SAAA4e,GAIA,OAHAjhB,EAAAooB,iBAAA,mBAAA,EAAA,EAAA/mB,UAAA3F,QACAmsB,EAAAhS,qBAAA,mBAAAjd,KAAAkP,MACA9H,EAAA2oB,iBAAA,mBAAA,EAAA1H,GAAA,GACAroB,KAAAwJ,IAAA,KAAA6e,IAQA8G,EAAAxtB,UAAA2uB,YAAA,SAAAC,EAAAlI,EAAAmI,GAQA,GAPAppB,EAAAooB,iBAAA,wBAAA,EAAA,EAAA/mB,UAAA3F,QACAmsB,EAAAhS,qBAAA,wBAAAjd,KAAAkP,MACA9H,EAAA2oB,iBAAA,wBAAA,EAAAQ,GAAA,GACAnpB,EAAA2oB,iBAAA,wBAAA,EAAA1H,GAAA,GAGA4G,EAAAxR,gBAAA,wBAAA,EAAA+S,GAAA,GACA,YAAAxwB,KAAAuvB,UAAA,UAAAvvB,KAAAuvB,SACA,KAAA,iCACAvvB,KAAAuvB,SACA,+BACAvT,IAAAwU,IACAA,GAAA,GACA,IAAAR,EAAA,IAAA3oB,EAAA4oB,SACA,mBAAA5H,GACA2H,EAAAG,QAAAM,MAAA,cAcA,OADAzwB,KAAAovB,KAAAsB,iBAAA1wB,KAAAkP,KAAAqhB,EAXA,SAAA1mB,EAAA8mB,EAAA1R,GACApV,EACAmmB,EAAAY,OAAA/mB,GAGAmmB,EAAAa,QAAA,IAAAjC,EAAAkC,kBAAAH,EAAA1R,IAEA,mBAAAoJ,GACAA,EAAAxe,EAAA8mB,EAAA1R,IAGAuR,GACAR,EAAAG,SAOAhB,EAAAxtB,UAAAovB,YAAA,SAAApV,EAAA0M,GACAjhB,EAAAooB,iBAAA,wBAAA,EAAA,EAAA/mB,UAAA3F,QACAmsB,EAAAhS,qBAAA,wBAAAjd,KAAAkP,MACA+f,EAAAtS,iBAAA,wBAAA,EAAAhB,GAAA,GACAvU,EAAA2oB,iBAAA,wBAAA,EAAA1H,GAAA,GACA,IAAA2H,EAAA,IAAA3oB,EAAA4oB,SAEA,OADAjwB,KAAAovB,KAAA1E,gBAAA1qB,KAAAkP,KAAAqC,MAAA,aAAAoK,EAAA,KAAAqU,EAAAE,aAAA7H,IACA2H,EAAAG,SAOAhB,EAAAxtB,UAAAsD,KAAA,SAAAiC,EAAAmhB,GACAjhB,EAAAooB,iBAAA,iBAAA,EAAA,EAAA/mB,UAAA3F,QACAmsB,EAAAhS,qBAAA,iBAAAjd,KAAAkP,MACA+f,EAAArT,wBAAA,iBAAA,EAAA1U,EAAAlH,KAAAkP,MAAA,GACA9H,EAAA2oB,iBAAA,iBAAA,EAAA1H,GAAA,GACA,IASA8H,EATAa,EAAAhxB,KAAAovB,KAAAlG,aACA1lB,EAAAqrB,EAAAoC,WAAAD,GAMAE,EAAAlxB,KAAAuR,MAAA/N,GACA2tB,EAAAnxB,KAAAuR,MAAA/N,GAaA,OAVA2sB,EADA,MAAAjpB,EACAgqB,EAAA1nB,IAAAtC,EAAAmhB,GAAA+I,KAAA,WAAgF,OAAAD,IAGhFE,QAAAR,QAAAM,GAEAD,EAAAE,KAAAjB,EAAAiB,KAAA9nB,KAAA6mB,GACAe,EAAAT,MAAAN,EAAAiB,KAAA9nB,KAAA6mB,OAAAnU,GACA,mBAAAqM,GACA8H,EAAAM,MAAA,cAEAS,GAKA/B,EAAAxtB,UAAA2vB,aAAA,WAEA,OADArC,EAAAhS,qBAAA,yBAAAjd,KAAAkP,MACA,IAAAyf,EAAA4C,aAAAvxB,KAAAovB,KAAApvB,KAAAkP,OAEAnI,OAAAC,eAAAmoB,EAAAxtB,UAAA,YACAT,IAAA,WACA,OAAAlB,KAAA6vB,gBAEApf,YAAA,EACAC,cAAA,IAEA3J,OAAAC,eAAAmoB,EAAAxtB,UAAA,OACAT,IAAA,WACA,OAAAlB,KAAAuvB,UAEA9e,YAAA,EACAC,cAAA,IAEA3J,OAAAC,eAAAmoB,EAAAxtB,UAAA,UACAT,IAAA,WACA,OAAAlB,KAAAyvB,aAEAhf,YAAA,EACAC,cAAA,IAEA3J,OAAAC,eAAAmoB,EAAAxtB,UAAA,QACAT,IAAA,WACA,OAAAlB,KAAA2vB,WAEAlf,YAAA,EACAC,cAAA,IAEAye,EAhQA,CAiQCL,EAAA0C,OACDvqB,EAAAkoB,UAAAA,EAOAL,EAAA0C,MAAAC,uBAAAtC,EACAD,EAAAwC,UAAAD,uBAAAtC,oCCxRApoB,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAIC,EAASrB,EAAQ,KACjBmpB,EAAenpB,EAAQ,KACvBoV,EAASpV,EAAQ,KACjB2P,EAAkB3P,EAAQ,KAsJ9BmB,EAAQ0qB,aAjJ0B,WAM9B,SAAAA,EAAsBvD,EAAOwD,EAAMC,GAC/B7xB,KAAKouB,MAAQA,EACbpuB,KAAK4xB,KAAOA,EACZ5xB,KAAK6xB,OAASA,EAsIlB,OA9HAF,EAAahwB,UAAUsL,IAAM,WAEzB,OADA9F,EAAOqoB,iBAAiB,mBAAoB,EAAG,EAAG/mB,UAAU3F,QACrD9C,KAAKouB,MAAMnhB,OAOtB0kB,EAAahwB,UAAUmwB,UAAY,WAE/B,OADA3qB,EAAOqoB,iBAAiB,yBAA0B,EAAG,EAAG/mB,UAAU3F,QAC3D9C,KAAKouB,MAAMnhB,KAAI,IAI1B0kB,EAAahwB,UAAUowB,OAAS,WAG5B,OADA5qB,EAAOqoB,iBAAiB,sBAAuB,EAAG,EAAG/mB,UAAU3F,QACxD9C,KAAK8xB,aAOhBH,EAAahwB,UAAUqwB,OAAS,WAE5B,OADA7qB,EAAOqoB,iBAAiB,sBAAuB,EAAG,EAAG/mB,UAAU3F,SACvD9C,KAAKouB,MAAM1c,WAQvBigB,EAAahwB,UAAU4P,MAAQ,SAAU0gB,GACrC9qB,EAAOqoB,iBAAiB,qBAAsB,EAAG,EAAG/mB,UAAU3F,QAE9DmvB,EAAkB/gB,OAAO+gB,GACzBhD,EAAalS,mBAAmB,qBAAsB,EAAGkV,GAAiB,GAC1E,IAAIC,EAAY,IAAIhX,EAAOhL,KAAK+hB,GAC5BE,EAAWnyB,KAAK4xB,KAAKrgB,MAAM2gB,GAC/B,OAAO,IAAIP,EAAa3xB,KAAKouB,MAAMxX,SAASsb,GAAYC,EAAU1c,EAAgBJ,iBAQtFsc,EAAahwB,UAAUmV,SAAW,SAAUmb,GACxC9qB,EAAOqoB,iBAAiB,wBAAyB,EAAG,EAAG/mB,UAAU3F,QACjEmsB,EAAalS,mBAAmB,wBAAyB,EAAGkV,GAAiB,GAC7E,IAAIC,EAAY,IAAIhX,EAAOhL,KAAK+hB,GAChC,OAAQjyB,KAAKouB,MAAMxX,SAASsb,GAAWxgB,WAO3CigB,EAAahwB,UAAUyS,YAAc,WAGjC,OAFAjN,EAAOqoB,iBAAiB,2BAA4B,EAAG,EAAG/mB,UAAU3F,QAE7D9C,KAAKouB,MAAMha,cAAcnH,OAUpC0kB,EAAahwB,UAAUqL,QAAU,SAAUmM,GACvC,IAAIpZ,EAAQC,KAGZ,GAFAmH,EAAOqoB,iBAAiB,uBAAwB,EAAG,EAAG/mB,UAAU3F,QAChEqE,EAAO4oB,iBAAiB,uBAAwB,EAAG5W,GAAQ,GACvDnZ,KAAKouB,MAAM7X,aACX,OAAO,EAGX,QAFmBvW,KAAKouB,MAEFpW,aAAahY,KAAK6xB,OAAQ,SAAU1lB,EAAKgI,GAC3D,OAAOgF,EAAO,IAAIwY,EAAaxd,EAAMpU,EAAM6xB,KAAKrgB,MAAMpF,GAAMsJ,EAAgBJ,oBAOpFsc,EAAahwB,UAAUywB,YAAc,WAEjC,OADAjrB,EAAOqoB,iBAAiB,2BAA4B,EAAG,EAAG/mB,UAAU3F,SAChE9C,KAAKouB,MAAM7X,eAGHvW,KAAKouB,MAAM1c,WAE3B3K,OAAOC,eAAe2qB,EAAahwB,UAAW,OAC1CT,IAAK,WACD,OAAOlB,KAAK4xB,KAAKrC,UAErB9e,YAAY,EACZC,cAAc,IAMlBihB,EAAahwB,UAAU+V,YAAc,WAEjC,OADAvQ,EAAOqoB,iBAAiB,2BAA4B,EAAG,EAAG/mB,UAAU3F,QAC7D9C,KAAKouB,MAAM1W,eAKtBia,EAAahwB,UAAU0wB,OAAS,WAE5B,OADAlrB,EAAOqoB,iBAAiB,mBAAoB,EAAG,EAAG/mB,UAAU3F,QACrD9C,KAAK4xB,MAEhB7qB,OAAOC,eAAe2qB,EAAahwB,UAAW,OAC1CT,IAAK,WACD,OAAOlB,KAAKqyB,UAEhB5hB,YAAY,EACZC,cAAc,IAEXihB,EA/IsB,qCCTjC5qB,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAIIorB,EAJA/c,EAAczP,EAAQ,KACtBoV,EAASpV,EAAQ,KACjBqB,EAASrB,EAAQ,KACjBsB,EAAStB,EAAQ,KAQjBysB,EAAgB,WAIhB,OAHKD,IACDA,EAAyB,IAAI/c,EAAYY,UAAUhP,EAAO8E,gBAEvDqmB,GAkUXrrB,EAAQurB,cA7T2B,WAM/B,SAAAA,EAAuBtrB,EAAOurB,QACT,IAAbA,IAAuBA,EAAWF,KACtCvyB,KAAKkH,MAAQA,EACblH,KAAKyyB,SAAWA,EAkTpB,OA3SAD,EAAcE,WAAa,SAAUtmB,GACjC,IAAIumB,EAAOH,EAAcpG,MAIzB,OAHAhlB,EAAO4F,QAAQZ,EAAK,SAAU8lB,EAAWU,GACrCD,EAAOA,EAAKnpB,IAAI,IAAI0R,EAAOhL,KAAKgiB,GAAYU,KAEzCD,GAMXH,EAAc7wB,UAAU+P,QAAU,WAC9B,OAAsB,OAAf1R,KAAKkH,OAAkBlH,KAAKyyB,SAAS/gB,WAchD8gB,EAAc7wB,UAAUkxB,iCAAmC,SAAUlhB,EAAcmhB,GAC/E,GAAkB,MAAd9yB,KAAKkH,OAAiB4rB,EAAU9yB,KAAKkH,OACrC,OAASgI,KAAMgM,EAAOhL,KAAKkc,MAAOllB,MAAOlH,KAAKkH,OAG9C,GAAIyK,EAAaD,UACb,OAAO,KAGP,IAAImF,EAAQlF,EAAahB,WACrBY,EAAQvR,KAAKyyB,SAASvxB,IAAI2V,GAC9B,GAAc,OAAVtF,EAAgB,CAChB,IAAIwhB,EAA4BxhB,EAAMshB,iCAAiClhB,EAAad,WAAYiiB,GAChG,GAAiC,MAA7BC,EAAmC,CAEnC,OAAS7jB,KADM,IAAIgM,EAAOhL,KAAK2G,GAAOtF,MAAMwhB,EAA0B7jB,MAC7ChI,MAAO6rB,EAA0B7rB,OAG1D,OAAO,KAIX,OAAO,MAWvBsrB,EAAc7wB,UAAUqxB,yBAA2B,SAAUrhB,GACzD,OAAO3R,KAAK6yB,iCAAiClhB,EAAc,WAAc,OAAO,KAMpF6gB,EAAc7wB,UAAUsxB,QAAU,SAAUthB,GACxC,GAAIA,EAAaD,UACb,OAAO1R,KAGP,IAAI6W,EAAQlF,EAAahB,WACrBuiB,EAAYlzB,KAAKyyB,SAASvxB,IAAI2V,GAClC,OAAkB,OAAdqc,EACOA,EAAUD,QAAQthB,EAAad,YAG/B2hB,EAAcpG,OAWjCoG,EAAc7wB,UAAU6H,IAAM,SAAUmI,EAAcwhB,GAClD,GAAIxhB,EAAaD,UACb,OAAO,IAAI8gB,EAAcW,EAAOnzB,KAAKyyB,UAGrC,IAAI5b,EAAQlF,EAAahB,WAErByiB,GADQpzB,KAAKyyB,SAASvxB,IAAI2V,IAAU2b,EAAcpG,OACjC5iB,IAAImI,EAAad,WAAYsiB,GAC9Cjc,EAAclX,KAAKyyB,SAASnb,OAAOT,EAAOuc,GAC9C,OAAO,IAAIZ,EAAcxyB,KAAKkH,MAAOgQ,IAS7Csb,EAAc7wB,UAAU8H,OAAS,SAAUkI,GACvC,GAAIA,EAAaD,UACb,OAAI1R,KAAKyyB,SAAS/gB,UACP8gB,EAAcpG,MAGd,IAAIoG,EAAc,KAAMxyB,KAAKyyB,UAIxC,IAAI5b,EAAQlF,EAAahB,WACrBY,EAAQvR,KAAKyyB,SAASvxB,IAAI2V,GAC9B,GAAItF,EAAO,CACP,IAAI6hB,EAAW7hB,EAAM9H,OAAOkI,EAAad,YACrCqG,OAAc,EAOlB,OALIA,EADAkc,EAAS1hB,UACK1R,KAAKyyB,SAAShpB,OAAOoN,GAGrB7W,KAAKyyB,SAASnb,OAAOT,EAAOuc,GAE3B,OAAfpzB,KAAKkH,OAAkBgQ,EAAYxF,UAC5B8gB,EAAcpG,MAGd,IAAIoG,EAAcxyB,KAAKkH,MAAOgQ,GAIzC,OAAOlX,MAUnBwyB,EAAc7wB,UAAUT,IAAM,SAAUyQ,GACpC,GAAIA,EAAaD,UACb,OAAO1R,KAAKkH,MAGZ,IAAI2P,EAAQlF,EAAahB,WACrBY,EAAQvR,KAAKyyB,SAASvxB,IAAI2V,GAC9B,OAAItF,EACOA,EAAMrQ,IAAIyQ,EAAad,YAGvB,MAWnB2hB,EAAc7wB,UAAU0xB,QAAU,SAAU1hB,EAAc2hB,GACtD,GAAI3hB,EAAaD,UACb,OAAO4hB,EAGP,IAAIzc,EAAQlF,EAAahB,WAErByiB,GADQpzB,KAAKyyB,SAASvxB,IAAI2V,IAAU2b,EAAcpG,OACjCiH,QAAQ1hB,EAAad,WAAYyiB,GAClDpc,OAAc,EAOlB,OALIA,EADAkc,EAAS1hB,UACK1R,KAAKyyB,SAAShpB,OAAOoN,GAGrB7W,KAAKyyB,SAASnb,OAAOT,EAAOuc,GAEvC,IAAIZ,EAAcxyB,KAAKkH,MAAOgQ,IAW7Csb,EAAc7wB,UAAU4xB,KAAO,SAAU1oB,GACrC,OAAO7K,KAAKwzB,MAAMtY,EAAOhL,KAAKkc,MAAOvhB,IAUzC2nB,EAAc7wB,UAAU6xB,MAAQ,SAAUC,EAAW5oB,GACjD,IAAI6oB,KAIJ,OAHA1zB,KAAKyyB,SAASrZ,iBAAiB,SAAUgG,EAAU8T,GAC/CQ,EAAMtU,GAAY8T,EAAUM,MAAMC,EAAUliB,MAAM6N,GAAWvU,KAE1DA,EAAG4oB,EAAWzzB,KAAKkH,MAAOwsB,IASrClB,EAAc7wB,UAAUgyB,WAAa,SAAUzkB,EAAMzB,GACjD,OAAOzN,KAAK4zB,YAAY1kB,EAAMgM,EAAOhL,KAAKkc,MAAO3e,IAErD+kB,EAAc7wB,UAAUiyB,YAAc,SAAUC,EAAcJ,EAAWhmB,GACrE,IAAI4V,IAASrjB,KAAKkH,OAAQuG,EAAEgmB,EAAWzzB,KAAKkH,OAC5C,GAAImc,EACA,OAAOA,EAGP,GAAIwQ,EAAaniB,UACb,OAAO,KAGP,IAAImF,EAAQgd,EAAaljB,WACrBmjB,EAAY9zB,KAAKyyB,SAASvxB,IAAI2V,GAClC,OAAIid,EACOA,EAAUF,YAAYC,EAAahjB,WAAY4iB,EAAUliB,MAAMsF,GAAQpJ,GAGvE,MAWvB+kB,EAAc7wB,UAAUoyB,cAAgB,SAAU7kB,EAAMzB,GACpD,OAAOzN,KAAKg0B,eAAe9kB,EAAMgM,EAAOhL,KAAKkc,MAAO3e,IAExD+kB,EAAc7wB,UAAUqyB,eAAiB,SAAUH,EAAcI,EAAqBxmB,GAClF,GAAIomB,EAAaniB,UACb,OAAO1R,KAGHA,KAAKkH,OACLuG,EAAEwmB,EAAqBj0B,KAAKkH,OAEhC,IAAI2P,EAAQgd,EAAaljB,WACrBmjB,EAAY9zB,KAAKyyB,SAASvxB,IAAI2V,GAClC,OAAIid,EACOA,EAAUE,eAAeH,EAAahjB,WAAYojB,EAAoB1iB,MAAMsF,GAAQpJ,GAGpF+kB,EAAcpG,OAWjCoG,EAAc7wB,UAAUuyB,QAAU,SAAUzmB,GACxCzN,KAAKm0B,SAASjZ,EAAOhL,KAAKkc,MAAO3e,IAErC+kB,EAAc7wB,UAAUwyB,SAAW,SAAUF,EAAqBxmB,GAC9DzN,KAAKyyB,SAASrZ,iBAAiB,SAAUzC,EAAWuc,GAChDA,EAAUiB,SAASF,EAAoB1iB,MAAMoF,GAAYlJ,KAEzDzN,KAAKkH,OACLuG,EAAEwmB,EAAqBj0B,KAAKkH,QAOpCsrB,EAAc7wB,UAAUyyB,aAAe,SAAU3mB,GAC7CzN,KAAKyyB,SAASrZ,iBAAiB,SAAUzC,EAAWuc,GAC5CA,EAAUhsB,OACVuG,EAAEkJ,EAAWuc,EAAUhsB,UAInCsrB,EAAcpG,MAAQ,IAAIoG,EAAc,MACjCA,EA3TuB,qCCrBlCzrB,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAIC,EAASrB,EAAQ,KACjBuuB,EAAWvuB,EAAQ,KACnBka,EAAiBla,EAAQ,KACzB2P,EAAkB3P,EAAQ,KA8G9BmB,EAAQqtB,cAtG2B,WAC/B,SAAAA,EAAuBzC,GACnB7xB,KAAK6xB,OAASA,EAkGlB,OAhGAyC,EAAc3yB,UAAU6V,YAAc,SAAUyS,EAAM9d,EAAKinB,EAAUlJ,EAAcqK,EAAQC,GACvFrtB,EAAOkC,OAAO4gB,EAAK5P,UAAUra,KAAK6xB,QAAS,qDAC3C,IAAI4C,EAAWxK,EAAKvT,kBAAkBvK,GAEtC,OAAIsoB,EAAS7d,SAASsT,GAAc5X,OAAO8gB,EAASxc,SAASsT,KAIrDuK,EAAS/iB,WAAa0hB,EAAS1hB,UAIxBuY,GAGa,MAAxBuK,IACIpB,EAAS1hB,UACLuY,EAAKnT,SAAS3K,GACdqoB,EAAqBE,iBAAiBL,EAAS1V,OAAOW,mBAAmBnT,EAAKsoB,IAG9EttB,EAAOkC,OAAO4gB,EAAK1T,aAAc,uEAIrCie,EAAqBE,iBADhBD,EAAS/iB,UACwB2iB,EAAS1V,OAAOQ,iBAAiBhT,EAAKinB,GAGtCiB,EAAS1V,OAAOa,mBAAmBrT,EAAKinB,EAAUqB,KAG5FxK,EAAK1T,cAAgB6c,EAAS1hB,UACvBuY,EAIAA,EAAKlT,qBAAqB5K,EAAKinB,GAAUnZ,UAAUja,KAAK6xB,UAMvEyC,EAAc3yB,UAAUgzB,eAAiB,SAAU7V,EAAS8V,EAASJ,GAuBjE,OAtB4B,MAAxBA,IACK1V,EAAQvI,cACTuI,EAAQ9G,aAAavC,EAAgBJ,eAAgB,SAAUlJ,EAAK8L,GAC3D2c,EAAQ9d,SAAS3K,IAClBqoB,EAAqBE,iBAAiBL,EAAS1V,OAAOW,mBAAmBnT,EAAK8L,MAIrF2c,EAAQre,cACTqe,EAAQ5c,aAAavC,EAAgBJ,eAAgB,SAAUlJ,EAAK8L,GAChE,GAAI6G,EAAQhI,SAAS3K,GAAM,CACvB,IAAIsoB,EAAW3V,EAAQpI,kBAAkBvK,GACpCsoB,EAASniB,OAAO2F,IACjBuc,EAAqBE,iBAAiBL,EAAS1V,OAAOa,mBAAmBrT,EAAK8L,EAAWwc,SAI7FD,EAAqBE,iBAAiBL,EAAS1V,OAAOQ,iBAAiBhT,EAAK8L,OAKrF2c,EAAQ3a,UAAUja,KAAK6xB,SAKlCyC,EAAc3yB,UAAU6U,eAAiB,SAAUsI,EAAS1H,GACxD,OAAI0H,EAAQpN,UACDsO,EAAenK,aAAaP,WAG5BwJ,EAAQtI,eAAeY,IAMtCkd,EAAc3yB,UAAUkzB,aAAe,WACnC,OAAO,GAKXP,EAAc3yB,UAAUmzB,iBAAmB,WACvC,OAAO90B,MAKXs0B,EAAc3yB,UAAUozB,SAAW,WAC/B,OAAO/0B,KAAK6xB,QAETyC,EApGuB,qCCZlCvtB,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAI8tB,EAAoBlvB,EAAQ,KAsBhCmB,EAAQ4f,aArB0B,WAC9B,SAAAA,KAkBA,OAhBAA,EAAaC,cAAgB,SAAU1J,GACnC,IAAI6X,EAAa7X,EAAS7O,WAI1B,OAHKvO,KAAKk1B,aAAaD,KACnBj1B,KAAKk1B,aAAaD,GAAc,IAAID,EAAkBG,iBAEnDn1B,KAAKk1B,aAAaD,IAE7BpO,EAAac,oBAAsB,SAAUvK,EAAUgY,GACnD,IAAIH,EAAa7X,EAAS7O,WAI1B,OAHKvO,KAAKq1B,WAAWJ,KACjBj1B,KAAKq1B,WAAWJ,GAAcG,KAE3Bp1B,KAAKq1B,WAAWJ,IAE3BpO,EAAaqO,gBACbrO,EAAawO,cACNxO,EAnBsB,qCCFjC9f,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAIC,EAASrB,EAAQ,KACjBipB,EAASjpB,EAAQ,KACjBsB,EAAStB,EAAQ,KACjBwvB,EAAWxvB,EAAQ,KACnBmpB,EAAenpB,EAAQ,KAC3BA,EAAQ,KAER,IACIyvB,EAyGJtuB,EAAQuuB,YArGyB,WAC7B,SAAAA,IAIIx1B,KAAKy1B,UAKLz1B,KAAK01B,gBAAiB,EAyF1B,OAvFAF,EAAYG,YAAc,WAItB,OAHKJ,IACDA,EAAkB,IAAIC,GAEnBD,GAGXC,EAAY7zB,UAAUwrB,UAAY,WAC9B,IAAK,IAAIyI,KAAW51B,KAAKy1B,OACrB,IAAK,IAAII,KAAS71B,KAAKy1B,OAAOG,GAC1B51B,KAAKy1B,OAAOG,GAASC,GAAO1I,aAIxCqI,EAAY7zB,UAAUyrB,OAAS,WAC3B,IAAK,IAAIwI,KAAW51B,KAAKy1B,OACrB,IAAK,IAAII,KAAS71B,KAAKy1B,OAAOG,GAC1B51B,KAAKy1B,OAAOG,GAASC,GAAOzI,UAUxCoI,EAAY7zB,UAAUm0B,gBAAkB,SAAU33B,EAAK0F,GACnD,IAAIgyB,EAAQhyB,GAAO1F,EAAIipB,QAA2B,iBACpCpL,IAAV6Z,GACAzuB,EAAO0C,MAAM,wHAIjB,IAAIqT,EAAYmY,EAASS,cAAcF,GACnCzY,EAAWD,EAAUC,SACzB6R,EAAa/R,YAAY,gCAAiC,EAAGC,GACxDA,EAAUjO,KAAKwC,WAChBtK,EAAO0C,MAAM,4FAIjB,OADW9J,KAAKg2B,WAAW5Y,EAAUjf,GACzB2xB,UAOhB0F,EAAY7zB,UAAUs0B,WAAa,SAAU7G,GACzC,IAAI8G,EAAW/uB,EAAO6W,QAAQhe,KAAKy1B,OAAQrG,EAAKjxB,IAAIqF,MAE/C0yB,GAAY/uB,EAAO6W,QAAQkY,EAAU9G,EAAKrJ,UAAUoQ,iBAAmB/G,GACxEhoB,EAAO0C,MAAM,YAAcslB,EAAKjxB,IAAIqF,KAAO,IAAM4rB,EAAKrJ,UAAY,+BAEtEqJ,EAAKjC,mBACE+I,EAAS9G,EAAKrJ,UAAUoQ,gBAUnCX,EAAY7zB,UAAUq0B,WAAa,SAAU5Y,EAAUjf,GACnD,IAAI+3B,EAAW/uB,EAAO6W,QAAQhe,KAAKy1B,OAAQt3B,EAAIqF,MAC1C0yB,IAEDl2B,KAAKy1B,OAAOt3B,EAAIqF,MADhB0yB,MAGJ,IAAI9G,EAAOjoB,EAAO6W,QAAQkY,EAAU9Y,EAAS+Y,eAM7C,OALI/G,GACAhoB,EAAO0C,MAAM,2HAEjBslB,EAAO,IAAIL,EAAOjJ,KAAK1I,EAAUpd,KAAK01B,eAAgBv3B,GACtD+3B,EAAS9Y,EAAS+Y,eAAiB/G,EAC5BA,GAMXoG,EAAY7zB,UAAUqkB,gBAAkB,SAAUA,GAC9ChmB,KAAK01B,eAAiB1P,GAEnBwP,EAnGqB,qCC5BhC,IAAAY,EAAAtwB,EAAA,KACAuwB,EAAAvwB,EAAA,KA2CAmB,EAAAqvB,MAAA,IAAAD,EAAAE,eAAAH,EAAAI,+CC5CA,SAAAC,EAAArqB,GACA,YAAA4P,IAAA5P,GAAA,OAAAA,EAEA,SAAAsqB,EAAAtqB,EAAAD,GACA,OAAAC,QAAA4P,IAAA5P,EAAAD,GAKA,SAAAwqB,EAAAzvB,GACA,MAAA,mBAAAA,EAAAsC,IAiBA,SAAAotB,EAAA3X,GACA,IAAA4X,EAAAJ,EAAAxX,EAAAhS,QAA+D6pB,OAAA,MAA/D7X,EAAAhS,MAgBA,MAfA,wBAAAyB,YAAAmoB,KACAA,GACAC,OAAAD,IAGA9vB,OAAAC,eAAA6vB,EAAA,QACA3vB,MAAA+X,EAAA2Q,IAAAzjB,IACAsE,YAAA,IAEA1J,OAAAC,eAAA6vB,EAAA,WACA3vB,MAAA,WACA,OAAA+X,EAAA+S,UAEAvhB,YAAA,IAEAomB,EA2BA,SAAAxE,EAAAl0B,EAAA44B,GACA,GAAAJ,EAAAI,GACA,OAAAA,EAEA,IAAA7nB,EAAA6nB,EACA,OARA,SAAAlzB,GACA,OAAAmzB,EAAAtoB,KAAA7K,GAOAozB,CAAAF,GACA54B,EAAA2xB,WAAAoH,WAAAhoB,GAEA/Q,EAAA2xB,WAAAF,IAAA1gB,GCxEA,SAAAioB,EAAA/1B,EAAAg2B,GAEA,YADA,IAAAA,IAA2BA,GAAA,GAC3BX,EAAAr1B,GACA2F,OAAAswB,EAAA,GAAAtwB,CAAA,MAEAuwB,EAAA,WAAAx2B,OAAA,SAAAy2B,GACA,IAAAC,EAAAC,EAAA,cAAA7c,KAAA8c,EAAAt2B,GAAAu2B,EAAAv2B,GAAAw2B,EAAAx2B,GAAAy2B,EAAAz2B,GAAA02B,EAAA12B,IACAg2B,IACAI,EAAAO,EAAA,UAAAnd,KAAA4c,EAAA,IAEAA,EACAh2B,UAAA,SAAAqB,GACA,IAAAm1B,EAAAn1B,EAAA,GAAAo1B,EAAAp1B,EAAA,GAAAq1B,EAAAr1B,EAAA,GAAAvB,EAAAuB,EAAA,GAAAs1B,EAAAt1B,EAAA,GACAu1B,KACA,IAAA3B,EAAAuB,KAAAvB,EAAAuB,EAAA9wB,OACA,OAAA8wB,EAAA7rB,KACA,KAAAksB,EAAAC,IACAF,GAA2CG,WAAAP,EAAA9wB,OAC3C,MACA,KAAAmxB,EAAAG,SACAJ,GAA2CK,gBAAAT,EAAA9wB,OAC3C,MACA,KAAAmxB,EAAAK,MACAN,GAA2CO,aAAAX,EAAA9wB,OAC3C,MACA,KAAAmxB,EAAAO,MACAR,GAA2C/2B,aAAA22B,EAAA9wB,OAI3C,IAAAuvB,EAAA0B,KAAA1B,EAAA0B,EAAAjxB,OACA,OAAAixB,EAAAhsB,KACA,KAAA0sB,EAAAC,MACAV,EAAAW,aAAAZ,EAAAjxB,MACA,MACA,KAAA2xB,EAAAG,KACAZ,EAAAa,YAAAd,EAAAjxB,WAKA8U,IAAAic,IACAG,EAAAH,QAAAA,QAEAjc,IAAAkc,IACAE,EAAAF,MAAAA,QAEAlc,IAAA1a,IACA82B,EAAA92B,QAAAA,GAEAi2B,EAAA5d,KAAAye,OAIA,SAAAV,EAAAt2B,GACA,IAAA83B,GAAA,eAAA,aAAA,eAAA,mBACA12B,IAAA,SAAA2J,EAAAgtB,GACA,OAAiBhtB,IAAAA,EAAAgtB,OAAAA,KAEjBC,OAAA,SAAAv2B,GAEA,OAAA4zB,EAAAr1B,EADAyB,EAAAsJ,QAGA3J,IAAA,SAAAK,GAEA,OAmFA,SAAAqE,EAAAiF,GACA,OAAAjF,aAAAowB,EAAA,WACA90B,EAAA,IACAoY,KAAA1T,EAAA,SAAAA,GACA,OAAqBA,MAAAA,EAAAiF,IAAAA,KAIrB,IAAAmrB,EAAA,WAAA,SAAA+B,GACAA,EAAA1f,MAA6BxN,IAAAA,EAAAjF,MAAAA,MA5F7BoyB,CAAAl4B,EADAyB,EAAAsJ,KAAAtJ,EAAAs2B,UAGA,OAAA,IAAAD,EAAAp2B,OACAo2B,EAAA,GAEAA,EAAAp2B,OAAA,EACAkpB,EAAA,MAAAljB,MAAAowB,EAAA,GAAAA,EAAA/nB,MAAA,IAGA,IAAAmmB,EAAA,WAAA,SAAA+B,GACAA,EAAA1f,KAAA,QAIA,SAAAme,EAAA12B,GACA,IAAA83B,GAAA,eAAA,eACA12B,IAAA,SAAA2J,EAAAgtB,GAAqC,OAAUhtB,IAAAA,EAAAgtB,OAAAA,KAC/CC,OAAA,SAAAv2B,GAEA,OAAA4zB,EAAAr1B,EADAyB,EAAAsJ,QAGA3J,IAAA,SAAAK,GAEA,OAyEA,SAAAqE,EAAAiF,GACA,OAAAjF,aAAAowB,EAAA,WACA90B,EAAA,IACAoY,KAAA1T,EAAA,SAAAA,GAA2C,OAAUA,MAAAA,EAAAiF,IAAAA,KAGrD,IAAAmrB,EAAA,WAAA,SAAA+B,GACAA,EAAA1f,MAA6BxN,IAAAA,EAAAjF,MAAAA,MAhF7BqyB,CAAAn4B,EADAyB,EAAAsJ,KAAAtJ,EAAAs2B,UAGA,GAAA,IAAAD,EAAAp2B,OACA,OAAAo2B,EAAA,GAEA,GAAAA,EAAAp2B,OAAA,EAAA,CAEA,OADAkpB,EAAA,MAAAljB,MAAAowB,EAAA,GAAAA,EAAA/nB,MAAA,IAIA,OAAA,IAAAmmB,EAAA,WAAA,SAAA+B,GACAA,EAAA1f,KAAA,QAIA,SAAAge,EAAAv2B,GACA,OAAAA,EAAA62B,mBAAAX,EAAA,WACAl2B,EAAA62B,QAGA,IAAAX,EAAA,WADAZ,EAAAt1B,EAAA,WACA,SAAAi4B,GACAA,EAAA1f,KAAAvY,EAAA62B,UAIA,SAAAoB,GACAA,EAAA1f,UAAAqC,KAIA,SAAA4b,EAAAx2B,GACA,OAAAA,EAAA82B,iBAAAZ,EAAA,WACAl2B,EAAA82B,MAGA,IAAAZ,EAAA,WADAZ,EAAAt1B,EAAA,SACA,SAAAi4B,GACAA,EAAA1f,KAAAvY,EAAA82B,QAIA,SAAAmB,GACAA,EAAA1f,UAAAqC,KAIA,SAAA6b,EAAAz2B,GACA,OAAAA,EAAAE,mBAAAg2B,EAAA,WACAl2B,EAAAE,QAGA,IAAAg2B,EAAA,WADAZ,EAAAt1B,EAAA,WACA,SAAAi4B,GACAA,EAAA1f,KAAAvY,EAAAE,UAIA,SAAA+3B,GACAA,EAAA1f,UAAAqC,KChJA,SAAAwd,EAAA5J,EAAA/sB,GACA,IAAA42B,OAAA,IAAA52B,KAA+BA,EAAA62B,EAAAD,EAAAC,iBAAAC,EAAAF,EAAAr4B,MAAAA,OAAA,IAAAu4B,KAAwFA,EACvH,GFYA,SAAAvtB,GACA,OAAAqqB,EAAArqB,IAGA,IAAArF,OAAAuF,KAAAF,GAAAtJ,QAAA82B,KAAA7wB,UAAAqD,KAAAwtB,KAAA7wB,cEhBA8wB,CAAAz4B,GACA,OAAA04B,EAAAlK,GAA4C8J,iBAAAA,IAE5C,IAAAK,EAAA5C,EAAA/1B,GACA,OAAA,IAAA44B,EAAApK,EAAA,SAAAyJ,GACA,IAAAY,EAAAC,EAAA,UAAAtf,KAAApY,EAAA,IAAAoY,KAAAmf,EAAA,SAAA34B,GACA,IAAA+4B,EAAAvK,EAaA,GAZAxuB,EAAAC,aACA84B,EAAAA,EAAA94B,aAAAD,EAAAC,cAEAD,EAAAm3B,WACA4B,EAAAA,EAAA5B,aAEAn3B,EAAAq3B,gBACA0B,EAAAA,EAAA1B,kBAEAr3B,EAAAu3B,eACAwB,EAAAA,EAAAxB,gBAEAjC,EAAAt1B,EAAA,WAAA,CAOA,GALA+4B,EADAzD,EAAAt1B,EAAAE,QAAA,SACA64B,EAAA74B,QAAAF,EAAAE,QAAA4F,MAAA9F,EAAAE,QAAA6K,KAGAguB,EAAA74B,QAAAF,EAAAE,SAEAo1B,EAAAt1B,EAAA,YAAAs1B,EAAAt1B,EAAA,SACA,MAAA,IAAA2I,MAAA,0DAQA,OANA0sB,EAAAr1B,EAAA23B,gBACAoB,EAAAA,EAAApB,aAAA33B,EAAA23B,eAEAtC,EAAAr1B,EAAA63B,eACAkB,EAAAA,EAAAlB,YAAA73B,EAAA63B,cAEAkB,EAkBA,GAhBAzD,EAAAt1B,EAAA,aAEA+4B,EADAzD,EAAAt1B,EAAA62B,QAAA,SACAkC,EAAAlC,QAAA72B,EAAA62B,QAAA/wB,MAAA9F,EAAA62B,QAAA9rB,KAGAguB,EAAAlC,QAAA72B,EAAA62B,UAGAvB,EAAAt1B,EAAA,WAEA+4B,EADAzD,EAAAt1B,EAAA82B,MAAA,SACAiC,EAAAjC,MAAA92B,EAAA82B,MAAAhxB,MAAA9F,EAAA82B,MAAA/rB,KAGAguB,EAAAjC,MAAA92B,EAAA82B,SAGAzB,EAAAr1B,EAAA23B,eAAA33B,EAAA63B,YACA,MAAA,IAAAlvB,MAAA,0DAQA,OANA0sB,EAAAr1B,EAAA23B,gBACAoB,EAAAA,EAAApB,aAAA33B,EAAA23B,eAEAtC,EAAAr1B,EAAA63B,eACAkB,EAAAA,EAAAlB,YAAA73B,EAAA63B,cAEAkB,IACS,SAAAC,EAAAC,GACT,OAAAP,EAAAM,GAAqDV,iBAAAA,MAErDl4B,UAAA63B,GACA,OAAA,WAA4B,OAAAY,EAAAK,iBAG5B,SAAAR,EAAAlK,EAAA/sB,GACA,IAAA62B,QAAA,IAAA72B,KAA8CA,GAAA62B,iBAC9Ca,EAAAb,EAAA,SAAAza,GAA2D,OAAAA,GAAmB2X,EAC9E4D,EAAAd,EAAA,SAAAxyB,GAAsD,OAAAA,EAAAiF,KAAoB,SAAAjF,GAAuB,OAAAA,EAAAuzB,MACjGC,EAAA,IAAAV,EAAApK,EAAA,SAAA+K,GACA,IAAAC,KACAC,GAAA,EACAC,EAAA,KACA5iB,KACA0X,EAAAmL,KAAA,QAAA,SAAA9Q,GACAA,EAAA+H,UACA/H,EAAAjd,QAAA,SAAAuE,GACAupB,EAAAvpB,EAAApF,MAEA+L,EAAA8iB,KAAA,SAAAzpB,GAAiD,OAAAipB,EAAAjpB,KAAAupB,MACjDD,GAAA,EACAF,EAAAhhB,KAAAzB,MAIA2iB,GAAA,EACAF,EAAAhhB,KAAAzB,KAES,SAAA+iB,GACTA,IACAN,EAAA9wB,MAAAoxB,GACAN,EAAAO,cAGA,IAAAC,EAAAvL,EAAAwL,GAAA,cAAA,SAAA7pB,EAAA8pB,GACAnjB,EAAAojB,EAAApjB,EAAAqiB,EAAAhpB,GAAAipB,EAAAa,GACAR,EACAF,EAAAhhB,KAAAzB,GAEA3G,EAAApF,MAAA2uB,IACAD,GAAA,EACAF,EAAAhhB,KAAAzB,KAES,SAAA+iB,GACTA,IACAN,EAAA9wB,MAAAoxB,GACAN,EAAAO,cAGAN,EAAA31B,MAAsBs2B,MAAA,cAAAC,OAAAL,IACtB,IAAAM,EAAA7L,EAAAwL,GAAA,gBAAA,SAAA7pB,GACA2G,EAAAwjB,EAAAxjB,EAAAqiB,EAAAhpB,GAAAipB,GACAK,GACAF,EAAAhhB,KAAAzB,IAES,SAAA+iB,GACTA,IACAN,EAAA9wB,MAAAoxB,GACAN,EAAAO,cAGAN,EAAA31B,MAAsBs2B,MAAA,gBAAAC,OAAAC,IACtB,IAAAE,EAAA/L,EAAAwL,GAAA,gBAAA,SAAA7pB,EAAA8pB,GACAnjB,EAAA0jB,EAAA1jB,EAAAqiB,EAAAhpB,GAAAipB,EAAAa,GACAR,GACAF,EAAAhhB,KAAAzB,IAES,SAAA+iB,GACTA,IACAN,EAAA9wB,MAAAoxB,GACAN,EAAAO,cAIA,OADAN,EAAA31B,MAAsBs2B,MAAA,gBAAAC,OAAAG,IACtB,WACAf,EAAA5tB,QAAA,SAAA6uB,GACAjM,EAAAkM,IAAAD,EAAAN,MAAAM,EAAAL,aAIA,OAAAO,EAAA,UAAAnhB,KAAA8f,EAAA,IAAAsB,EAAA,EAAAC,KAAAC,UAEA,SAAAZ,EAAAa,EAAA5qB,EAAAipB,EAAAa,GACA,OAAAc,EAAAr5B,OAGAq5B,EAAA1O,OAAA,SAAA2O,EAAAC,EAAA1zB,GAQA,OAPA0yB,GAAA,IAAA1yB,GACAyzB,EAAAn3B,KAAAsM,GAEA6qB,EAAAn3B,KAAAo3B,GACAhB,GAAAA,IAAAb,EAAA6B,IACAD,EAAAn3B,KAAAsM,GAEA6qB,QAVA7qB,GAaA,SAAAqqB,EAAAO,EAAA5qB,EAAAipB,EAAAa,GACA,IAAAjc,EAAAob,EAAAjpB,GACA,OAAA4qB,EAAA1O,OAAA,SAAA2O,EAAAnvB,EAAAtE,GACA,IAAA2zB,EAAA9B,EAAAvtB,GAcA,OAbAouB,GAAA,GAAA1yB,EAMA2zB,IAAAjB,GACAe,EAAAn3B,KAAAgI,GACAmvB,EAAAn3B,KAAAsM,IAEA+qB,IAAAld,GACAgd,EAAAn3B,KAAAgI,IAVAmvB,EAAAn3B,KAAAsM,GACA+qB,IAAAld,GACAgd,EAAAn3B,KAAAgI,IAUAmvB,OAGA,SAAAV,EAAAS,EAAA5qB,EAAAipB,GACA,IAAApb,EAAAob,EAAAjpB,GACA,OAAA4qB,EAAA/C,OAAA,SAAAvsB,GAAoC,OAAA2tB,EAAA3tB,KAAAuS,IAEpC,SAAAmd,EAAAJ,EAAA5qB,EAAAipB,EAAAa,GACA,OAAAc,EAAA35B,IAAA,SAAA8K,EAAA3E,EAAAwzB,GACA,OAAAd,GAAA1yB,EAGAA,EAAA,GAAA6xB,EAAA2B,EAAAxzB,EAAA,MAAA0yB,EACA9pB,EAGAjE,EANAiE,IClMA,SAAAirB,EAAA5M,EAAA/sB,GACA,IAAA62B,QAAA,IAAA72B,KAA8CA,GAAA62B,iBAC9C+C,EAAA,IAAAC,EAAA,SAAA/B,GACA,IAAA9vB,EAAA+kB,EAAAwL,GAAA,QAAA,SAAAnc,GACA0b,EAAAhhB,KAAA+f,EAAAza,EAAA2X,EAAA3X,KACS,SAAAgc,GACTA,IACAN,EAAA9wB,MAAAoxB,GACAN,EAAAO,cAGA,OAAA,WAA4B,OAAAtL,EAAAkM,IAAA,QAAAjxB,KACvB+kB,GACL,OAAAmM,EAAA,UAAAnhB,KAAA6hB,EAAA,IAAAT,EAAA,EAAAC,KAAAC,UCdM,SAAAS,EAAkCx+B,GACpC,OAAO,IAAIy+B,EAAoBz+B,2BJLnC64B,EAAA,wBKAIhjB,EAAahU,MAAQA,KAAKgU,WAAc,WACxC,IAAI6oB,EAAgB91B,OAAO+1B,iBACpBC,wBAA2Bn0B,OAAS,SAAU7C,EAAG8F,GAAK9F,EAAEg3B,UAAYlxB,IACvE,SAAU9F,EAAG8F,GAAK,IAAK,IAAImxB,KAAKnxB,EAAOA,EAAEoxB,eAAeD,KAAIj3B,EAAEi3B,GAAKnxB,EAAEmxB,KACzE,OAAO,SAAUj3B,EAAG8F,GAEhB,SAAAqxB,IAAgBl9B,KAAKm9B,YAAcp3B,EADnC82B,EAAc92B,EAAG8F,GAEjB9F,EAAEpE,UAAkB,OAANkK,EAAa9E,OAAOjG,OAAO+K,IAAMqxB,EAAGv7B,UAAYkK,EAAElK,UAAW,IAAIu7B,IAP3C,GAaxClD,EAA0B,SAAUjmB,GAEpC,SAAAqpB,EAAgCC,EAAM77B,GAClC,IAAIzB,EAAQgU,EAAO6G,KAAK5a,KAAMwB,IAAcxB,KAE5C,OADAD,EAAMs9B,KAAOA,EACNt9B,EA4DX,OAhEAiU,EAAUopB,EAAwBrpB,GAMlCqpB,EAAuBz7B,UAAU27B,KAAO,SAAUC,GAC9C,IAAIC,EAAa,IAAIJ,EAAuBp9B,KAAKq9B,MAIjD,OAHAG,EAAWjJ,OAASv0B,KACpBw9B,EAAWD,SAAWA,EACtBC,EAAWH,KAAOr9B,KAAKq9B,KAChBG,GAEXJ,EAAuBz7B,UAAUsD,KAAO,SAAUgI,GAC9C,IAAKjN,KAAKq9B,KACN,MAAM,IAAItzB,MAAM,yCAEpB,OAAO/J,KAAKq9B,KAAKzN,IAAI3qB,KAAKgI,IAE9BmwB,EAAuBz7B,UAAU6H,IAAM,SAAUqyB,EAAM30B,GACnD,IAAInH,EAAQC,KACZ,OAAOA,KAAKy9B,qBAAqB5B,GAC7B6B,WAAY,WAAc,OAAO39B,EAAMs9B,KAAKzN,IAAIre,MAAMsqB,GAAMryB,IAAItC,IAChEy2B,aAAc,WAAc,OAAO9B,EAAKryB,IAAItC,IAC5C02B,aAAc,WAAc,OAAO/B,EAAKjM,IAAIpmB,IAAItC,IAChD22B,sBAAuB,WAAc,OAAO99B,EAAMs9B,KAAKzN,IAAIre,MAAMsqB,EAAKpB,MAAMjxB,IAAItC,OAGxFk2B,EAAuBz7B,UAAUuG,OAAS,SAAU2zB,EAAM30B,GACtD,IAAInH,EAAQC,KACZ,OAAOA,KAAKy9B,qBAAqB5B,GAC7B6B,WAAY,WAAc,OAAO39B,EAAMs9B,KAAKzN,IAAIre,MAAMsqB,GAAM3zB,OAAOhB,IACnEy2B,aAAc,WAAc,OAAO9B,EAAK3zB,OAAOhB,IAC/C02B,aAAc,WAAc,OAAO/B,EAAKjM,IAAI1nB,OAAOhB,IACnD22B,sBAAuB,WAAc,OAAO99B,EAAMs9B,KAAKzN,IAAIre,MAAMsqB,EAAKpB,MAAMvyB,OAAOhB,OAG3Fk2B,EAAuBz7B,UAAU8H,OAAS,SAAUoyB,GAChD,IAAI97B,EAAQC,KACZ,OAAK67B,EAGE77B,KAAKy9B,qBAAqB5B,GAC7B6B,WAAY,WAAc,OAAO39B,EAAMs9B,KAAKzN,IAAIre,MAAMsqB,GAAMpyB,UAC5Dk0B,aAAc,WAAc,OAAO9B,EAAKpyB,UACxCm0B,aAAc,WAAc,OAAO/B,EAAKjM,IAAInmB,UAC5Co0B,sBAAuB,WAAc,OAAO99B,EAAMs9B,KAAKzN,IAAIre,MAAMsqB,EAAKpB,MAAMhxB,YANrEzJ,KAAKq9B,KAAKzN,IAAInmB,UAS7B2zB,EAAuBz7B,UAAU87B,qBAAuB,SAAU5B,EAAMiC,GACpE,GLzDR,SAAA52B,GACA,MAAA,iBAAAA,EKwDY62B,CAAelC,GACf,OAAOiC,EAAMJ,aAEZ,GAAI/G,EAAoBkF,GACzB,OAAOiC,EAAMH,eAEZ,GLzDb,SAAAz2B,GACA,MAAA,mBAAAA,EAAA4qB,UKwDiBkM,CAA6BnC,GAClC,OAAOiC,EAAMF,eAEZ,GLzDb,SAAA12B,GACA,MAAA,iBAAAA,EAAAuzB,KKwDiBwD,CAA4BpC,GACjC,OAAOiC,EAAMD,wBAEjB,MAAM,IAAI9zB,MAAM,kFAAoF8xB,IAEjGuB,EAjEkB,CAkE3B9F,EAAA,kEC/ESe,EAAc,2BAErBA,EAAeA,EAAsB,MAAI,GAAK,QAC9CA,EAAeA,EAAoB,IAAI,GAAK,MAC5CA,EAAeA,EAAsB,MAAI,GAAK,QAC9CA,EAAeA,EAAyB,SAAI,GAAK,aAL5B,GAOdQ,EAAc,2BAErBA,EAAeA,EAAsB,MAAI,GAAK,QAC9CA,EAAeA,EAAqB,KAAI,GAAK,SAHxB,YCPrBqF,EAAal+B,MAAQA,KAAKgU,WAAc,WACxC,IAAI6oB,EAAgB91B,OAAO+1B,iBACpBC,wBAA2Bn0B,OAAS,SAAU7C,EAAG8F,GAAK9F,EAAEg3B,UAAYlxB,IACvE,SAAU9F,EAAG8F,GAAK,IAAK,IAAImxB,KAAKnxB,EAAOA,EAAEoxB,eAAeD,KAAIj3B,EAAEi3B,GAAKnxB,EAAEmxB,KACzE,OAAO,SAAUj3B,EAAG8F,GAEhB,SAAAqxB,IAAgBl9B,KAAKm9B,YAAcp3B,EADnC82B,EAAc92B,EAAG8F,GAEjB9F,EAAEpE,UAAkB,OAANkK,EAAa9E,OAAOjG,OAAO+K,IAAMqxB,EAAGv7B,UAAYkK,EAAElK,UAAW,IAAIu7B,IAP3C,GAYxCR,EAA4B,SAAU3oB,GAEtC,SAAA2oB,EAAkCl7B,EAAW67B,GACzC,IAAIt9B,EAAQgU,EAAO6G,KAAK5a,KAAMwB,IAAcxB,KAE5C,OADAD,EAAMs9B,KAAOA,EACNt9B,EA2BX,OA/BAm+B,EAAUxB,EAA0B3oB,GAMpC2oB,EAAyB/6B,UAAU27B,KAAO,SAAUC,GAChD,IAAIC,EAAa,IAAId,EAIrB,OAHAc,EAAWjJ,OAASv0B,KACpBw9B,EAAWD,SAAWA,EACtBC,EAAWH,KAAOr9B,KAAKq9B,KAChBG,GAEXd,EAAyB/6B,UAAU6H,IAAM,SAAUtC,GAC/C,IAAKlH,KAAKq9B,KACN,MAAM,IAAItzB,MAAM,yCAEpB,OAAO/J,KAAKq9B,KAAK7zB,IAAItC,IAEzBw1B,EAAyB/6B,UAAUuG,OAAS,SAAUhB,GAClD,IAAKlH,KAAKq9B,KACN,MAAM,IAAItzB,MAAM,yCAEpB,OAAO/J,KAAKq9B,KAAKn1B,OAAOhB,IAE5Bw1B,EAAyB/6B,UAAU8H,OAAS,WACxC,IAAKzJ,KAAKq9B,KACN,MAAM,IAAItzB,MAAM,yCAEpB,OAAO/J,KAAKq9B,KAAK5zB,UAEdizB,EAhCoB,CAiC7BpF,EAAA,YCvCEsF,EAAuB,WACvB,SAAAuB,EAA6BhgC,GACzB6B,KAAK7B,IAAMA,EACX6B,KAAK8vB,SAAW3xB,EAAI2xB,WAgBxB,OAdAqO,EAAoBx8B,UAAUR,KAAO,SAAUi9B,EAAWC,GAEtD,OAAO7E,EADGnH,EAAaryB,KAAK7B,IAAKigC,GACDC,IAEpCF,EAAoBx8B,UAAUkO,OAAS,SAAUuuB,EAAWC,GAExD,OAAO7B,EADGnK,EAAaryB,KAAK7B,IAAKigC,GACCC,IAQ/BF,EAnBe,GJCfG,GACPC,QAAS3B,EACT4B,WAAY7B,EACZ8B,MAAOzC,EAAA,IAEA0C,GACPJ,GAEAK,EAA6B,WAU7B,OATA,aAD4B,mnBKChC53B,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAIsM,EAAU1N,EAAQ,GAClBqB,EAASrB,EAAQ,KACjBwvB,EAAWxvB,EAAQ,KACnBoV,EAASpV,EAAQ,KACjB84B,EAAc94B,EAAQ,KACtBipB,EAASjpB,EAAQ,KACjB+4B,EAAgB/4B,EAAQ,KACxBsB,EAAStB,EAAQ,KACjBmpB,EAAenpB,EAAQ,KAwF3BmB,EAAQinB,SAnFsB,WAK1B,SAAAA,EAAkB4Q,GACd9+B,KAAK8+B,MAAQA,EACPA,aAAiB/P,EAAOjJ,MAC1B3e,EAAO2C,MAAM,wEAGjB9J,KAAK8kB,MAAQ,IAAI8Z,EAAYzP,UAAU2P,EAAO5jB,EAAOhL,KAAKkc,OAC1DpsB,KAAK++B,SAAW,IAAIC,EAAkBh/B,MAqE1C,OAnEA+G,OAAOC,eAAeknB,EAASvsB,UAAW,OACtCT,IAAK,WACD,OAAOlB,KAAK8+B,MAAM3gC,KAEtBsS,YAAY,EACZC,cAAc,IAOlBwd,EAASvsB,UAAUiuB,IAAM,SAAU7e,GAG/B,OAFA/Q,KAAKi/B,cAAc,OACnB73B,EAAOooB,iBAAiB,eAAgB,EAAG,EAAG/mB,UAAU3F,aAClCkZ,IAAfjL,EAA2B/Q,KAAK8kB,MAAMvT,MAAMR,GAAc/Q,KAAK8kB,OAS1EoJ,EAASvsB,UAAUu1B,WAAa,SAAUrzB,GAEtC,IAAIq7B,EAAU,sBACdl/B,KAAKi/B,cAAcC,GACnB93B,EAAOooB,iBAAiB0P,EAAS,EAAG,EAAGz2B,UAAU3F,QACjD,IAAIq8B,EAAY7J,EAASS,cAAclyB,GACvCorB,EAAa/R,YAAYgiB,EAAS,EAAGC,GACrC,IAAI/hB,EAAW+hB,EAAU/hB,SAUzB,OATIA,EAASC,OAASrd,KAAK8+B,MAAM/Y,UAAU1I,MACvClW,EAAO2C,MAAMo1B,EACT,2DAEA9hB,EAASC,KACT,iBACArd,KAAK8+B,MAAM/Y,UAAU1I,KACrB,KAEDrd,KAAK4vB,IAAIuP,EAAUjwB,KAAKX,aAKnC2f,EAASvsB,UAAUs9B,cAAgB,SAAUC,GACtB,OAAfl/B,KAAK8+B,OACL33B,EAAO2C,MAAM,eAAiBo1B,EAAU,4BAIhDhR,EAASvsB,UAAUy9B,UAAY,WAC3Bh4B,EAAOooB,iBAAiB,qBAAsB,EAAG,EAAG/mB,UAAU3F,QAC9D9C,KAAKi/B,cAAc,aACnBj/B,KAAK8+B,MAAM3R,aAEfe,EAASvsB,UAAU09B,SAAW,WAC1Bj4B,EAAOooB,iBAAiB,oBAAqB,EAAG,EAAG/mB,UAAU3F,QAC7D9C,KAAKi/B,cAAc,YACnBj/B,KAAK8+B,MAAM1R,UAEfc,EAASoR,aACLC,WACIC,MAAO,cAGRtR,EAjFkB,GAoF7B,IAAI8Q,EAAmC,WAEnC,SAAAA,EAA2BlP,GACvB9vB,KAAK8vB,SAAWA,EAgBpB,OAbAkP,EAAkBr9B,UAAU89B,OAAS,WACjC,OAAOjsB,EAAQksB,UAAU1/B,UAAM,OAAQ,EAAQ,WAC3C,OAAOwT,EAAQmsB,YAAY3/B,KAAM,SAAU6C,GAOvC,OANA7C,KAAK8vB,SAASmP,cAAc,UAC5BJ,EAAcrJ,YAAYG,cAAcM,WAAWj2B,KAAK8vB,SAASgP,OACjE9+B,KAAK8vB,SAASgP,MAAQ,KACtB9+B,KAAK8vB,SAAShL,MAAQ,KACtB9kB,KAAK8vB,SAASiP,SAAW,KACzB/+B,KAAK8vB,SAAW,MACR,QAIbkP,EAnB2B,GAqBtC/3B,EAAQ+3B,kBAAoBA,oCCvH5Bj4B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAgU,EAAApV,EAAA,KACA85B,EAAA95B,EAAA,KACAqB,EAAArB,EAAA,KAiDAmB,EAAA8uB,cAAA,SAAA8J,GACA,IAAA1iB,EAAAlW,EAAA64B,SAAAD,GAAAviB,EAAAH,EAAA4iB,UACA,aAAA5iB,EAAA6iB,QACA74B,EAAA2C,MAAAqT,EAAAE,KACA,8EAIAC,GAAA,aAAAA,GACA,cAAAH,EAAA6iB,QACA74B,EAAA2C,MAAA,gFAEAqT,EAAA8L,QACA9hB,EAAA8C,qBAGA,OACAmT,SAAA,IAAAwiB,EAAAK,SAAA9iB,EAAAE,KAAAF,EAAA8L,OAAA3L,EAFA,OAAAH,EAAA+iB,QAAA,QAAA/iB,EAAA+iB,QAGAhxB,KAAA,IAAAgM,EAAAhL,KAAAiN,EAAApM,cAQA9J,EAAA64B,SAAA,SAAAD,GAEA,IAAAxiB,EAAA,GAAA2iB,EAAA,GAAAD,EAAA,GAAAhvB,EAAA,GAEAkY,GAAA,EAAAiX,EAAA,QAAAC,EAAA,IAEA,GAAA,iBAAAN,EAAA,CAEA,IAAAO,EAAAP,EAAAx1B,QAAA,MACA+1B,GAAA,IACAF,EAAAL,EAAA/yB,UAAA,EAAAszB,EAAA,GACAP,EAAAA,EAAA/yB,UAAAszB,EAAA,IAGA,IAAAC,EAAAR,EAAAx1B,QAAA,MACA,IAAAg2B,IACAA,EAAAR,EAAA/8B,QAEA,IAAAw9B,EAAAT,EAAAx1B,QAAA,MACA,IAAAi2B,IACAA,EAAAT,EAAA/8B,QAEAua,EAAAwiB,EAAA/yB,UAAA,EAAAzB,KAAA0C,IAAAsyB,EAAAC,IACAD,EAAAC,IAEAvvB,EA/FA,SAAAA,GAGA,IAAA,IAFAwvB,EAAA,GACAjvB,EAAAP,EAAAT,MAAA,KACA3H,EAAA,EAAmBA,EAAA2I,EAAAxO,OAAmB6F,IACtC,GAAA2I,EAAA3I,GAAA7F,OAAA,EAAA,CACA,IAAA09B,EAAAlvB,EAAA3I,GACA,IACA63B,EAAAC,mBAAAD,EAAA/kB,QAAA,MAAA,MAEA,MAAAjO,IACA+yB,GAAA,IAAAC,EAGA,OAAAD,EAkFAG,CAAAb,EAAA/yB,UAAAuzB,EAAAC,KAEA,IAAAK,EA9EA,SAAAC,GACA,IAAAC,KACAD,EAAAE,WAAA,OACAF,EAAAA,EAAA9zB,UAAA,IAEA,IAAA,IAAAlK,EAAA,EAAAC,EAAA+9B,EAAAtwB,MAAA,KAAiD1N,EAAAC,EAAAC,OAAgBF,IAAA,CACjE,IAAAm+B,EAAAl+B,EAAAD,GACA,GAAA,IAAAm+B,EAAAj+B,OAAA,CAGA,IAAAk+B,EAAAD,EAAAzwB,MAAA,KACA,IAAA0wB,EAAAl+B,OACA+9B,EAAAJ,mBAAAO,EAAA,KAAAP,mBAAAO,EAAA,IAGA75B,EAAA6C,KAAA,0BAAA+2B,EAAA,eAAAH,EAAA,MAGA,OAAAC,EA4DAI,CAAApB,EAAA/yB,UAAAzB,KAAA0C,IAAA8xB,EAAA/8B,OAAAw9B,MAEAF,EAAA/iB,EAAAhT,QAAA,OACA,GACA4e,EAAA,UAAAiX,GAAA,QAAAA,EACAC,EAAA5+B,SAAA8b,EAAAvQ,UAAAszB,EAAA,GAAA,KAGAA,EAAAP,EAAA/8B,OAEA,IAAAo+B,EAAA7jB,EAAA/M,MAAA,KACA,IAAA4wB,EAAAp+B,QAEAk9B,EAAAkB,EAAA,GACAnB,EAAAmB,EAAA,GAAA1yB,eAEA,IAAA0yB,EAAAp+B,OACAk9B,EAAAkB,EAAA,GAEA,cAAAA,EAAA,GAAA/vB,MAAA,EAAAivB,GAAA5xB,gBACAwxB,EAAA,aAGA,KAAAD,GAAA,OAAAY,IACAZ,EAAAY,EAAA,IAGA,OACAtjB,KAAAA,EACA8iB,KAAAA,EACAH,OAAAA,EACAD,UAAAA,EACA9W,OAAAA,EACAiX,OAAAA,EACAnvB,WAAAA,sCC3IAhK,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAIC,EAASrB,EAAQ,KACjBsB,EAAStB,EAAQ,KACjB2B,EAAY3B,EAAQ,KACpBq7B,EAAcr7B,EAAQ,KAwF1BmB,EAAQg5B,SAlFsB,WAQ1B,SAAAA,EAAkB5iB,EAAM4L,EAAQ3L,EAAW8jB,EAAeC,QAC/B,IAAnBA,IAA6BA,EAAiB,IAClDrhC,KAAKipB,OAASA,EACdjpB,KAAKsd,UAAYA,EACjBtd,KAAKohC,cAAgBA,EACrBphC,KAAKqhC,eAAiBA,EACtBrhC,KAAKqd,KAAOA,EAAK7O,cACjBxO,KAAKggC,OAAShgC,KAAKqd,KAAK/O,OAAOtO,KAAKqd,KAAKhT,QAAQ,KAAO,GACxDrK,KAAKshC,aAAe75B,EAAU+Z,kBAAkBtgB,IAAI,QAAUmc,IAASrd,KAAKqd,KAgEhF,OA9DA4iB,EAASt+B,UAAU4/B,gBAAkB,WACjC,OAAOvhC,KAAKqd,OAASrd,KAAKshC,cAAgBthC,KAAKwhC,gBAEnDvB,EAASt+B,UAAU8/B,gBAAkB,WACjC,MAA0C,OAAnCzhC,KAAKshC,aAAahzB,OAAO,EAAG,IAEvC2xB,EAASt+B,UAAU+/B,WAAa,WAC5B,MAAuB,wBAAhB1hC,KAAKggC,QAEhBC,EAASt+B,UAAU6/B,aAAe,WAC9B,MAAwB,mBAAhBxhC,KAAKggC,QAA+C,wBAAhBhgC,KAAKggC,QAErDC,EAASt+B,UAAUggC,WAAa,SAAUC,GAClCA,IAAY5hC,KAAKshC,eACjBthC,KAAKshC,aAAeM,EAChB5hC,KAAKyhC,mBACLh6B,EAAU+Z,kBAAkBhY,IAAI,QAAUxJ,KAAKqd,KAAMrd,KAAKshC,gBAUtErB,EAASt+B,UAAUkgC,cAAgB,SAAUjjB,EAAMkjB,GAC/C36B,EAAOkC,OAAuB,iBAATuV,EAAmB,8BACxCzX,EAAOkC,OAAyB,iBAAXy4B,EAAqB,gCAC1C,IAAIC,EACJ,GAAInjB,IAASuiB,EAAYnf,UACrB+f,GACK/hC,KAAKipB,OAAS,SAAW,SAAWjpB,KAAKshC,aAAe,YAE5D,CAAA,GAAI1iB,IAASuiB,EAAYlf,aAK1B,MAAM,IAAIlY,MAAM,4BAA8B6U,GAJ9CmjB,GACK/hC,KAAKipB,OAAS,WAAa,WAAajpB,KAAKshC,aAAe,QAKjEthC,KAAKuhC,oBACLO,EAAW,GAAI9hC,KAAKsd,WAExB,IAAI0kB,KAIJ,OAHA56B,EAAO4F,QAAQ80B,EAAQ,SAAU31B,EAAKjF,GAClC86B,EAAM/8B,KAAKkH,EAAM,IAAMjF,KAEpB66B,EAAUC,EAAM7zB,KAAK,MAGhC8xB,EAASt+B,UAAU4M,SAAW,WAC1B,IAAIzG,EAAM9H,KAAKm2B,cAIf,OAHIn2B,KAAKqhC,iBACLv5B,GAAO,IAAM9H,KAAKqhC,eAAiB,KAEhCv5B,GAGXm4B,EAASt+B,UAAUw0B,YAAc,WAC7B,OAAQn2B,KAAKipB,OAAS,WAAa,WAAajpB,KAAKqd,MAElD4iB,EAhFkB,qCCV7Bl5B,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAIC,EAASrB,EAAQ,KACjBmpB,EAAenpB,EAAQ,KACvBsB,EAAStB,EAAQ,KACjBuB,EAASvB,EAAQ,KA2FrBmB,EAAQsqB,aAvF0B,WAK9B,SAAAA,EAAsBuN,EAAO3iB,GACzBnc,KAAK8+B,MAAQA,EACb9+B,KAAKmc,MAAQA,EA8EjB,OAxEAoV,EAAa5vB,UAAUsgC,OAAS,SAAU5Z,GACtClhB,EAAOqoB,iBAAiB,sBAAuB,EAAG,EAAG/mB,UAAU3F,QAC/DqE,EAAO4oB,iBAAiB,sBAAuB,EAAG1H,GAAY,GAC9D,IAAI2H,EAAW,IAAI3oB,EAAO4oB,SAE1B,OADAjwB,KAAK8+B,MAAMzS,mBAAmBrsB,KAAKmc,MAAO6T,EAASE,aAAa7H,IACzD2H,EAASG,SAMpBoB,EAAa5vB,UAAU8H,OAAS,SAAU4e,GACtClhB,EAAOqoB,iBAAiB,sBAAuB,EAAG,EAAG/mB,UAAU3F,QAC/DmsB,EAAahS,qBAAqB,sBAAuBjd,KAAKmc,OAC9DhV,EAAO4oB,iBAAiB,sBAAuB,EAAG1H,GAAY,GAC9D,IAAI2H,EAAW,IAAI3oB,EAAO4oB,SAE1B,OADAjwB,KAAK8+B,MAAMvS,gBAAgBvsB,KAAKmc,MAAO,KAAM6T,EAASE,aAAa7H,IAC5D2H,EAASG,SAOpBoB,EAAa5vB,UAAU6H,IAAM,SAAUtC,EAAOmhB,GAC1ClhB,EAAOqoB,iBAAiB,mBAAoB,EAAG,EAAG/mB,UAAU3F,QAC5DmsB,EAAahS,qBAAqB,mBAAoBjd,KAAKmc,OAC3D8S,EAAarT,wBAAwB,mBAAoB,EAAG1U,EAAOlH,KAAKmc,OAAO,GAC/EhV,EAAO4oB,iBAAiB,mBAAoB,EAAG1H,GAAY,GAC3D,IAAI2H,EAAW,IAAI3oB,EAAO4oB,SAE1B,OADAjwB,KAAK8+B,MAAMvS,gBAAgBvsB,KAAKmc,MAAOjV,EAAO8oB,EAASE,aAAa7H,IAC7D2H,EAASG,SAQpBoB,EAAa5vB,UAAU+oB,gBAAkB,SAAUxjB,EAAOyU,EAAU0M,GAChElhB,EAAOqoB,iBAAiB,+BAAgC,EAAG,EAAG/mB,UAAU3F,QACxEmsB,EAAahS,qBAAqB,+BAAgCjd,KAAKmc,OACvE8S,EAAarT,wBAAwB,+BAAgC,EAAG1U,EAAOlH,KAAKmc,OAAO,GAC3F8S,EAAatS,iBAAiB,+BAAgC,EAAGhB,GAAU,GAC3ExU,EAAO4oB,iBAAiB,+BAAgC,EAAG1H,GAAY,GACvE,IAAI2H,EAAW,IAAI3oB,EAAO4oB,SAE1B,OADAjwB,KAAK8+B,MAAMpS,4BAA4B1sB,KAAKmc,MAAOjV,EAAOyU,EAAUqU,EAASE,aAAa7H,IACnF2H,EAASG,SAOpBoB,EAAa5vB,UAAUuG,OAAS,SAAUkoB,EAAe/H,GAGrD,GAFAlhB,EAAOqoB,iBAAiB,sBAAuB,EAAG,EAAG/mB,UAAU3F,QAC/DmsB,EAAahS,qBAAqB,sBAAuBjd,KAAKmc,OAC1DvT,MAAMC,QAAQunB,GAAgB,CAE9B,IAAK,IADDC,KACK1nB,EAAI,EAAGA,EAAIynB,EAActtB,SAAU6F,EACxC0nB,EAAiB,GAAK1nB,GAAKynB,EAAcznB,GAE7CynB,EAAgBC,EAChBjpB,EAAO4C,KAAK,gOAGhBilB,EAAavS,6BAA6B,sBAAuB,EAAG0T,EAAepwB,KAAKmc,OAAO,GAC/FhV,EAAO4oB,iBAAiB,sBAAuB,EAAG1H,GAAY,GAC9D,IAAI2H,EAAW,IAAI3oB,EAAO4oB,SAE1B,OADAjwB,KAAK8+B,MAAMnS,mBAAmB3sB,KAAKmc,MAAOiU,EAAeJ,EAASE,aAAa7H,IACxE2H,EAASG,SAEboB,EArFsB,qCCRjCxqB,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAWIuqB,EAXAtqB,EAASrB,EAAQ,KACjB4P,EAAa5P,EAAQ,KACrB2P,EAAkB3P,EAAQ,KAC1Bo8B,EAAep8B,EAAQ,KACvBq8B,EAAcr8B,EAAQ,KACtBsB,EAAStB,EAAQ,KACjBoV,EAASpV,EAAQ,KACjBmpB,EAAenpB,EAAQ,KACvBuB,EAASvB,EAAQ,KACjBs8B,EAAsBt8B,EAAQ,KAC9BwB,EAASxB,EAAQ,KA4drBmB,EAAQuqB,MApdmB,WACvB,SAAAA,EAAepC,EAAMlgB,EAAMmzB,EAAcC,GACrCtiC,KAAKovB,KAAOA,EACZpvB,KAAKkP,KAAOA,EACZlP,KAAKqiC,aAAeA,EACpBriC,KAAKsiC,eAAiBA,EA6c1B,OA3cAv7B,OAAOC,eAAewqB,EAAO,0BACzBtwB,IAAK,WAED,OADAiG,EAAOkC,OAAOooB,EAAwB,oCAC/BA,GAEXjoB,IAAK,SAAUyD,GACXwkB,EAAyBxkB,GAE7BwD,YAAY,EACZC,cAAc,IAOlB8gB,EAAM+Q,wBAA0B,SAAUT,GACtC,IAAIU,EAAY,KACZC,EAAU,KAOd,GANIX,EAAOY,aACPF,EAAYV,EAAOa,sBAEnBb,EAAOc,WACPH,EAAUX,EAAOe,oBAEjBf,EAAO/M,aAAerf,EAAWwE,UAAW,CAC5C,IAAI4oB,EAAmB,mGAEnBC,EAAoB,wGAExB,GAAIjB,EAAOY,WAAY,CAEnB,GADgBZ,EAAOkB,qBACN57B,EAAOqE,SACpB,MAAM,IAAI1B,MAAM+4B,GAEf,GAAyB,iBAAdN,EACZ,MAAM,IAAIz4B,MAAMg5B,GAGxB,GAAIjB,EAAOc,SAAU,CAEjB,GADcd,EAAOmB,mBACN77B,EAAOsE,SAClB,MAAM,IAAI3B,MAAM+4B,GAEf,GAAuB,iBAAZL,EACZ,MAAM,IAAI14B,MAAMg5B,SAIvB,GAAIjB,EAAO/M,aAAetf,EAAgBJ,gBAC3C,GAAkB,MAAbmtB,IAAsBvT,EAAavT,gBAAgB8mB,IACxC,MAAXC,IAAoBxT,EAAavT,gBAAgB+mB,GAClD,MAAM,IAAI14B,MAAM,sKAOpB,GAFA5C,EAAOkC,OAAOy4B,EAAO/M,qBAAsBoN,EAAYe,WACnDpB,EAAO/M,aAAemN,EAAaiB,YAAa,uBAClC,MAAbX,GAA0C,iBAAdA,GACjB,MAAXC,GAAsC,iBAAZA,EAC3B,MAAM,IAAI14B,MAAM,0FAU5BynB,EAAM4R,eAAiB,SAAUtB,GAC7B,GAAIA,EAAOY,YACPZ,EAAOc,UACPd,EAAOuB,aACNvB,EAAOwB,mBACR,MAAM,IAAIv5B,MAAM,uGAQxBynB,EAAM7vB,UAAU4hC,+BAAiC,SAAU1nB,GACvD,IAA4B,IAAxB7b,KAAKsiC,eACL,MAAM,IAAIv4B,MAAM8R,EAAS,gDAMjC2V,EAAM7vB,UAAU6hC,eAAiB,WAC7B,OAAOxjC,KAAKqiC,cAKhB7Q,EAAM7vB,UAAU0wB,OAAS,WAKrB,OAJAhrB,EAAOmoB,iBAAiB,YAAa,EAAG,EAAG/mB,UAAU3F,QAI9C,IAAI0uB,EAAMC,uBAAuBzxB,KAAKovB,KAAMpvB,KAAKkP,OAS5DsiB,EAAM7vB,UAAUy5B,GAAK,SAAUve,EAAW1P,EAAUs2B,EAAyBr2B,GACzE/F,EAAOmoB,iBAAiB,WAAY,EAAG,EAAG/mB,UAAU3F,QACpDmsB,EAAarS,kBAAkB,WAAY,EAAGC,GAAW,GACzDxV,EAAO0oB,iBAAiB,WAAY,EAAG5iB,GAAU,GACjD,IAAIu2B,EAAMlS,EAAMmS,yBAAyB,WAAYF,EAAyBr2B,GAC9E,GAAkB,UAAdyP,EACA7c,KAAK4jC,aAAaz2B,EAAUu2B,EAAIzB,OAAQyB,EAAIt2B,aAE3C,CACD,IAAIy2B,KACJA,EAAUhnB,GAAa1P,EACvBnN,KAAK8jC,aAAaD,EAAWH,EAAIzB,OAAQyB,EAAIt2B,SAEjD,OAAOD,GAQXqkB,EAAM7vB,UAAUiiC,aAAe,SAAUz2B,EAAU42B,EAAgB32B,GAC/D,IAAI42B,EAAY,IAAI5B,EAAoB6B,uBAAuB92B,EAAU42B,GAAkB,KAAM32B,GAAW,MAC5GpN,KAAKovB,KAAKvC,yBAAyB7sB,KAAMgkC,IAQ7CxS,EAAM7vB,UAAUmiC,aAAe,SAAUD,EAAWE,EAAgB32B,GAChE,IAAI42B,EAAY,IAAI5B,EAAoB8B,uBAAuBL,EAAWE,EAAgB32B,GAC1FpN,KAAKovB,KAAKvC,yBAAyB7sB,KAAMgkC,IAO7CxS,EAAM7vB,UAAUm6B,IAAM,SAAUjf,EAAW1P,EAAUC,GACjD/F,EAAOmoB,iBAAiB,YAAa,EAAG,EAAG/mB,UAAU3F,QACrDmsB,EAAarS,kBAAkB,YAAa,EAAGC,GAAW,GAC1DxV,EAAO0oB,iBAAiB,YAAa,EAAG5iB,GAAU,GAClD9F,EAAO88B,sBAAsB,YAAa,EAAG/2B,GAAS,GACtD,IAAI42B,EAAY,KACZH,EAAY,KAChB,GAAkB,UAAdhnB,EAAuB,CAEvBmnB,EAAY,IAAI5B,EAAoB6B,uBADhB92B,GAAY,KAC0C,KAAMC,GAAW,WAEtFyP,IACD1P,KACA02B,MACUhnB,GAAa1P,GAE3B62B,EAAY,IAAI5B,EAAoB8B,uBAAuBL,EAAW,KAAMz2B,GAAW,OAE3FpN,KAAKovB,KAAKnC,4BAA4BjtB,KAAMgkC,IAUhDxS,EAAM7vB,UAAUo5B,KAAO,SAAUle,EAAWunB,EAAcC,EAAiBj3B,GACvE,IAAIrN,EAAQC,KACZqH,EAAOmoB,iBAAiB,aAAc,EAAG,EAAG/mB,UAAU3F,QACtDmsB,EAAarS,kBAAkB,aAAc,EAAGC,GAAW,GAC3DxV,EAAO0oB,iBAAiB,aAAc,EAAGqU,GAAc,GACvD,IAAIV,EAAMlS,EAAMmS,yBAAyB,aAAcU,EAAiBj3B,GAKpEk3B,GAAY,EACZtU,EAAW,IAAI1oB,EAAO2oB,SAE1BD,EAASG,QAAQM,MAAM,cACvB,IAAI8T,EAAe,SAAUtlB,GAGrBqlB,IACAA,GAAY,EACZvkC,EAAM+7B,IAAIjf,EAAW0nB,GACjBH,GACAA,EAAa96B,KAAKo6B,EAAIt2B,QAAtBg3B,CAA+BnlB,GAEnC+Q,EAASa,QAAQ5R,KAUzB,OAPAjf,KAAKo7B,GAAGve,EAAW0nB,EACP,SAAUtJ,GAClBl7B,EAAM+7B,IAAIjf,EAAW0nB,GACjBb,EAAIzB,QACJyB,EAAIzB,OAAO34B,KAAKo6B,EAAIt2B,QAApBs2B,CAA6BzI,GACjCjL,EAASY,OAAOqK,KAEbjL,EAASG,SAOpBqB,EAAM7vB,UAAUo3B,aAAe,SAAUyL,GAErC,GADAn9B,EAAOmoB,iBAAiB,qBAAsB,EAAG,EAAG/mB,UAAU3F,QACzC,iBAAV0hC,GACPn5B,KAAKC,MAAMk5B,KAAWA,GACtBA,GAAS,EACT,MAAM,IAAIz6B,MAAM,kEAEpB,GAAI/J,KAAKqiC,aAAagB,WAClB,MAAM,IAAIt5B,MAAM,uGAGpB,OAAO,IAAIynB,EAAMxxB,KAAKovB,KAAMpvB,KAAKkP,KAAMlP,KAAKqiC,aAAatJ,aAAayL,GAAQxkC,KAAKsiC,iBAOvF9Q,EAAM7vB,UAAUs3B,YAAc,SAAUuL,GAEpC,GADAn9B,EAAOmoB,iBAAiB,oBAAqB,EAAG,EAAG/mB,UAAU3F,QACxC,iBAAV0hC,GACPn5B,KAAKC,MAAMk5B,KAAWA,GACtBA,GAAS,EACT,MAAM,IAAIz6B,MAAM,iEAEpB,GAAI/J,KAAKqiC,aAAagB,WAClB,MAAM,IAAIt5B,MAAM,sGAGpB,OAAO,IAAIynB,EAAMxxB,KAAKovB,KAAMpvB,KAAKkP,KAAMlP,KAAKqiC,aAAapJ,YAAYuL,GAAQxkC,KAAKsiC,iBAOtF9Q,EAAM7vB,UAAUN,aAAe,SAAU6N,GAErC,GADA7H,EAAOmoB,iBAAiB,qBAAsB,EAAG,EAAG/mB,UAAU3F,QACjD,SAAToM,EACA,MAAM,IAAInF,MAAM,2EAEf,GAAa,cAATmF,EACL,MAAM,IAAInF,MAAM,qFAEf,GAAa,WAATmF,EACL,MAAM,IAAInF,MAAM,+EAEpBklB,EAAalS,mBAAmB,qBAAsB,EAAG7N,GAAM,GAC/DlP,KAAKujC,+BAA+B,sBACpC,IAAIkB,EAAa,IAAIvpB,EAAOhL,KAAKhB,GACjC,GAAIu1B,EAAW/yB,UACX,MAAM,IAAI3H,MAAM,qFAEpB,IAAIyO,EAAQ,IAAI2pB,EAAYe,UAAUuB,GAClCC,EAAY1kC,KAAKqiC,aAAarK,QAAQxf,GAE1C,OADAgZ,EAAM+Q,wBAAwBmC,GACvB,IAAIlT,EAAMxxB,KAAKovB,KAAMpvB,KAAKkP,KAAMw1B,GAA8B,IAMzElT,EAAM7vB,UAAU42B,WAAa,WACzBlxB,EAAOmoB,iBAAiB,mBAAoB,EAAG,EAAG/mB,UAAU3F,QAC5D9C,KAAKujC,+BAA+B,oBACpC,IAAImB,EAAY1kC,KAAKqiC,aAAarK,QAAQtiB,EAAWwE,WAErD,OADAsX,EAAM+Q,wBAAwBmC,GACvB,IAAIlT,EAAMxxB,KAAKovB,KAAMpvB,KAAKkP,KAAMw1B,GAA8B,IAMzElT,EAAM7vB,UAAU82B,gBAAkB,WAC9BpxB,EAAOmoB,iBAAiB,wBAAyB,EAAG,EAAG/mB,UAAU3F,QACjE9C,KAAKujC,+BAA+B,yBACpC,IAAImB,EAAY1kC,KAAKqiC,aAAarK,QAAQviB,EAAgBJ,gBAE1D,OADAmc,EAAM+Q,wBAAwBmC,GACvB,IAAIlT,EAAMxxB,KAAKovB,KAAMpvB,KAAKkP,KAAMw1B,GAA8B,IAMzElT,EAAM7vB,UAAUg3B,aAAe,WAC3BtxB,EAAOmoB,iBAAiB,qBAAsB,EAAG,EAAG/mB,UAAU3F,QAC9D9C,KAAKujC,+BAA+B,sBACpC,IAAImB,EAAY1kC,KAAKqiC,aAAarK,QAAQkK,EAAaiB,aAEvD,OADA3R,EAAM+Q,wBAAwBmC,GACvB,IAAIlT,EAAMxxB,KAAKovB,KAAMpvB,KAAKkP,KAAMw1B,GAA8B,IAOzElT,EAAM7vB,UAAUs2B,QAAU,SAAU/wB,EAAO1D,QACzB,IAAV0D,IAAoBA,EAAQ,MAChCG,EAAOmoB,iBAAiB,gBAAiB,EAAG,EAAG/mB,UAAU3F,QACzDmsB,EAAarT,wBAAwB,gBAAiB,EAAG1U,EAAOlH,KAAKkP,MAAM,GAC3E+f,EAAanS,YAAY,gBAAiB,EAAGtZ,GAAM,GACnD,IAAIkhC,EAAY1kC,KAAKqiC,aAAapK,QAAQ/wB,EAAO1D,GAGjD,GAFAguB,EAAM4R,eAAesB,GACrBlT,EAAM+Q,wBAAwBmC,GAC1B1kC,KAAKqiC,aAAaK,WAClB,MAAM,IAAI34B,MAAM,0FAQpB,YAJciS,IAAV9U,IACAA,EAAQ,KACR1D,EAAO,MAEJ,IAAIguB,EAAMxxB,KAAKovB,KAAMpvB,KAAKkP,KAAMw1B,EAAW1kC,KAAKsiC,iBAO3D9Q,EAAM7vB,UAAUu2B,MAAQ,SAAUhxB,EAAO1D,QACvB,IAAV0D,IAAoBA,EAAQ,MAChCG,EAAOmoB,iBAAiB,cAAe,EAAG,EAAG/mB,UAAU3F,QACvDmsB,EAAarT,wBAAwB,cAAe,EAAG1U,EAAOlH,KAAKkP,MAAM,GACzE+f,EAAanS,YAAY,cAAe,EAAGtZ,GAAM,GACjD,IAAIkhC,EAAY1kC,KAAKqiC,aAAanK,MAAMhxB,EAAO1D,GAG/C,GAFAguB,EAAM4R,eAAesB,GACrBlT,EAAM+Q,wBAAwBmC,GAC1B1kC,KAAKqiC,aAAaO,SAClB,MAAM,IAAI74B,MAAM,oFAGpB,OAAO,IAAIynB,EAAMxxB,KAAKovB,KAAMpvB,KAAKkP,KAAMw1B,EAAW1kC,KAAKsiC,iBAS3D9Q,EAAM7vB,UAAUL,QAAU,SAAU4F,EAAO1D,GAIvC,GAHA6D,EAAOmoB,iBAAiB,gBAAiB,EAAG,EAAG/mB,UAAU3F,QACzDmsB,EAAarT,wBAAwB,gBAAiB,EAAG1U,EAAOlH,KAAKkP,MAAM,GAC3E+f,EAAanS,YAAY,gBAAiB,EAAGtZ,GAAM,GAC/CxD,KAAKqiC,aAAaK,WAClB,MAAM,IAAI34B,MAAM,0FAGpB,GAAI/J,KAAKqiC,aAAaO,SAClB,MAAM,IAAI74B,MAAM,sFAGpB,OAAO/J,KAAKi4B,QAAQ/wB,EAAO1D,GAAM00B,MAAMhxB,EAAO1D,IAKlDguB,EAAM7vB,UAAU4M,SAAW,WAEvB,OADAlH,EAAOmoB,iBAAiB,iBAAkB,EAAG,EAAG/mB,UAAU3F,QACnD9C,KAAKovB,KAAK7gB,WAAavO,KAAKkP,KAAK8B,sBAI5CwgB,EAAM7vB,UAAUowB,OAAS,WAGrB,OADA1qB,EAAOmoB,iBAAiB,eAAgB,EAAG,EAAG/mB,UAAU3F,QACjD9C,KAAKuO,YAMhBijB,EAAM7vB,UAAUgjC,YAAc,WAC1B,OAAO3kC,KAAKqiC,aAAauC,kBAK7BpT,EAAM7vB,UAAUkjC,gBAAkB,WAC9B,IAAIz4B,EAAMpM,KAAK2kC,cACX/8B,EAAKR,EAAOiF,kBAAkBD,GAClC,MAAc,OAAPxE,EAAc,UAAYA,GAOrC4pB,EAAM7vB,UAAUmjC,QAAU,SAAUvyB,GAEhC,GADAlL,EAAOmoB,iBAAiB,gBAAiB,EAAG,EAAG/mB,UAAU3F,UACnDyP,aAAiBif,GAAQ,CAE3B,MAAM,IAAIznB,MADE,wFAGhB,IAAIg7B,EAAW/kC,KAAKovB,OAAS7c,EAAM6c,KAC/B4V,EAAWhlC,KAAKkP,KAAKoD,OAAOC,EAAMrD,MAClC+1B,EAAsBjlC,KAAK6kC,oBAAsBtyB,EAAMsyB,kBAC3D,OAAOE,GAAYC,GAAYC,GAUnCzT,EAAMmS,yBAA2B,SAAU9nB,EAAQwoB,EAAiBj3B,GAChE,IAAIs2B,GAAQzB,OAAQ,KAAM70B,QAAS,MACnC,GAAIi3B,GAAmBj3B,EACnBs2B,EAAIzB,OAASoC,EACbh9B,EAAO0oB,iBAAiBlU,EAAQ,EAAG6nB,EAAIzB,QAAQ,GAC/CyB,EAAIt2B,QAAUA,EACd/F,EAAO88B,sBAAsBtoB,EAAQ,EAAG6nB,EAAIt2B,SAAS,QAEpD,GAAIi3B,EAEL,GAA+B,iBAApBA,GAAoD,OAApBA,EAEvCX,EAAIt2B,QAAUi3B,MAEb,CAAA,GAA+B,mBAApBA,EAIZ,MAAM,IAAIt6B,MAAM1C,EAAO6U,YAAYL,EAAQ,GAAG,GAC1C,0DAJJ6nB,EAAIzB,OAASoC,EAOrB,OAAOX,GAEX38B,OAAOC,eAAewqB,EAAM7vB,UAAW,OACnCT,IAAK,WACD,OAAOlB,KAAKqyB,UAEhB5hB,YAAY,EACZC,cAAc,IAEX8gB,EAlde,qCCnB1BzqB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAGAqM,EAHApM,EAAArB,EAAA,KACAsB,EAAAtB,EAAA,KACAuB,EAAAvB,EAAA,KAKAmB,EAAA4M,WAHA,SAAA5G,GACAsG,EAAAtG,GAOAhG,EAAAoR,iBAAA,SAAAsD,GACA,MAAA,iBAAAA,EACA,UAAAvU,EAAAiG,sBAAAsO,GAEA,UAAAA,GAOA1U,EAAAiP,qBAAA,SAAAf,GACA,GAAAA,EAAAoB,aAAA,CACA,IAAAtJ,EAAAkI,EAAAlI,MACA9F,EAAAkC,OAAA,iBAAA4D,GACA,iBAAAA,GACA,iBAAAA,GAAA5F,EAAAoL,SAAAxF,EAAA,OAAA,6CAGA9F,EAAAkC,OAAA8L,IAAA5B,GAAA4B,EAAAzD,UAAA,gCAGAvK,EAAAkC,OAAA8L,IAAA5B,GAAA4B,EAAAf,cAAA1C,UAAA,yFCnCA3K,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAsM,EAAA1N,EAAA,GACA2N,EAAA3N,EAAA,KACA4N,EAAA5N,EAAA,KACAqB,EAAArB,EAAA,KACAof,EAAApf,EAAA,KAMAo/B,EAAA,SAAAnxB,GAEA,SAAAmxB,IACA,OAAA,OAAAnxB,GAAAA,EAAAjL,MAAA9I,KAAAyI,YAAAzI,KAqDA,OAvDAwT,EAAAQ,UAAAkxB,EAAAnxB,GAOAmxB,EAAAvjC,UAAAsS,QAAA,SAAArI,EAAAC,GACA,IAAAyI,EAAA1I,EAAAuI,KAAAI,UAAA1I,EAAAsI,MACA,OAAA,IAAAG,EACAnN,EAAAwE,YAAAC,EAAApI,KAAAqI,EAAArI,MAGA8Q,GAMA4wB,EAAAvjC,UAAA6S,YAAA,SAAAL,GACA,OAAA,GAKA+wB,EAAAvjC,UAAA8S,oBAAA,SAAAC,EAAAC,GACA,OAAAD,EAAApC,OAAAqC,IAKAuwB,EAAAvjC,UAAAiT,QAAA,WACA,OAAAlB,EAAAmB,UAAAC,KAKAowB,EAAAvjC,UAAAoT,QAAA,WACA,OAAArB,EAAAmB,UAAAiG,KAOAoqB,EAAAvjC,UAAAsT,SAAA,SAAAC,EAAA1R,GACA,IAAA2hC,EAAAjgB,EAAA5R,aAAA4B,GACA,OAAA,IAAAxB,EAAAmB,UAAArR,EAAA2hC,IAKAD,EAAAvjC,UAAA4M,SAAA,WACA,MAAA,UAEA22B,EAxDA,CAyDCzxB,EAAA2B,OACDnO,EAAAi+B,WAAAA,EACAj+B,EAAAk8B,YAAA,IAAA+B,oCCtEAn+B,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAMIk+B,EANAj+B,EAASrB,EAAQ,KACjB2a,EAAa3a,EAAQ,KACrBsB,EAAStB,EAAQ,KACjB4N,EAAS5N,EAAQ,KACjB2P,EAAkB3P,EAAQ,KAC1B4P,EAAa5P,EAAQ,KAErBu/B,KA0JJp+B,EAAQoP,SAnJsB,WAC1B,SAAAA,EAAkBivB,EAAUC,GACxBvlC,KAAKslC,SAAWA,EAChBtlC,KAAKulC,UAAYA,EA8IrB,OA5IAx+B,OAAOC,eAAeqP,EAAU,WAM5BnV,IAAK,WAKD,OAJAiG,EAAOkC,OAAOg8B,GAAkB5vB,EAAgBJ,eAAgB,uCAChE+vB,EACIA,GACI,IAAI/uB,GAAWyK,YAAaukB,IAAoBvkB,YAAarL,EAAgBJ,kBAGzF5E,YAAY,EACZC,cAAc,IAOlB2F,EAAS1U,UAAUT,IAAM,SAAUskC,GAC/B,IAAIC,EAAYr+B,EAAO4W,QAAQhe,KAAKslC,SAAUE,GAC9C,IAAKC,EACD,MAAM,IAAI17B,MAAM,wBAA0By7B,GAC9C,OAAIC,IAAcJ,EAGP,KAGAI,GAOfpvB,EAAS1U,UAAUwY,SAAW,SAAUrB,GACpC,OAAO1R,EAAOqL,SAASzS,KAAKulC,UAAWzsB,EAAgBvK,aAO3D8H,EAAS1U,UAAUyY,SAAW,SAAUtB,EAAiB4sB,GACrDv+B,EAAOkC,OAAOyP,IAAoBpD,EAAWwE,UAAW,uEAKxD,IAJA,IAAIyrB,KACAC,GAAkB,EAClBC,EAAOH,EAAiBpsB,YAAY5F,EAAOmB,UAAU6E,MACrDC,EAAOksB,EAAKhsB,UACTF,GACHisB,EACIA,GAAmB9sB,EAAgBtE,YAAYmF,EAAKxF,MACxDwxB,EAAU1gC,KAAK0U,GACfA,EAAOksB,EAAKhsB,UAEhB,IAAIisB,EAEAA,EADAF,EACWnlB,EAAWC,cAAcilB,EAAW7sB,EAAgB+H,cAGpDwkB,EAEf,IAAIU,EAAYjtB,EAAgBvK,WAC5By3B,EAAc5+B,EAAO6+B,MAAMjmC,KAAKulC,WACpCS,EAAYD,GAAajtB,EACzB,IAAIotB,EAAa9+B,EAAO6+B,MAAMjmC,KAAKslC,UAEnC,OADAY,EAAWH,GAAaD,EACjB,IAAIzvB,EAAS6vB,EAAYF,IAQpC3vB,EAAS1U,UAAU4V,aAAe,SAAUN,EAAWyuB,GACnD,IAAI3lC,EAAQC,KAkCZ,OAAO,IAAIqW,EAjCMjP,EAAO5E,IAAIxC,KAAKslC,SAAU,SAAUa,EAAiBJ,GAClE,IAAIvtB,EAAQpR,EAAO4W,QAAQje,EAAMwlC,UAAWQ,GAE5C,GADA5+B,EAAOkC,OAAOmP,EAAO,oCAAsCutB,GACvDI,IAAoBd,EAAgB,CAEpC,GAAI7sB,EAAMhE,YAAYyC,EAAU9C,MAAO,CAKnC,IAHA,IAAIwxB,KACAE,EAAOH,EAAiBpsB,YAAY5F,EAAOmB,UAAU6E,MACrDC,EAAOksB,EAAKhsB,UACTF,GACCA,EAAKnW,MAAQyT,EAAUzT,MACvBmiC,EAAU1gC,KAAK0U,GAEnBA,EAAOksB,EAAKhsB,UAGhB,OADA8rB,EAAU1gC,KAAKgS,GACRwJ,EAAWC,cAAcilB,EAAWntB,EAAMqI,cAIjD,OAAOwkB,EAIX,IAAIe,EAAeV,EAAiBxkC,IAAI+V,EAAUzT,MAC9C0T,EAAcivB,EAIlB,OAHIC,IACAlvB,EAAcA,EAAYzN,OAAO,IAAIiK,EAAOmB,UAAUoC,EAAUzT,KAAM4iC,KAEnElvB,EAAYI,OAAOL,EAAWA,EAAU9C,QAGvBnU,KAAKulC,YAQzClvB,EAAS1U,UAAU0V,kBAAoB,SAAUJ,EAAWyuB,GAiBxD,OAAO,IAAIrvB,EAhBMjP,EAAO5E,IAAIxC,KAAKslC,SAAU,SAAUa,GACjD,GAAIA,IAAoBd,EAEpB,OAAOc,EAGP,IAAIC,EAAeV,EAAiBxkC,IAAI+V,EAAUzT,MAClD,OAAI4iC,EACOD,EAAgB18B,OAAO,IAAIiK,EAAOmB,UAAUoC,EAAUzT,KAAM4iC,IAI5DD,IAIanmC,KAAKulC,YAElClvB,EAjJkB,qCCf7BtP,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAIqO,EAAczP,EAAQ,KACtBugC,EAAcvgC,EAAQ,KACtBwgC,EAAQj7B,KAAKjG,IAAI,GAIjBmhC,EAA2B,WAI3B,SAAAA,EAAmBzjC,GAKf9C,KAAK2X,MAJU,SAAU6uB,GACrB,OAAOjlC,SAAU8J,KAAKjG,IAAIohC,GAAOF,EAAQ,IAGhCG,CAAS3jC,EAAS,GAC/B9C,KAAK0mC,SAAW1mC,KAAK2X,MAAQ,EAC7B,IAAIgvB,EAHU,SAAUh5B,GAAQ,OAAOpM,SAASqH,MAAM+E,EAAO,GAAGQ,KAAK,KAAM,GAGhEy4B,CAAQ5mC,KAAK2X,OACxB3X,KAAK6mC,MAAS/jC,EAAS,EAAK6jC,EAWhC,OANAJ,EAAU5kC,UAAUmlC,aAAe,WAE/B,IAAIzjB,IAAWrjB,KAAK6mC,MAAS,GAAO7mC,KAAK0mC,UAEzC,OADA1mC,KAAK0mC,WACErjB,GAEJkjB,EAvBmB,GAwC9Bt/B,EAAQyZ,cAAgB,SAAUilB,EAAWtzB,EAAK00B,EAAOC,GACrDrB,EAAUn5B,KAAK6F,GACf,IAAI40B,EAAoB,SAAUC,EAAKC,GACnC,IACIlwB,EACA9K,EAFArJ,EAASqkC,EAAOD,EAGpB,GAAc,GAAVpkC,EACA,OAAO,KAEN,GAAc,GAAVA,EAGL,OAFAmU,EAAY0uB,EAAUuB,GACtB/6B,EAAM46B,EAAQA,EAAM9vB,GAAaA,EAC1B,IAAI1B,EAAYgO,SAASpX,EAAK8K,EAAU9C,KAAMoB,EAAYgO,SAASoB,MAAO,KAAM,MAGvF,IAAIyiB,EAAS7lC,SAAUuB,EAAS,EAAI,IAAMokC,EACtCj1B,EAAOg1B,EAAkBC,EAAKE,GAC9Bl1B,EAAQ+0B,EAAkBG,EAAS,EAAGD,GAG1C,OAFAlwB,EAAY0uB,EAAUyB,GACtBj7B,EAAM46B,EAAQA,EAAM9vB,GAAaA,EAC1B,IAAI1B,EAAYgO,SAASpX,EAAK8K,EAAU9C,KAAMoB,EAAYgO,SAASoB,MAAO1S,EAAMC,IA0C3Fm1B,EAvCmB,SAAUC,GAuB7B,IAAK,IAtBDnzB,EAAO,KACPkzB,EAAO,KACP7uB,EAAQmtB,EAAU7iC,OAClBykC,EAAe,SAAUC,EAAWtoC,GACpC,IAAIgoC,EAAM1uB,EAAQgvB,EACdL,EAAO3uB,EACXA,GAASgvB,EACT,IAAItU,EAAY+T,EAAkBC,EAAM,EAAGC,GACvClwB,EAAY0uB,EAAUuB,GACtB/6B,EAAM46B,EAAQA,EAAM9vB,GAAaA,EACrCwwB,EAAc,IAAIlyB,EAAYgO,SAASpX,EAAK8K,EAAU9C,KAAMjV,EAAO,KAAMg0B,KAEzEuU,EAAgB,SAAUC,GACtBvzB,GACAA,EAAKlC,KAAOy1B,EACZvzB,EAAOuzB,IAGPL,EAAOK,EACPvzB,EAAOuzB,IAGN/+B,EAAI,EAAGA,EAAI2+B,EAAO3vB,QAAShP,EAAG,CACnC,IAAIg/B,EAAQL,EAAOR,eAEfU,EAAYn8B,KAAKyC,IAAI,EAAGw5B,EAAO3vB,OAAShP,EAAI,IAC5Cg/B,EACAJ,EAAaC,EAAWjyB,EAAYgO,SAASoB,QAI7C4iB,EAAaC,EAAWjyB,EAAYgO,SAASoB,OAC7C4iB,EAAaC,EAAWjyB,EAAYgO,SAASC,MAGrD,OAAO6jB,EAGAO,CADE,IAAIrB,EAAUZ,EAAU7iC,SAErC,OAAO,IAAIujC,EAAYlwB,UAAU6wB,GAAa30B,EAAKg1B,sCC9GvDtgC,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAArB,EAAA,KAIAmB,EAAA0Z,qBAHA,SAAA1O,EAAAC,GACA,OAAA/K,EAAAwE,YAAAsG,EAAAzO,KAAA0O,EAAA1O,OAMAyD,EAAAmP,gBAHA,SAAAnE,EAAAC,GACA,OAAA/K,EAAAwE,YAAAsG,EAAAC,sCCPAnL,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAsM,EAAA1N,EAAA,GACAqB,EAAArB,EAAA,KACAsB,EAAAtB,EAAA,KACA2N,EAAA3N,EAAA,KACAka,EAAAla,EAAA,KACA4N,EAAA5N,EAAA,KACAof,EAAApf,EAAA,KAMAo9B,EAAA,SAAAnvB,GAEA,SAAAmvB,EAAA2E,GACA,IAAA9nC,EAAAgU,EAAA6G,KAAA5a,OAAAA,KAGA,OAFAD,EAAA8nC,WAAAA,EACA1gC,EAAAkC,QAAAw+B,EAAAn2B,WAAA,cAAAm2B,EAAAl3B,WAAA,2DACA5Q,EAmDA,OAxDAyT,EAAAQ,UAAAkvB,EAAAnvB,GAYAmvB,EAAAvhC,UAAAmmC,aAAA,SAAA7d,GACA,OAAAA,EAAArT,SAAA5W,KAAA6nC,aAKA3E,EAAAvhC,UAAA6S,YAAA,SAAAL,GACA,OAAAA,EAAAyC,SAAA5W,KAAA6nC,YAAAn2B,WAKAwxB,EAAAvhC,UAAAsS,QAAA,SAAArI,EAAAC,GACA,IAAAk8B,EAAA/nC,KAAA8nC,aAAAl8B,EAAAuI,MACA6zB,EAAAhoC,KAAA8nC,aAAAj8B,EAAAsI,MACAG,EAAAyzB,EAAAxzB,UAAAyzB,GACA,OAAA,IAAA1zB,EACAlN,EAAAuE,YAAAC,EAAApI,KAAAqI,EAAArI,MAGA8Q,GAMA4uB,EAAAvhC,UAAAsT,SAAA,SAAAC,EAAA1R,GACA,IAAA2hC,EAAAjgB,EAAA5R,aAAA4B,GACAf,EAAA6L,EAAAnK,aAAAP,WAAAkC,YAAAxX,KAAA6nC,WAAA1C,GACA,OAAA,IAAAzxB,EAAAmB,UAAArR,EAAA2Q,IAKA+uB,EAAAvhC,UAAAoT,QAAA,WACA,IAAAZ,EAAA6L,EAAAnK,aAAAP,WAAAkC,YAAAxX,KAAA6nC,WAAA7nB,EAAAzM,UACA,OAAA,IAAAG,EAAAmB,UAAAzN,EAAAsE,SAAAyI,IAKA+uB,EAAAvhC,UAAA4M,SAAA,WACA,OAAAvO,KAAA6nC,WAAA12B,QAAAhD,KAAA,MAEA+0B,EAzDA,CA0DCzvB,EAAA2B,OACDnO,EAAAi8B,UAAAA,oCCxEAn8B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAArB,EAAA,KACAoV,EAAApV,EAAA,KACAqf,EAAArf,EAAA,KACA6N,EAAA7N,EAAA,KACAof,EAAApf,EAAA,KACA2P,EAAA3P,EAAA,KAMAmB,EAAAsiB,mBAAA,SAAA0e,GAGA,OAFAA,EAAAA,MACAA,EAAA,UAAAA,EAAA,YAAA,IAAA7e,MAAAC,UACA4e,GASAhhC,EAAAihC,qBAAA,SAAAhhC,EAAA2jB,GACA,OAAA3jB,GAAA,iBAAAA,GAIAC,EAAAkC,OAAA,QAAAnC,EAAA,6CACA2jB,EAAA3jB,EAAA,SAJAA,GAcAD,EAAAilB,yBAAA,SAAAyG,EAAA9H,GACA,IAAAsd,EAAA,IAAAhjB,EAAAqB,mBAIA,OAHAmM,EAAAxG,YAAA,IAAAjR,EAAAhL,KAAA,IAAA,SAAAhB,EAAAiF,GACAg0B,EAAA1b,SAAAvd,EAAAjI,EAAA8jB,6BAAA5W,EAAA0W,MAEAsd,GAUAlhC,EAAA8jB,6BAAA,SAAA5W,EAAA0W,GACA,IAEAlW,EAFAyzB,EAAAj0B,EAAAC,cAAAnH,MACA0O,EAAA1U,EAAAihC,qBAAAE,EAAAvd,GAEA,GAAA1W,EAAAoC,aAAA,CACA,IAAA8xB,EAAAl0B,EACAjN,EAAAD,EAAAihC,qBAAAG,EAAA/lB,WAAAuI,GACA,OAAA3jB,IAAAmhC,EAAA/lB,YACA3G,IAAA0sB,EAAAj0B,cAAAnH,MACA,IAAA0G,EAAAqB,SAAA9N,EAAAge,EAAA5R,aAAAqI,IAGAxH,EAIA,IAAAm0B,EAAAn0B,EAWA,OAVAQ,EAAA2zB,EACA3sB,IAAA2sB,EAAAl0B,cAAAnH,QACA0H,EAAAA,EAAA6B,eAAA,IAAA7C,EAAAqB,SAAA2G,KAEA2sB,EAAAtwB,aAAAvC,EAAAJ,eAAA,SAAAsB,EAAAsB,GACA,IAAAjB,EAAA/P,EAAA8jB,6BAAA9S,EAAA4S,GACA7T,IAAAiB,IACAtD,EAAAA,EAAAoC,qBAAAJ,EAAAK,MAGArC,qCClFA5N,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAIgU,EAASpV,EAAQ,KACjB2P,EAAkB3P,EAAQ,KAC1ByiC,EAAeziC,EAAQ,KA0J3BmB,EAAQuf,mBApJgC,WACpC,SAAAA,IAKIxmB,KAAKoiB,OAAS,KAKdpiB,KAAK8V,UAAY,KAuIrB,OA/HA0Q,EAAmB7kB,UAAUq5B,KAAO,SAAU9rB,GAC1C,GAAmB,MAAflP,KAAKoiB,OACL,OAAOpiB,KAAKoiB,OAAOxL,SAAS1H,GAE3B,GAAKA,EAAKwC,WAA+B,MAAlB1R,KAAK8V,UAY7B,OAAO,KAXP,IAAIsJ,EAAWlQ,EAAKyB,WAEpB,GADAzB,EAAOA,EAAK2B,WACR7Q,KAAK8V,UAAUrD,SAAS2M,GAAW,CAEnC,OADgBpf,KAAK8V,UAAU5U,IAAIke,GAClB4b,KAAK9rB,GAGtB,OAAO,MAcnBsX,EAAmB7kB,UAAU8qB,SAAW,SAAUvd,EAAMzJ,GACpD,GAAIyJ,EAAKwC,UACL1R,KAAKoiB,OAAS3c,EACdzF,KAAK8V,UAAY,UAEhB,GAAoB,OAAhB9V,KAAKoiB,OACVpiB,KAAKoiB,OAASpiB,KAAKoiB,OAAO5K,YAAYtI,EAAMzJ,OAE3C,CACqB,MAAlBzF,KAAK8V,YACL9V,KAAK8V,UAAY,IAAIyyB,EAAaC,YAEtC,IAAIppB,EAAWlQ,EAAKyB,WACf3Q,KAAK8V,UAAUrD,SAAS2M,IACzBpf,KAAK8V,UAAU2yB,IAAIrpB,EAAU,IAAIoH,GAErC,IAAIjV,EAAQvR,KAAK8V,UAAU5U,IAAIke,GAC/BlQ,EAAOA,EAAK2B,WACZU,EAAMkb,SAASvd,EAAMzJ,KAS7B+gB,EAAmB7kB,UAAU2qB,OAAS,SAAUpd,GAC5C,GAAIA,EAAKwC,UAGL,OAFA1R,KAAKoiB,OAAS,KACdpiB,KAAK8V,UAAY,MACV,EAGP,GAAoB,OAAhB9V,KAAKoiB,OAAiB,CACtB,GAAIpiB,KAAKoiB,OAAO7L,aAEZ,OAAO,EAGP,IAAIrP,EAAQlH,KAAKoiB,OACjBpiB,KAAKoiB,OAAS,KACd,IAAIsmB,EAAS1oC,KAIb,OAHAkH,EAAM8Q,aAAavC,EAAgBJ,eAAgB,SAAUlJ,EAAKwmB,GAC9D+V,EAAOjc,SAAS,IAAIvR,EAAOhL,KAAK/D,GAAMwmB,KAEnC3yB,KAAKssB,OAAOpd,GAGtB,GAAuB,OAAnBlP,KAAK8V,UAAoB,CAC9B,IAAIsJ,EAAWlQ,EAAKyB,WAEpB,GADAzB,EAAOA,EAAK2B,WACR7Q,KAAK8V,UAAUrD,SAAS2M,GAAW,CAChBpf,KAAK8V,UAAU5U,IAAIke,GAAUkN,OAAOpd,IAEnDlP,KAAK8V,UAAUrM,OAAO2V,GAG9B,QAAIpf,KAAK8V,UAAUpE,YACf1R,KAAK8V,UAAY,MACV,GAOX,OAAO,GAWnB0Q,EAAmB7kB,UAAUwqB,YAAc,SAAUwc,EAAYC,GACzC,OAAhB5oC,KAAKoiB,OACLwmB,EAAKD,EAAY3oC,KAAKoiB,QAGtBpiB,KAAKgY,aAAa,SAAU7L,EAAKwmB,GAC7B,IAAIzjB,EAAO,IAAIgM,EAAOhL,KAAKy4B,EAAWp6B,WAAa,IAAMpC,GACzDwmB,EAAKxG,YAAYjd,EAAM05B,MASnCpiB,EAAmB7kB,UAAUqW,aAAe,SAAU4wB,GAC3B,OAAnB5oC,KAAK8V,WACL9V,KAAK8V,UAAU/I,KAAK,SAAUZ,EAAKwmB,GAC/BiW,EAAKz8B,EAAKwmB,MAIfnM,EAlJ4B,qCCTvCzf,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAIC,EAASrB,EAAQ,KA4ErBmB,EAAQuhC,WAtEwB,WAC5B,SAAAA,IACIxoC,KAAKwJ,OAkET,OA5DAg/B,EAAW7mC,UAAU8mC,IAAM,SAAU5M,EAAM5uB,GACvCjN,KAAKwJ,IAAIqyB,GAAgB,OAAR5uB,GAAeA,GAMpCu7B,EAAW7mC,UAAU8Q,SAAW,SAAUtG,GACtC,OAAOhF,EAAOsL,SAASzS,KAAKwJ,IAAK2C,IAMrCq8B,EAAW7mC,UAAUT,IAAM,SAAU26B,GACjC,OAAO77B,KAAKyS,SAASopB,GAAQ77B,KAAKwJ,IAAIqyB,QAAQ7f,GAKlDwsB,EAAW7mC,UAAU8H,OAAS,SAAUoyB,UAC7B77B,KAAKwJ,IAAIqyB,IAKpB2M,EAAW7mC,UAAUknC,MAAQ,WACzB7oC,KAAKwJ,QAMTg/B,EAAW7mC,UAAU+P,QAAU,WAC3B,OAAOvK,EAAOuK,QAAQ1R,KAAKwJ,MAK/Bg/B,EAAW7mC,UAAUgW,MAAQ,WACzB,OAAOxQ,EAAO2hC,SAAS9oC,KAAKwJ,MAMhCg/B,EAAW7mC,UAAUoL,KAAO,SAAUlC,GAClC1D,EAAO6F,QAAQhN,KAAKwJ,IAAK,SAAU+C,EAAGe,GAAK,OAAOzC,EAAG0B,EAAGe,MAM5Dk7B,EAAW7mC,UAAU2K,KAAO,WACxB,IAAIA,KAIJ,OAHAnF,EAAO6F,QAAQhN,KAAKwJ,IAAK,SAAU+C,GAC/BD,EAAKrH,KAAKsH,KAEPD,GAEJk8B,EApEoB,qCCP/BzhC,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAI6hC,EAAcjjC,EAAQ,KACtBoV,EAASpV,EAAQ,KA0BrBmB,EAAQ+hC,UAlBuB,WAC3B,SAAAA,EAAmBzU,EAAQrlB,EAAM+a,GAC7BjqB,KAAKu0B,OAASA,EACdv0B,KAAKkP,KAAOA,EACZlP,KAAKiqB,KAAOA,EAEZjqB,KAAK4e,KAAOmqB,EAAY9qB,cAAcgrB,UAU1C,OARAD,EAAUrnC,UAAUunC,kBAAoB,SAAUvyB,GAC9C,OAAI3W,KAAKkP,KAAKwC,UACH,IAAIs3B,EAAUhpC,KAAKu0B,OAAQrZ,EAAOhL,KAAKkc,MAAOpsB,KAAKiqB,KAAKvT,kBAAkBC,IAG1E,IAAIqyB,EAAUhpC,KAAKu0B,OAAQv0B,KAAKkP,KAAK2B,WAAY7Q,KAAKiqB,OAG9D+e,EAhBmB,qCCV9BjiC,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAMIuqB,EANA0X,EAAcrjC,EAAQ,KACtBka,EAAiBla,EAAQ,KACzBqB,EAASrB,EAAQ,KACjBsB,EAAStB,EAAQ,KACjBsjC,EAActjC,EAAQ,KACtBujC,EAASvjC,EAAQ,KAiOrBmB,EAAQyqB,UArNuB,WAC3B,SAAAA,IAUI1xB,KAAKspC,UAwMT,OAtMAviC,OAAOC,eAAe0qB,EAAW,0BAC7BxwB,IAAK,WAED,OADAiG,EAAOkC,OAAOooB,EAAwB,oCAC/BA,GAEXjoB,IAAK,SAAUyD,GACX9F,EAAOkC,QAAQooB,EAAwB,mDACvCA,EAAyBxkB,GAE7BwD,YAAY,EACZC,cAAc,IAKlBghB,EAAU/vB,UAAU+P,QAAU,WAC1B,OAAOtK,EAAOsK,QAAQ1R,KAAKspC,SAS/B5X,EAAU/vB,UAAU4nC,eAAiB,SAAUC,EAAWC,EAAaC,GACnE,IAAIrrB,EAAUmrB,EAAUjV,OAAOlW,QAC/B,GAAgB,OAAZA,EAAkB,CAClB,IAAIsrB,EAAOviC,EAAO4W,QAAQhe,KAAKspC,OAAQjrB,GAEvC,OADAlX,EAAOkC,OAAe,MAARsgC,EAAc,gDACrBA,EAAKJ,eAAeC,EAAWC,EAAaC,GAGnD,IAAIE,KAIJ,OAHAxiC,EAAO4F,QAAQhN,KAAKspC,OAAQ,SAAUn9B,EAAKw9B,GACvCC,EAAWA,EAAShgC,OAAO+/B,EAAKJ,eAAeC,EAAWC,EAAaC,MAEpEE,GAaflY,EAAU/vB,UAAUorB,qBAAuB,SAAU3rB,EAAO0rB,EAAmB2c,EAAaI,EAAaC,GACrG,IAAIzrB,EAAUjd,EAAMyjC,kBAChB8E,EAAOviC,EAAO4W,QAAQhe,KAAKspC,OAAQjrB,GACvC,IAAKsrB,EAAM,CAEP,IAAII,EAAaN,EAAYO,uBAAuBF,EAAsBD,EAAc,MACpFI,GAAqB,EACrBF,EACAE,GAAqB,EAEhBJ,aAAuB7pB,EAAenK,cAC3Ck0B,EAAaN,EAAYS,0BAA0BL,GACnDI,GAAqB,IAGrBF,EAAa/pB,EAAenK,aAAaP,WACzC20B,GAAqB,GAEzB,IAAIE,EAAY,IAAIf,EAAYgB,UAAU,IAAIjB,EAAYhb,UACrC,EAAc8b,GAAoB,GAAQ,IAAId,EAAYhb,UAC1D,EAAe2b,GAAqB,IACzDH,EAAO,IAAIN,EAAOgB,KAAKjpC,EAAO+oC,GAC9BnqC,KAAKspC,OAAOjrB,GAAWsrB,EAI3B,OADAA,EAAK5c,qBAAqBD,GACnB6c,EAAKW,iBAAiBxd,IAajC4E,EAAU/vB,UAAUurB,wBAA0B,SAAU9rB,EAAO0rB,EAAmByd,GAC9E,IAAIlsB,EAAUjd,EAAMyjC,kBAChB2F,KACAC,KACAC,EAAkB1qC,KAAK2qC,kBAC3B,GAAgB,YAAZtsB,EAAuB,CAEvB,IAAIqqB,EAAS1oC,KACboH,EAAO4F,QAAQhN,KAAKspC,OAAQ,SAAUsB,EAAajB,GAC/Cc,EAAeA,EAAa7gC,OAAO+/B,EAAKzc,wBAAwBJ,EAAmByd,IAC/EZ,EAAKj4B,mBACEg3B,EAAOY,OAAOsB,GAEhBjB,EACAkB,WACArH,iBACAsH,gBACDN,EAAQvlC,KAAK0kC,EAAKkB,mBAK7B,CAED,IAAIlB,EAAOviC,EAAO4W,QAAQhe,KAAKspC,OAAQjrB,GACnCsrB,IACAc,EAAeA,EAAa7gC,OAAO+/B,EAAKzc,wBAAwBJ,EAAmByd,IAC/EZ,EAAKj4B,mBACE1R,KAAKspC,OAAOjrB,GAEdsrB,EACAkB,WACArH,iBACAsH,gBACDN,EAAQvlC,KAAK0kC,EAAKkB,cASlC,OAJIH,IAAoB1qC,KAAK2qC,mBAEzBH,EAAQvlC,KAAK,IAAIysB,EAAUD,uBAAuBrwB,EAAMguB,KAAMhuB,EAAM8N,QAE/Ds7B,QAASA,EAAS1hB,OAAQ2hB,IAKvC/Y,EAAU/vB,UAAUopC,cAAgB,WAChC,IAAIhrC,EAAQC,KAEZ,OADa+G,OAAOuF,KAAKtM,KAAKspC,QAAQ9mC,IAAI,SAAU2J,GAAO,OAAOpM,EAAMupC,OAAOn9B,KACjEitB,OAAO,SAAUuQ,GAC3B,OAAQA,EACHkB,WACArH,iBACAsH,kBAQbpZ,EAAU/vB,UAAUqpC,uBAAyB,SAAU97B,GACnD,IAAI26B,EAAc,KAIlB,OAHAziC,EAAO4F,QAAQhN,KAAKspC,OAAQ,SAAUn9B,EAAKw9B,GACvCE,EAAcA,GAAeF,EAAKqB,uBAAuB97B,KAEtD26B,GAMXnY,EAAU/vB,UAAUspC,aAAe,SAAU7pC,GAEzC,GADaA,EAAMoiC,iBACRsH,eACP,OAAO9qC,KAAKkrC,kBAGZ,IAAI7sB,EAAUjd,EAAMyjC,kBACpB,OAAOz9B,EAAO4W,QAAQhe,KAAKspC,OAAQjrB,IAO3CqT,EAAU/vB,UAAUwpC,mBAAqB,SAAU/pC,GAC/C,OAAmC,MAA5BpB,KAAKirC,aAAa7pC,IAK7BswB,EAAU/vB,UAAUgpC,gBAAkB,WAClC,OAAiC,MAA1B3qC,KAAKkrC,mBAKhBxZ,EAAU/vB,UAAUupC,gBAAkB,WAOlC,OANmB9jC,EAAOgkC,UAAUprC,KAAKspC,OAAQ,SAAUK,GACvD,OAAOA,EACFkB,WACArH,iBACAsH,kBAEc,MAEpBpZ,EAnNmB,qCClB9B3qB,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAI8Y,EAAiBla,EAAQ,KACzBqjC,EAAcrjC,EAAQ,KA2E1BmB,EAAQmjC,UAnEuB,WAM3B,SAAAA,EAAmBiB,EAAaC,GAC5BtrC,KAAKqrC,YAAcA,EACnBrrC,KAAKsrC,aAAeA,EAyDxB,OAjDAlB,EAAUzoC,UAAU4pC,gBAAkB,SAAUC,EAAWtQ,EAAUuQ,GACjE,OAAO,IAAIrB,EAAU,IAAIjB,EAAYhb,UAAUqd,EAAWtQ,EAAUuQ,GAAWzrC,KAAKsrC,eAQxFlB,EAAUzoC,UAAU+pC,iBAAmB,SAAUC,EAAYzQ,EAAUuQ,GACnE,OAAO,IAAIrB,EAAUpqC,KAAKqrC,YAAa,IAAIlC,EAAYhb,UAAUwd,EAAYzQ,EAAUuQ,KAK3FrB,EAAUzoC,UAAUiqC,cAAgB,WAChC,OAAO5rC,KAAKqrC,aAKhBjB,EAAUzoC,UAAUkqC,qBAAuB,WACvC,OAAO7rC,KAAKqrC,YAAY9c,qBAClBvuB,KAAKqrC,YAAY9iB,UACjB,MAKV6hB,EAAUzoC,UAAUmqC,eAAiB,WACjC,OAAO9rC,KAAKsrC,cAKhBlB,EAAUzoC,UAAUoqC,sBAAwB,WACxC,OAAO/rC,KAAKsrC,aAAa/c,qBACnBvuB,KAAKsrC,aAAa/iB,UAClB,MAMV6hB,EAAUhe,MAAQ,IAAIge,EAAU,IAAIjB,EAAYhb,UAAUnO,EAAenK,aAAaP,YAChE,GACR,GAAQ,IAAI6zB,EAAYhb,UAAUnO,EAAenK,aAAaP,YACtD,GACR,IACP80B,EAjEmB,qCCV9BrjC,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAIC,EAASrB,EAAQ,KAyBrBmB,EAAQsmB,cAlB2B,WAC/B,SAAAA,EAAuBye,GACnBhsC,KAAKgsC,YAAcA,EACnBhsC,KAAKisC,MAAQ,KAajB,OAXA1e,EAAc5rB,UAAUT,IAAM,WAC1B,IAAIgrC,EAAWlsC,KAAKgsC,YAAY9qC,MAC5BirC,EAAQhlC,EAAO8+B,MAAMiG,GAOzB,OANIlsC,KAAKisC,OACL9kC,EAAO6F,QAAQhN,KAAKisC,MAAO,SAAUre,EAAM1mB,GACvCilC,EAAMve,GAAQue,EAAMve,GAAQ1mB,IAGpClH,KAAKisC,MAAQC,EACNC,GAEJ5e,EAhBuB,qCCRlCxmB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAsM,EAAA1N,EAAA,GACAsmC,EAAAtmC,EAAA,IACAqB,EAAArB,EAAA,KACAsB,EAAAtB,EAAA,KACAuB,EAAAvB,EAAA,KACAwB,EAAAxB,EAAA,KACAoV,EAAApV,EAAA,KACAumC,EAAAvmC,EAAA,KACAwmC,EAAAxmC,EAAA,KACAyB,EAAAzB,EAAA,KACAymC,EAAAzmC,EAAA,KACA0B,EAAA1B,EAAA,KACA4B,EAAA5B,EAAA,KAEA0mC,EAAA,IACAC,EAAA,IAaAplB,EAAA,SAAAtT,GAWA,SAAAsT,EAAAtB,EAAAkB,EAAAC,EAAAI,EAAAolB,EAAAC,GACA,IAAA5sC,EAAAgU,EAAA6G,KAAA5a,OAAAA,KAwCA,GAvCAD,EAAAgmB,UAAAA,EACAhmB,EAAAknB,cAAAA,EACAlnB,EAAAmnB,iBAAAA,EACAnnB,EAAAunB,oBAAAA,EACAvnB,EAAA2sC,mBAAAA,EACA3sC,EAAA4sC,cAAAA,EAEA5sC,EAAA6H,GAAAyf,EAAAulB,8BACA7sC,EAAA6qB,KAAAtjB,EAAAoC,WAAA,KAAA3J,EAAA6H,GAAA,KAEA7H,EAAA8sC,qBACA9sC,EAAA+sC,YACA/sC,EAAAgtC,oBACAhtC,EAAAitC,qBAAA,EACAjtC,EAAAktC,6BACAltC,EAAAmtC,YAAA,EACAntC,EAAAotC,gBAAAX,EACAzsC,EAAAqtC,mBAAAX,EACA1sC,EAAAstC,uBAAA,KACAttC,EAAAutC,cAAA,KAEAvtC,EAAAwtC,0BAAA,KAEAxtC,EAAAytC,UAAA,EAEAztC,EAAA0tC,kBACA1tC,EAAA2tC,eAAA,EAKA3tC,EAAA4tC,UAAA,KAEA5tC,EAAA6tC,WAAA,KACA7tC,EAAA8tC,oBAAA,EACA9tC,EAAA+tC,uBAAA,EACA/tC,EAAAguC,kBAAA,EACAhuC,EAAAiuC,2BAAA,KACAjuC,EAAAkuC,+BAAA,KACAtB,IAAAjlC,EAAAoD,YACA,MAAA,IAAAf,MAAA,kFAOA,OALAhK,EAAAmuC,iBAAA,GACA7B,EAAA8B,kBAAAxY,cAAAyF,GAAA,UAAAr7B,EAAAquC,WAAAruC,IACA,IAAAgmB,EAAA1I,KAAAhT,QAAA,YACAiiC,EAAA+B,cAAA1Y,cAAAyF,GAAA,SAAAr7B,EAAAuuC,UAAAvuC,GAEAA,EAkrBA,OA7uBAyT,EAAAQ,UAAAqT,EAAAtT,GAmEAsT,EAAA1lB,UAAA4sC,YAAA,SAAAp1B,EAAAhO,EAAAqjC,GACA,IAAAC,IAAAzuC,KAAA0tC,eACAgB,GAAmBC,EAAAF,EAAA7iC,EAAAuN,EAAAtN,EAAAV,GACnBnL,KAAA4qB,KAAAxjB,EAAA2B,UAAA2lC,IACArnC,EAAAgC,OAAArJ,KAAAktC,WAAA,0DACAltC,KAAA2tC,UAAAY,YAAAG,GACAF,IACAxuC,KAAAytC,eAAAgB,GAAAD,IAMAnnB,EAAA1lB,UAAAinB,OAAA,SAAAxnB,EAAAgnB,EAAAD,EAAAE,GACA,IAAAhK,EAAAjd,EAAAyjC,kBACA9zB,EAAA3P,EAAA8N,KAAAX,WACAvO,KAAA4qB,KAAA,qBAAA7Z,EAAA,IAAAsN,GACAre,KAAA8sC,SAAA/7B,GAAA/Q,KAAA8sC,SAAA/7B,OACA1J,EAAAgC,OAAAjI,EAAAoiC,iBAAAoL,cACAxtC,EAAAoiC,iBAAAsH,eAAA,sDACAzjC,EAAAgC,QAAArJ,KAAA8sC,SAAA/7B,GAAAsN,GAAA,gDACA,IAAAwwB,GACAxmB,WAAAA,EACAymB,OAAA1mB,EACAhnB,MAAAA,EACA+mB,IAAAA,GAEAnoB,KAAA8sC,SAAA/7B,GAAAsN,GAAAwwB,EACA7uC,KAAAktC,YACAltC,KAAA+uC,YAAAF,IAUAxnB,EAAA1lB,UAAAotC,YAAA,SAAAF,GACA,IAAA9uC,EAAAC,KACAoB,EAAAytC,EAAAztC,MACA2P,EAAA3P,EAAA8N,KAAAX,WACA8P,EAAAjd,EAAAyjC,kBACA7kC,KAAA4qB,KAAA,aAAA7Z,EAAA,QAAAsN,GACA,IAAA2wB,GAAmBhS,EAAAjsB,GAGnB89B,EAAA1mB,MACA6mB,EAAA,EAAA5tC,EAAAujC,cACAqK,EAAA,EAAAH,EAAA1mB,KAEA6mB,EAAA,EAAAH,EAAAC,SACA9uC,KAAAuuC,YAPA,IAOAS,EAAA,SAAAtmC,GACA,IAAAumC,EAAAvmC,EAAA,EACAmgB,EAAAngB,EAAA,EAEA2e,EAAA6nB,sBAAAD,EAAA7tC,IACArB,EAAA+sC,SAAA/7B,IAAAhR,EAAA+sC,SAAA/7B,GAAAsN,MAEAwwB,IACA9uC,EAAA6qB,KAAA,kBAAAliB,GACA,OAAAmgB,GACA9oB,EAAAovC,cAAAp+B,EAAAsN,GAEAwwB,EAAAxmB,YACAwmB,EAAAxmB,WAAAQ,EAAAomB,OAUA5nB,EAAA6nB,sBAAA,SAAAD,EAAA7tC,GACA,GAAA6tC,GAAA,iBAAAA,GAAA9nC,EAAAsL,SAAAw8B,EAAA,KAAA,CACA,IAAAG,EAAAjoC,EAAA6W,QAAAixB,EAAA,KACA,GAAArmC,MAAAC,QAAAumC,KAAAA,EAAA/kC,QAAA,YAAA,CACA,IAAAglC,EAAA,gBACAjuC,EACAoiC,iBACAzO,WACAxmB,WACA,IACA+gC,EAAAluC,EAAA8N,KAAAX,WACAjH,EAAA0C,KAAA,wGACAqlC,EAAA,OACAC,EAAA,sDAOAjoB,EAAA1lB,UAAA8lB,iBAAA,SAAAD,GACAxnB,KAAA4tC,WAAApmB,EACAxnB,KAAA4qB,KAAA,wBACA5qB,KAAA4tC,WACA5tC,KAAAuvC,UAKAvvC,KAAAktC,YACAltC,KAAAuuC,YAAA,YAA6C,cAG7CvuC,KAAAwvC,uCAAAhoB,IAMAH,EAAA1lB,UAAA6tC,uCAAA,SAAAC,IAGAA,GAAA,KAAAA,EAAA3sC,QACAyE,EAAAmoC,QAAAD,MACAzvC,KAAA4qB,KAAA,iEACA5qB,KAAAotC,mBAzMA,MAgNA/lB,EAAA1lB,UAAA4tC,QAAA,WACA,IAAAxvC,EAAAC,KACA,GAAAA,KAAAktC,YAAAltC,KAAA4tC,WAAA,CACA,IAAA+B,EAAA3vC,KAAA4tC,WACAgC,EAAAroC,EAAAsoC,cAAAF,GAAA,OAAA,QACAG,GAA+BtyB,KAAAmyB,GAC/B,OAAA3vC,KAAA2sC,cACAmD,EAAA,QAAA,EAEA,iBAAA9vC,KAAA2sC,gBACAmD,EAAA,QAAA9vC,KAAA2sC,eAEA3sC,KAAAuuC,YAAAqB,EAAAE,EAAA,SAAAC,GACA,IAAAlnB,EAAAknB,EAAA,EACAtqC,EAAAsqC,EAAA,GAAA,QACAhwC,EAAA6tC,aAAA+B,IACA,OAAA9mB,EACA9oB,EAAA+tC,uBAAA,EAIA/tC,EAAAiwC,eAAAnnB,EAAApjB,QASA4hB,EAAA1lB,UAAAqnB,SAAA,SAAA5nB,EAAA+mB,GACA,IAAApX,EAAA3P,EAAA8N,KAAAX,WACA8P,EAAAjd,EAAAyjC,kBACA7kC,KAAA4qB,KAAA,uBAAA7Z,EAAA,IAAAsN,GACAhX,EAAAgC,OAAAjI,EAAAoiC,iBAAAoL,cACAxtC,EAAAoiC,iBAAAsH,eAAA,wDACA9qC,KAAAmvC,cAAAp+B,EAAAsN,IACAre,KAAAktC,YACAltC,KAAAiwC,cAAAl/B,EAAAsN,EAAAjd,EAAAujC,cAAAxc,IAGAd,EAAA1lB,UAAAsuC,cAAA,SAAAl/B,EAAAsN,EAAA6xB,EAAA/nB,GACAnoB,KAAA4qB,KAAA,eAAA7Z,EAAA,QAAAsN,GACA,IAAA2wB,GAAmBhS,EAAAjsB,GAGnBoX,IACA6mB,EAAA,EAAAkB,EACAlB,EAAA,EAAA7mB,GAEAnoB,KAAAuuC,YANA,IAMAS,IAKA3nB,EAAA1lB,UAAA6qB,gBAAA,SAAAzb,EAAAtL,EAAA4iB,GACAroB,KAAAktC,WACAltC,KAAAmwC,kBAAA,IAAAp/B,EAAAtL,EAAA4iB,GAGAroB,KAAAitC,0BAAAhoC,MACA8L,WAAAA,EACAoI,OAAA,IACA1T,KAAAA,EACA4iB,WAAAA,KAOAhB,EAAA1lB,UAAAirB,kBAAA,SAAA7b,EAAAtL,EAAA4iB,GACAroB,KAAAktC,WACAltC,KAAAmwC,kBAAA,KAAAp/B,EAAAtL,EAAA4iB,GAGAroB,KAAAitC,0BAAAhoC,MACA8L,WAAAA,EACAoI,OAAA,KACA1T,KAAAA,EACA4iB,WAAAA,KAOAhB,EAAA1lB,UAAA0qB,mBAAA,SAAAtb,EAAAsX,GACAroB,KAAAktC,WACAltC,KAAAmwC,kBAAA,KAAAp/B,EAAA,KAAAsX,GAGAroB,KAAAitC,0BAAAhoC,MACA8L,WAAAA,EACAoI,OAAA,KACA1T,KAAA,KACA4iB,WAAAA,KAIAhB,EAAA1lB,UAAAwuC,kBAAA,SAAAh3B,EAAApI,EAAAtL,EAAA4iB,GACA,IAAA+nB,GAAuBpT,EAAAjsB,EAAAhL,EAAAN,GACvBzF,KAAA4qB,KAAA,gBAAAzR,EAAAi3B,GACApwC,KAAAuuC,YAAAp1B,EAAAi3B,EAAA,SAAAC,GACAhoB,GACAjd,WAAA,WACAid,EAAAgoB,EAAA,EAAAA,EAAA,IACiBhlC,KAAAC,MAAA,OAOjB+b,EAAA1lB,UAAAwpB,IAAA,SAAApa,EAAAtL,EAAA4iB,EAAAlQ,GACAnY,KAAAswC,YAAA,IAAAv/B,EAAAtL,EAAA4iB,EAAAlQ,IAKAkP,EAAA1lB,UAAAqqB,MAAA,SAAAjb,EAAAtL,EAAA4iB,EAAAlQ,GACAnY,KAAAswC,YAAA,IAAAv/B,EAAAtL,EAAA4iB,EAAAlQ,IAEAkP,EAAA1lB,UAAA2uC,YAAA,SAAAn3B,EAAApI,EAAAtL,EAAA4iB,EAAAlQ,GACA,IAAAi4B,GACApT,EAAAjsB,EACAhL,EAAAN,QAEAuW,IAAA7D,IACAi4B,EAAA,EAAAj4B,GAEAnY,KAAA+sC,iBAAA9nC,MACAkU,OAAAA,EACAi3B,QAAAA,EACA/nB,WAAAA,IAEAroB,KAAAgtC,uBAEAhtC,KAAAktC,WACAltC,KAAAuwC,SAFAvwC,KAAA+sC,iBAAAjqC,OAAA,GAKA9C,KAAA4qB,KAAA,kBAAA7Z,IAGAsW,EAAA1lB,UAAA4uC,SAAA,SAAA/3B,GACA,IAAAzY,EAAAC,KACAmZ,EAAAnZ,KAAA+sC,iBAAAv0B,GAAAW,OACAi3B,EAAApwC,KAAA+sC,iBAAAv0B,GAAA43B,QACA/nB,EAAAroB,KAAA+sC,iBAAAv0B,GAAA6P,WACAroB,KAAA+sC,iBAAAv0B,GAAAg4B,OAAAxwC,KAAAktC,WACAltC,KAAAuuC,YAAAp1B,EAAAi3B,EAAA,SAAA1nC,GACA3I,EAAA6qB,KAAAzR,EAAA,YAAAzQ,UACA3I,EAAAgtC,iBAAAv0B,GACAzY,EAAAitC,uBAEA,IAAAjtC,EAAAitC,uBACAjtC,EAAAgtC,qBAEA1kB,GACAA,EAAA3f,EAAA,EAAAA,EAAA,MAMA2e,EAAA1lB,UAAA8uC,YAAA,SAAApjB,GACA,IAAAttB,EAAAC,KAEA,GAAAA,KAAAktC,WAAA,CACA,IAAAkD,GAA2BvjC,EAAAwgB,GAC3BrtB,KAAA4qB,KAAA,cAAAwlB,GACApwC,KAAAuuC,YAAA,IAAA6B,EAAA,SAAA/sB,GAEA,GAAA,OADAA,EAAA,EACA,CAEAtjB,EAAA6qB,KAAA,cAAA,wBADAvH,EAAA,QAUAgE,EAAA1lB,UAAA+uC,eAAA,SAAAhoC,GACA,GAAA,MAAAA,EAAA,CAEA1I,KAAA4qB,KAAA,gBAAAxjB,EAAA2B,UAAAL,IACA,IAAAioC,EAAAjoC,EAAA,EACA8lC,EAAAxuC,KAAAytC,eAAAkD,GACAnC,WACAxuC,KAAAytC,eAAAkD,GACAnC,EAAA9lC,EAAA,QAGA,CAAA,GAAA,UAAAA,EACA,KAAA,qCAAAA,EAAA,MAEA,MAAAA,GAEA1I,KAAA4wC,YAAAloC,EAAA,EAAAA,EAAA,KAGA2e,EAAA1lB,UAAAivC,YAAA,SAAAz3B,EAAAhO,GACAnL,KAAA4qB,KAAA,sBAAAzR,EAAAhO,GACA,MAAAgO,EACAnZ,KAAAinB,cAAA9b,EAAA,EAAAA,EAAA,GACA,EAAAA,EAAA,GACA,MAAAgO,EACAnZ,KAAAinB,cAAA9b,EAAA,EAAAA,EAAA,GACA,EAAAA,EAAA,GACA,MAAAgO,EACAnZ,KAAA6wC,iBAAA1lC,EAAA,EAAAA,EAAA,GACA,OAAAgO,EACAnZ,KAAAgwC,eAAA7kC,EAAA,EAAAA,EAAA,GACA,OAAAgO,EACAnZ,KAAA8wC,uBAAA3lC,GAEA7D,EAAAuC,MAAA,6CACAzC,EAAA2B,UAAAoQ,GACA,uCAEAkO,EAAA1lB,UAAAovC,SAAA,SAAAvnB,EAAAwnB,GACAhxC,KAAA4qB,KAAA,oBACA5qB,KAAAktC,YAAA,EACAltC,KAAAiuC,gCAAA,IAAA7kB,MAAAC,UACArpB,KAAAixC,iBAAAznB,GACAxpB,KAAAstC,cAAA0D,EACAhxC,KAAA+tC,kBACA/tC,KAAAkxC,oBAEAlxC,KAAAmxC,gBACAnxC,KAAA+tC,kBAAA,EACA/tC,KAAAknB,kBAAA,IAEAG,EAAA1lB,UAAAusC,iBAAA,SAAAj+B,GACA,IAAAlQ,EAAAC,KACAqH,EAAAgC,QAAArJ,KAAA2tC,UAAA,0DACA3tC,KAAAutC,2BACA6D,aAAApxC,KAAAutC,2BAIAvtC,KAAAutC,0BAAAniC,WAAA,WACArL,EAAAwtC,0BAAA,KACAxtC,EAAAsxC,wBACShmC,KAAAC,MAAA2E,KAMToX,EAAA1lB,UAAAysC,WAAA,SAAAkD,GAEAA,IACAtxC,KAAAwtC,UACAxtC,KAAAmtC,kBAAAntC,KAAAotC,qBACAptC,KAAA4qB,KAAA,2CACA5qB,KAAAmtC,gBAAAX,EACAxsC,KAAA2tC,WACA3tC,KAAAkuC,iBAAA,IAGAluC,KAAAwtC,SAAA8D,GAEAjqB,EAAA1lB,UAAA2sC,UAAA,SAAAiD,GACAA,GACAvxC,KAAA4qB,KAAA,wBACA5qB,KAAAmtC,gBAAAX,EACAxsC,KAAA2tC,WACA3tC,KAAAkuC,iBAAA,KAIAluC,KAAA4qB,KAAA,8CACA5qB,KAAA2tC,WACA3tC,KAAA2tC,UAAAtoC,UAIAgiB,EAAA1lB,UAAA6vC,sBAAA,WAQA,GAPAxxC,KAAA4qB,KAAA,4BACA5qB,KAAAktC,YAAA,EACAltC,KAAA2tC,UAAA,KAEA3tC,KAAAyxC,0BAEAzxC,KAAAytC,kBACAztC,KAAA0xC,mBAAA,CACA,GAAA1xC,KAAAwtC,UAKA,GAAAxtC,KAAAiuC,+BAAA,EAEA,IAAA7kB,MAAAC,UAAArpB,KAAAiuC,+BAvfA,MAyfAjuC,KAAAmtC,gBAAAX,GACAxsC,KAAAiuC,+BAAA,WATAjuC,KAAA4qB,KAAA,8CACA5qB,KAAAmtC,gBAAAntC,KAAAotC,mBACAptC,KAAAguC,4BAAA,IAAA5kB,MAAAC,UASA,IAAAsoB,GAAA,IAAAvoB,MAAAC,UAAArpB,KAAAguC,2BACA4D,EAAAvmC,KAAAyH,IAAA,EAAA9S,KAAAmtC,gBAAAwE,GACAC,EAAAvmC,KAAAwmC,SAAAD,EACA5xC,KAAA4qB,KAAA,0BAAAgnB,EAAA,MACA5xC,KAAAkuC,iBAAA0D,GAEA5xC,KAAAmtC,gBAAA9hC,KAAA0C,IAAA/N,KAAAotC,mBAngBA,IAmgBAptC,KAAAmtC,iBAEAntC,KAAAknB,kBAAA,IAEAG,EAAA1lB,UAAA0vC,qBAAA,WACA,GAAArxC,KAAA0xC,mBAAA,CACA1xC,KAAA4qB,KAAA,+BACA5qB,KAAAguC,4BAAA,IAAA5kB,MAAAC,UACArpB,KAAAiuC,+BAAA,KACA,IAAA6D,EAAA9xC,KAAA0wC,eAAApnC,KAAAtJ,MACA+xC,EAAA/xC,KAAA+wC,SAAAznC,KAAAtJ,MACA2uB,EAAA3uB,KAAAwxC,sBAAAloC,KAAAtJ,MACAgyC,EAAAhyC,KAAA4H,GAAA,IAAAyf,EAAA4qB,oBACAvJ,EAAA1oC,KACAkyC,EAAAlyC,KAAAstC,cACA6E,GAAA,EACAC,EAAA,KACAC,EAAA,WACAD,EACAA,EAAA/sC,SAGA8sC,GAAA,EACAxjB,MAOA3uB,KAAA2tC,WACAtoC,MAAAgtC,EACA9D,YANA,SAAAG,GACArnC,EAAAgC,OAAA+oC,EAAA,0DACAA,EAAA7D,YAAAG,KAMA,IAAA4D,EAAAtyC,KAAA6tC,mBACA7tC,KAAA6tC,oBAAA,EAEA7tC,KAAA0sC,mBACA6F,SAAAD,GACAlhB,KAAA,SAAA/N,GACA8uB,EAUA7qC,EAAAlC,IAAA,0CATAkC,EAAAlC,IAAA,8CACAsjC,EAAAkF,WAAAvqB,GAAAA,EAAAmvB,YACAJ,EAAA,IAAA7F,EAAAkG,WAAAT,EAAAtJ,EAAA3iB,UAAA+rB,EAAAC,EAAApjB,EACA,SAAA1f,GACA3H,EAAA0C,KAAAiF,EAAA,KAAAy5B,EAAA3iB,UAAAxX,WAAA,KACAm6B,EAAAvb,UA/iBA,gBAgjBqB+kB,MAMrB9gB,KAAA,KAAA,SAAAvnB,GACA6+B,EAAA9d,KAAA,wBAAA/gB,GACAsoC,IACA3qC,EAAAkrC,UAAAC,YAIArrC,EAAA0C,KAAAH,GAEAwoC,SAQAhrB,EAAA1lB,UAAAwrB,UAAA,SAAAle,GACA3H,EAAAlC,IAAA,uCAAA6J,GACAjP,KAAA6sC,kBAAA59B,IAAA,EACAjP,KAAA2tC,UACA3tC,KAAA2tC,UAAAtoC,SAGArF,KAAAutC,4BACA6D,aAAApxC,KAAAutC,2BACAvtC,KAAAutC,0BAAA,MAEAvtC,KAAAktC,YACAltC,KAAAwxC,0BAOAnqB,EAAA1lB,UAAAyrB,OAAA,SAAAne,GACA3H,EAAAlC,IAAA,mCAAA6J,UACAjP,KAAA6sC,kBAAA59B,GACA9H,EAAAuK,QAAA1R,KAAA6sC,qBACA7sC,KAAAmtC,gBAAAX,EACAxsC,KAAA2tC,WACA3tC,KAAAkuC,iBAAA,KAIA7mB,EAAA1lB,UAAAsvC,iBAAA,SAAAznB,GACA,IAAA2iB,EAAA3iB,GAAA,IAAAJ,MAAAC,UACArpB,KAAAsnB,qBAAkCsrB,iBAAAzG,KAElC9kB,EAAA1lB,UAAA8vC,wBAAA,WACA,IAAA,IAAA9oC,EAAA,EAAuBA,EAAA3I,KAAA+sC,iBAAAjqC,OAAkC6F,IAAA,CACzD,IAAAwiB,EAAAnrB,KAAA+sC,iBAAApkC,GACAwiB,GAAA,MAAAA,EAAAilB,SAAAjlB,EAAAqlB,SACArlB,EAAA9C,YACA8C,EAAA9C,WAAA,qBACAroB,KAAA+sC,iBAAApkC,GACA3I,KAAAgtC,wBAIA,IAAAhtC,KAAAgtC,uBACAhtC,KAAA+sC,sBAOA1lB,EAAA1lB,UAAAkvC,iBAAA,SAAA9/B,EAAA3P,GAEA,IAAAid,EAKAA,EAJAjd,EAIAA,EAAAoB,IAAA,SAAAqwC,GAA8C,OAAAvrC,EAAA+E,kBAAAwmC,KAAsC1kC,KAAA,KAHpF,UAKA,IAAAya,EAAA5oB,KAAAmvC,cAAAp+B,EAAAsN,GACAuK,GAAAA,EAAAP,YACAO,EAAAP,WAAA,sBAQAhB,EAAA1lB,UAAAwtC,cAAA,SAAAp+B,EAAAsN,GACA,IACAuK,EADAkqB,EAAA,IAAA53B,EAAAhL,KAAAa,GAAAxC,WAaA,YAXAyN,IAAAhc,KAAA8sC,SAAAgG,IACAlqB,EAAA5oB,KAAA8sC,SAAAgG,GAAAz0B,UACAre,KAAA8sC,SAAAgG,GAAAz0B,GACA,IAAAlX,EAAA2hC,SAAA9oC,KAAA8sC,SAAAgG,YACA9yC,KAAA8sC,SAAAgG,IAKAlqB,OAAA5M,EAEA4M,GAEAvB,EAAA1lB,UAAAquC,eAAA,SAAA+C,EAAAC,GACA1rC,EAAAlC,IAAA,uBAAA2tC,EAAA,IAAAC,GACAhzC,KAAA4tC,WAAA,KACA5tC,KAAA6tC,oBAAA,EACA7tC,KAAA2tC,UAAAtoC,QACA,kBAAA0tC,GAAA,sBAAAA,IAIA/yC,KAAA8tC,yBACA9tC,KAAA8tC,wBAtqBA,IAwqBA9tC,KAAAmtC,gBA7qBA,IAgrBAntC,KAAA0sC,mBAAAuG,2BAIA5rB,EAAA1lB,UAAAmvC,uBAAA,SAAA3lC,GACAnL,KAAAqtC,uBACArtC,KAAAqtC,uBAAAliC,GAGA,QAAAA,GAAA,oBAAAhG,SACAA,QAAAC,IAAA,aAAA+F,EAAA,IAAAsQ,QAAA,KAAA,kBAIA4L,EAAA1lB,UAAAwvC,cAAA,WACA,IAAApxC,EAAAC,KAEAA,KAAAuvC,UAGApoC,EAAA6F,QAAAhN,KAAA8sC,SAAA,SAAA/7B,EAAAmiC,GACA/rC,EAAA6F,QAAAkmC,EAAA,SAAA/mC,EAAA0iC,GACA9uC,EAAAgvC,YAAAF,OAGA,IAAA,IAAAlmC,EAAA,EAAuBA,EAAA3I,KAAA+sC,iBAAAjqC,OAAkC6F,IACzD3I,KAAA+sC,iBAAApkC,IACA3I,KAAAuwC,SAAA5nC,GAEA,KAAA3I,KAAAitC,0BAAAnqC,QAAA,CACA,IAAAstC,EAAApwC,KAAAitC,0BAAAkG,QACAnzC,KAAAmwC,kBAAAC,EAAAj3B,OAAAi3B,EAAAr/B,WAAAq/B,EAAA3qC,KAAA2qC,EAAA/nB,cAOAhB,EAAA1lB,UAAAuvC,kBAAA,WACA,IAAA7jB,KACA+lB,EAAA,KACA5rC,EAAAkrC,UAAAC,WACAS,EAAA,aAEA5rC,EAAAkrC,UAAAW,cACAD,EAAA,QAEA/lB,EAAA,OAAA+lB,EAAA,IAAAhH,EAAAkH,QAAAC,YAAA93B,QAAA,MAAA,MAAA,EACA/T,EAAA8rC,kBACAnmB,EAAA,qBAAA,EAEA3lB,EAAA+rC,kBACApmB,EAAA,yBAAA,GAEArtB,KAAAywC,YAAApjB,IAMAhG,EAAA1lB,UAAA+vC,iBAAA,WACA,IAAAH,EAAAjF,EAAA+B,cAAA1Y,cAAA+d,kBACA,OAAAvsC,EAAAuK,QAAA1R,KAAA6sC,oBAAA0E,GAKAlqB,EAAAulB,4BAAA,EAMAvlB,EAAA4qB,kBAAA,EACA5qB,EA9uBA,CAfAvhB,EAAA,KA8vBC6tC,eACD1sC,EAAAogB,qBAAAA,oCC7wBAtgB,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAIC,EAASrB,EAAQ,KA2DrBmB,EAAQ2sC,aAtD0B,WAI9B,SAAAA,EAAsBC,GAClB7zC,KAAK6zC,eAAiBA,EACtB7zC,KAAK8zC,cACL3sC,EAAOkC,OAAOT,MAAMC,QAAQgrC,IAAmBA,EAAe/wC,OAAS,EAAG,8BA6C9E,OAtCA8wC,EAAajyC,UAAUoyC,QAAU,SAAUl3B,GAEvC,IAAK,IADDrU,KACK5F,EAAK,EAAGA,EAAK6F,UAAU3F,OAAQF,IACpC4F,EAAS5F,EAAK,GAAK6F,UAAU7F,GAEjC,GAAIgG,MAAMC,QAAQ7I,KAAK8zC,WAAWj3B,IAG9B,IAAK,IADDm3B,EAAYh0C,KAAK8zC,WAAWj3B,GAAW1L,QAClCxI,EAAI,EAAGA,EAAIqrC,EAAUlxC,OAAQ6F,IAClCqrC,EAAUrrC,GAAGwE,SAASrE,MAAMkrC,EAAUrrC,GAAGyE,QAAS5E,IAI9DorC,EAAajyC,UAAUy5B,GAAK,SAAUve,EAAW1P,EAAUC,GACvDpN,KAAKi0C,mBAAmBp3B,GACxB7c,KAAK8zC,WAAWj3B,GAAa7c,KAAK8zC,WAAWj3B,OAC7C7c,KAAK8zC,WAAWj3B,GAAW5X,MAAOkI,SAAUA,EAAUC,QAASA,IAC/D,IAAI8mC,EAAYl0C,KAAKm0C,gBAAgBt3B,GACjCq3B,GACA/mC,EAASrE,MAAMsE,EAAS8mC,IAGhCN,EAAajyC,UAAUm6B,IAAM,SAAUjf,EAAW1P,EAAUC,GACxDpN,KAAKi0C,mBAAmBp3B,GAExB,IAAK,IADDm3B,EAAYh0C,KAAK8zC,WAAWj3B,OACvBlU,EAAI,EAAGA,EAAIqrC,EAAUlxC,OAAQ6F,IAClC,GAAIqrC,EAAUrrC,GAAGwE,WAAaA,KACxBC,GAAWA,IAAY4mC,EAAUrrC,GAAGyE,SAEtC,YADA4mC,EAAUI,OAAOzrC,EAAG,IAKhCirC,EAAajyC,UAAUsyC,mBAAqB,SAAUp3B,GAClD1V,EAAOkC,OAAOrJ,KAAK6zC,eAAe7Y,KAAK,SAAUqZ,GAC7C,OAAOA,IAAOx3B,IACd,kBAAoBA,IAErB+2B,EApDsB,qCCNjC7sC,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAIC,EAASrB,EAAQ,KACjB2B,EAAY3B,EAAQ,KACpBq7B,EAAcr7B,EAAQ,KACtBwuC,EAAqBxuC,EAAQ,KAsdjCmB,EAAQwrC,WA3bwB,WAU5B,SAAAA,EAAoB7qC,EAAIme,EAAWwuB,EAAYxD,EAAUxqB,EAAeiuB,EAASlH,GAC7EttC,KAAK4H,GAAKA,EACV5H,KAAK+lB,UAAYA,EACjB/lB,KAAKu0C,WAAaA,EAClBv0C,KAAK+wC,SAAWA,EAChB/wC,KAAKumB,cAAgBA,EACrBvmB,KAAKw0C,QAAUA,EACfx0C,KAAKstC,cAAgBA,EACrBttC,KAAKy0C,gBAAkB,EACvBz0C,KAAK00C,uBACL10C,KAAK20C,OAAS,EACd30C,KAAK4qB,KAAOzjB,EAAOuC,WAAW,KAAO1J,KAAK4H,GAAK,KAC/C5H,KAAK40C,kBAAoB,IAAIN,EAAmBO,iBAAiB9uB,GACjE/lB,KAAK4qB,KAAK,sBACV5qB,KAAK80C,SAiaT,OA3ZArC,EAAW9wC,UAAUmzC,OAAS,WAC1B,IAAI/0C,EAAQC,KACR+0C,EAAO/0C,KAAK40C,kBAAkBI,mBAClCh1C,KAAKi1C,MAAQ,IAAIF,EAAK/0C,KAAKk1C,mBAAoBl1C,KAAK+lB,eAAW/J,EAAWhc,KAAKstC,eAG/EttC,KAAKm1C,0BAA4BJ,EAAmC,8BAAK,EACzE,IAAIK,EAAoBp1C,KAAKq1C,cAAcr1C,KAAKi1C,OAC5CK,EAAmBt1C,KAAKu1C,iBAAiBv1C,KAAKi1C,OAClDj1C,KAAKw1C,IAAMx1C,KAAKi1C,MAChBj1C,KAAKy1C,IAAMz1C,KAAKi1C,MAChBj1C,KAAK01C,eAAiB,KACtB11C,KAAK21C,YAAa,EAOlBvqC,WAAW,WAEPrL,EAAMk1C,OAASl1C,EAAMk1C,MAAMjwC,KAAKowC,EAAmBE,IACpDjqC,KAAKC,MAAM,IACd,IAAIsqC,EAAoBb,EAAqB,gBAAK,EAC9Ca,EAAoB,IACpB51C,KAAK61C,gBAAkB1uC,EAAO4I,sBAAsB,WAChDhQ,EAAM81C,gBAAkB,KACnB91C,EAAM41C,aACH51C,EAAMk1C,OACNl1C,EAAMk1C,MAAMa,cA5EE,QA6Ed/1C,EAAM6qB,KAAK,wDACP7qB,EAAMk1C,MAAMa,cACZ,wCACJ/1C,EAAM41C,YAAa,EACnB51C,EAAMk1C,MAAMc,yBAEPh2C,EAAMk1C,OACXl1C,EAAMk1C,MAAMe,UArFF,MAsFVj2C,EAAM6qB,KAAK,oDACP7qB,EAAMk1C,MAAMe,UACZ,uCAKJj2C,EAAM6qB,KAAK,+CACX7qB,EAAMsF,WAGfgG,KAAKC,MAAMsqC,MAOtBnD,EAAW9wC,UAAUuzC,iBAAmB,WACpC,MAAO,KAAOl1C,KAAK4H,GAAK,IAAM5H,KAAKy0C,mBAEvChC,EAAW9wC,UAAU4zC,iBAAmB,SAAUR,GAC9C,IAAIh1C,EAAQC,KACZ,OAAO,SAAUi2C,GACTlB,IAASh1C,EAAMk1C,MACfl1C,EAAMm2C,kBAAkBD,GAEnBlB,IAASh1C,EAAM21C,gBACpB31C,EAAM6qB,KAAK,8BACX7qB,EAAMo2C,8BAGNp2C,EAAM6qB,KAAK,+BAIvB6nB,EAAW9wC,UAAU0zC,cAAgB,SAAUN,GAC3C,IAAIh1C,EAAQC,KACZ,OAAO,SAAU0I,GACO,GAAhB3I,EAAM40C,SACFI,IAASh1C,EAAM01C,IACf11C,EAAMq2C,0BAA0B1tC,GAE3BqsC,IAASh1C,EAAM21C,eACpB31C,EAAMs2C,4BAA4B3tC,GAGlC3I,EAAM6qB,KAAK,gCAS3B6nB,EAAW9wC,UAAU4sC,YAAc,SAAU+H,GAGzCt2C,KAAKu2C,WADOC,EAAG,IAAKzwC,EAAGuwC,KAG3B7D,EAAW9wC,UAAU80C,qBAAuB,WACpCz2C,KAAKw1C,MAAQx1C,KAAK01C,gBAAkB11C,KAAKy1C,MAAQz1C,KAAK01C,iBACtD11C,KAAK4qB,KAAK,2CAA6C5qB,KAAK01C,eAAegB,QAC3E12C,KAAKi1C,MAAQj1C,KAAK01C,eAClB11C,KAAK01C,eAAiB,OAI9BjD,EAAW9wC,UAAUg1C,oBAAsB,SAAUC,GACjD,GA1JW,MA0JSA,EAAa,CAC7B,IAAIC,EAAMD,EAAwB,EArJ7B,MAsJDC,EACA72C,KAAK82C,6BA1JD,MA4JCD,GAEL72C,KAAK4qB,KAAK,wCACV5qB,KAAK01C,eAAerwC,QAEhBrF,KAAKw1C,MAAQx1C,KAAK01C,gBAClB11C,KAAKy1C,MAAQz1C,KAAK01C,gBAClB11C,KAAKqF,SAjKN,MAoKEwxC,IACL72C,KAAK4qB,KAAK,0BACV5qB,KAAK+2C,8BACL/2C,KAAK82C,gCAIjBrE,EAAW9wC,UAAU00C,4BAA8B,SAAUW,GACzD,IAAIC,EAAQ9vC,EAAO+E,WAAW,IAAK8qC,GAC/BvxC,EAAO0B,EAAO+E,WAAW,IAAK8qC,GAClC,GAAa,KAATC,EACAj3C,KAAK22C,oBAAoBlxC,OAExB,CAAA,GAAa,KAATwxC,EAKL,MAAM,IAAIltC,MAAM,2BAA6BktC,GAH7Cj3C,KAAK00C,oBAAoBzvC,KAAKQ,KAMtCgtC,EAAW9wC,UAAUm1C,2BAA6B,WAC1C92C,KAAK+2C,6BAA+B,GACpC/2C,KAAK4qB,KAAK,oCACV5qB,KAAK21C,YAAa,EAClB31C,KAAK01C,eAAeK,wBACpB/1C,KAAKk3C,wBAILl3C,KAAK4qB,KAAK,8BACV5qB,KAAK01C,eAAeyB,MAAOX,EAAG,IAAKzwC,GAAKywC,EAhMzC,IAgMkDzwC,UAGzD0sC,EAAW9wC,UAAUu1C,oBAAsB,WAEvCl3C,KAAK01C,eAAe0B,QAEpBp3C,KAAK4qB,KAAK,mCACV5qB,KAAK01C,eAAeyB,MAAOX,EAAG,IAAKzwC,GAAKywC,EA1M/B,IA0M8CzwC,QAGvD/F,KAAK4qB,KAAK,kCACV5qB,KAAKi1C,MAAMkC,MAAOX,EAAG,IAAKzwC,GAAKywC,EA7MhB,IA6MqCzwC,QACpD/F,KAAKw1C,IAAMx1C,KAAK01C,eAChB11C,KAAKy2C,wBAEThE,EAAW9wC,UAAUy0C,0BAA4B,SAAUY,GAEvD,IAAIC,EAAQ9vC,EAAO+E,WAAW,IAAK8qC,GAC/BvxC,EAAO0B,EAAO+E,WAAW,IAAK8qC,GACrB,KAATC,EACAj3C,KAAKq3C,WAAW5xC,GAEF,KAATwxC,GACLj3C,KAAK0wC,eAAejrC,IAG5BgtC,EAAW9wC,UAAU+uC,eAAiB,SAAUhoC,GAC5C1I,KAAKs3C,qBAELt3C,KAAKu0C,WAAW7rC,IAEpB+pC,EAAW9wC,UAAU21C,mBAAqB,WACjCt3C,KAAK21C,aACN31C,KAAKm1C,4BACDn1C,KAAKm1C,2BAA6B,IAClCn1C,KAAK4qB,KAAK,kCACV5qB,KAAK21C,YAAa,EAClB31C,KAAKi1C,MAAMc,2BAIvBtD,EAAW9wC,UAAU01C,WAAa,SAAUT,GACxC,IAAIC,EAAM1vC,EAAO+E,WAnPN,IAmP+B0qC,GAC1C,GAnPW,MAmPSA,EAAa,CAC7B,IAAI3H,EAAU2H,EAAwB,EACtC,GA7OO,MA6OHC,EACA72C,KAAKu3C,aAAatI,QAEjB,GAlPM,MAkPF4H,EAA0B,CAC/B72C,KAAK4qB,KAAK,qCACV5qB,KAAKy1C,IAAMz1C,KAAK01C,eAChB,IAAK,IAAI/sC,EAAI,EAAGA,EAAI3I,KAAK00C,oBAAoB5xC,SAAU6F,EACnD3I,KAAK0wC,eAAe1wC,KAAK00C,oBAAoB/rC,IAEjD3I,KAAK00C,uBACL10C,KAAKy2C,2BA9PE,MAgQFI,EAGL72C,KAAKw3C,sBAAsBvI,GAlQvB,MAoQC4H,EAEL72C,KAAKy3C,SAASxI,GArQV,MAuQC4H,EACL1vC,EAAO0C,MAAM,iBAAmBolC,GAvQ7B,MAyQE4H,GACL72C,KAAK4qB,KAAK,wBACV5qB,KAAKs3C,qBACLt3C,KAAK03C,iCAGLvwC,EAAO0C,MAAM,mCAAqCgtC,KAS9DpE,EAAW9wC,UAAU41C,aAAe,SAAUI,GAC1C,IAAInuB,EAAYmuB,EAAUC,GACtBC,EAAUF,EAAUrqC,EACpB+P,EAAOs6B,EAAUG,EACrB93C,KAAKgxC,UAAY2G,EAAUpqC,EAC3BvN,KAAK+lB,UAAU4b,WAAWtkB,GAEP,GAAfrd,KAAK20C,SACL30C,KAAKi1C,MAAMmC,QACXp3C,KAAK+3C,yBAAyB/3C,KAAKi1C,MAAOzrB,GACtC2X,EAAY1f,mBAAqBo2B,GACjC1wC,EAAO6C,KAAK,sCAGhBhK,KAAKg4C,qBAGbvF,EAAW9wC,UAAUq2C,iBAAmB,WACpC,IAAIjD,EAAO/0C,KAAK40C,kBAAkBqD,mBAC9BlD,GACA/0C,KAAKk4C,cAAcnD,IAG3BtC,EAAW9wC,UAAUu2C,cAAgB,SAAUnD,GAC3C,IAAIh1C,EAAQC,KACZA,KAAK01C,eAAiB,IAAIX,EAAK/0C,KAAKk1C,mBAAoBl1C,KAAK+lB,UAAW/lB,KAAKgxC,WAG7EhxC,KAAK+2C,4BACDhC,EAAmC,8BAAK,EAC5C,IAAIoD,EAAYn4C,KAAKq1C,cAAcr1C,KAAK01C,gBACpCpkB,EAAetxB,KAAKu1C,iBAAiBv1C,KAAK01C,gBAC9C11C,KAAK01C,eAAe1wC,KAAKmzC,EAAW7mB,GAEpCnqB,EAAO4I,sBAAsB,WACrBhQ,EAAM21C,iBACN31C,EAAM6qB,KAAK,gCACX7qB,EAAM21C,eAAerwC,UAE1BgG,KAAKC,MA7UM,OA+UlBmnC,EAAW9wC,UAAU81C,SAAW,SAAUp6B,GACtCrd,KAAK4qB,KAAK,qCAAuCvN,GACjDrd,KAAK+lB,UAAU4b,WAAWtkB,GAGN,IAAhBrd,KAAK20C,OACL30C,KAAKqF,SAILrF,KAAKo4C,oBACLp4C,KAAK80C,WAGbrC,EAAW9wC,UAAUo2C,yBAA2B,SAAUhD,EAAMvrB,GAC5D,IAAIzpB,EAAQC,KACZA,KAAK4qB,KAAK,oCACV5qB,KAAKi1C,MAAQF,EACb/0C,KAAK20C,OAAS,EACV30C,KAAK+wC,WACL/wC,KAAK+wC,SAASvnB,EAAWxpB,KAAKgxC,WAC9BhxC,KAAK+wC,SAAW,MAImB,IAAnC/wC,KAAKm1C,2BACLn1C,KAAK4qB,KAAK,kCACV5qB,KAAK21C,YAAa,GAGlBxuC,EAAO4I,sBAAsB,WACzBhQ,EAAM23C,iCACPrsC,KAAKC,MA5WsB,OA+WtCmnC,EAAW9wC,UAAU+1C,8BAAgC,WAE5C13C,KAAK21C,YAA8B,IAAhB31C,KAAK20C,SACzB30C,KAAK4qB,KAAK,4BACV5qB,KAAKu2C,WAAYC,EAAG,IAAKzwC,GAAKywC,EArW/B,IAqWwCzwC,UAG/C0sC,EAAW9wC,UAAUw0C,2BAA6B,WAC9C,IAAIpB,EAAO/0C,KAAK01C,eAChB11C,KAAK01C,eAAiB,KAClB11C,KAAKw1C,MAAQT,GAAQ/0C,KAAKy1C,MAAQV,GAElC/0C,KAAKqF,SASbotC,EAAW9wC,UAAUu0C,kBAAoB,SAAUD,GAC/Cj2C,KAAKi1C,MAAQ,KAGRgB,GAAiC,IAAhBj2C,KAAK20C,OASF,IAAhB30C,KAAK20C,QACV30C,KAAK4qB,KAAK,8BATV5qB,KAAK4qB,KAAK,+BAEN5qB,KAAK+lB,UAAU0b,oBACfh6B,EAAU+Z,kBAAkB/X,OAAO,QAAUzJ,KAAK+lB,UAAU1I,MAE5Drd,KAAK+lB,UAAUub,aAAethC,KAAK+lB,UAAU1I,OAMrDrd,KAAKqF,SAOTotC,EAAW9wC,UAAU61C,sBAAwB,SAAUvoC,GACnDjP,KAAK4qB,KAAK,0DACN5qB,KAAKw0C,UACLx0C,KAAKw0C,QAAQvlC,GACbjP,KAAKw0C,QAAU,MAInBx0C,KAAKumB,cAAgB,KACrBvmB,KAAKqF,SAETotC,EAAW9wC,UAAU40C,UAAY,SAAU9wC,GACvC,GAAoB,IAAhBzF,KAAK20C,OACL,KAAM,8BAGN30C,KAAKw1C,IAAI2B,KAAK1xC,IAMtBgtC,EAAW9wC,UAAU0D,MAAQ,WACL,IAAhBrF,KAAK20C,SACL30C,KAAK4qB,KAAK,gCACV5qB,KAAK20C,OAAS,EACd30C,KAAKo4C,oBACDp4C,KAAKumB,gBACLvmB,KAAKumB,gBACLvmB,KAAKumB,cAAgB,QAQjCksB,EAAW9wC,UAAUy2C,kBAAoB,WACrCp4C,KAAK4qB,KAAK,iCACN5qB,KAAKi1C,QACLj1C,KAAKi1C,MAAM5vC,QACXrF,KAAKi1C,MAAQ,MAEbj1C,KAAK01C,iBACL11C,KAAK01C,eAAerwC,QACpBrF,KAAK01C,eAAiB,MAEtB11C,KAAK61C,kBACLzE,aAAapxC,KAAK61C,iBAClB71C,KAAK61C,gBAAkB,OAGxBpD,EAzboB,qCC/B/B1rC,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAIC,EAASrB,EAAQ,KACjByiC,EAAeziC,EAAQ,KACvByf,EAAiBzf,EAAQ,KACzBuyC,EAAmBvyC,EAAQ,KAC3Bq7B,EAAcr7B,EAAQ,KACtBsB,EAAStB,EAAQ,KACjBuB,EAASvB,EAAQ,KAErBmB,EAAQqxC,8BAAgC,QACxCrxC,EAAQsxC,gCAAkC,QAC1CtxC,EAAQuxC,kCAAoC,aAC5CvxC,EAAQwxC,+BAAiC,UACzCxxC,EAAQyxC,2BAA6B,KACrCzxC,EAAQ0xC,2BAA6B,KACrC1xC,EAAQ2xC,+BAAiC,MACzC3xC,EAAQ4xC,oCAAsC,KAC9C5xC,EAAQ6xC,oCAAsC,MAC9C7xC,EAAQ8xC,qCAAuC,KAC/C9xC,EAAQ+xC,6BAA+B,IACvC/xC,EAAQgyC,sCAAwC,UAChDhyC,EAAQiyC,8CAAgD,SAuRxDjyC,EAAQkyC,sBA5PmC,WASvC,SAAAA,EAA+BzC,EAAQt5B,EAAUg8B,EAAoB9L,GACjEttC,KAAK02C,OAASA,EACd12C,KAAKod,SAAWA,EAChBpd,KAAKo5C,mBAAqBA,EAC1Bp5C,KAAKstC,cAAgBA,EACrBttC,KAAKg2C,UAAY,EACjBh2C,KAAK81C,cAAgB,EACrB91C,KAAKq5C,gBAAiB,EACtBr5C,KAAK4qB,KAAOzjB,EAAOuC,WAAWgtC,GAC9B12C,KAAK4mB,OAASrB,EAAesB,aAAaC,cAAc1J,GACxDpd,KAAKs5C,MAAQ,SAAUxX,GACnB,OAAO1kB,EAASykB,cAAcV,EAAYlf,aAAc6f,IAsOhE,OA9NAqX,EAAsBx3C,UAAUqD,KAAO,SAAUmzC,EAAW7mB,GACxD,IAAIvxB,EAAQC,KACZA,KAAKu5C,cAAgB,EACrBv5C,KAAKumB,cAAgB+K,EACrBtxB,KAAKw5C,gBAAkB,IAAInB,EAAiBoB,eAAetB,GAC3Dn4C,KAAK05C,WAAY,EACjB15C,KAAK25C,qBAAuBvuC,WAAW,WACnCrL,EAAM6qB,KAAK,gCAEX7qB,EAAM65C,YACN75C,EAAM45C,qBAAuB,MAC9BtuC,KAAKC,MA9CS,MAgDjBnE,EAAOyD,oBAAoB,WACvB,IAAI7K,EAAM25C,UAAV,CAGA35C,EAAM85C,gBAAkB,IAAIC,EAA2B,WAEnD,IAAK,IADDC,KACKn3C,EAAK,EAAGA,EAAK6F,UAAU3F,OAAQF,IACpCm3C,EAAKn3C,GAAM6F,UAAU7F,GAEzB,IAAIo3C,EAAUD,EAAK,GAAIE,EAAOF,EAAK,GAAIG,EAAOH,EAAK,GAEnD,GADAh6C,EAAMo6C,wBAAwBJ,GACzBh6C,EAAM85C,gBAOX,GALI95C,EAAM45C,uBACNvI,aAAarxC,EAAM45C,sBACnB55C,EAAM45C,qBAAuB,MAEjC55C,EAAMs5C,gBAAiB,EACnBW,GAAW/yC,EAAQqxC,8BACnBv4C,EAAM6H,GAAKqyC,EACXl6C,EAAMq6C,SAAWF,MAEhB,CAAA,GAAIF,IAAY/yC,EAAQsxC,gCAiBzB,MAAM,IAAIxuC,MAAM,kCAAoCiwC,GAfhDC,GAGAl6C,EAAM85C,gBAAgBQ,cAAe,EAGrCt6C,EAAMy5C,gBAAgBc,WAAWL,EAAM,WACnCl6C,EAAM65C,eAIV75C,EAAM65C,cAMf,WAEC,IAAK,IADDG,KACKn3C,EAAK,EAAGA,EAAK6F,UAAU3F,OAAQF,IACpCm3C,EAAKn3C,GAAM6F,UAAU7F,GAEzB,IAAI23C,EAAKR,EAAK,GAAIt0C,EAAOs0C,EAAK,GAC9Bh6C,EAAMo6C,wBAAwBJ,GAC9Bh6C,EAAMy5C,gBAAgBgB,eAAeD,EAAI90C,IAC1C,WACC1F,EAAM65C,aACP75C,EAAMu5C,OAGT,IAAImB,KACJA,EAAUxzC,EAAQqxC,+BAAiC,IACnDmC,EAAUxzC,EAAQ2xC,gCAAkCvtC,KAAKC,MAAsB,IAAhBD,KAAKwmC,UAChE9xC,EAAM85C,gBAAgBa,2BACtBD,EAAUxzC,EAAQ4xC,qCAAuC94C,EAAM85C,gBAAgBa,0BACnFD,EAAUtZ,EAAYzf,eAAiByf,EAAY1f,iBAC/C1hB,EAAMq5C,qBACNqB,EAAUtZ,EAAYxf,yBAA2B5hB,EAAMq5C,oBAEvDr5C,EAAMutC,gBACNmN,EAAUtZ,EAAYpf,oBAAsBhiB,EAAMutC,gBAEjDjmC,EAAOyD,aACY,oBAAbX,UACPA,SAASwE,OAC4C,IAArDxE,SAASwE,KAAKtE,QAAQ82B,EAAYrf,gBAClC24B,EAAUtZ,EAAYvf,eAAiBuf,EAAYtf,WAEvD,IAAI84B,EAAa56C,EAAMu5C,MAAMmB,GAC7B16C,EAAM6qB,KAAK,+BAAiC+vB,GAC5C56C,EAAM85C,gBAAgBe,OAAOD,EAAY,kBAQjDxB,EAAsBx3C,UAAUy1C,MAAQ,WACpCp3C,KAAK65C,gBAAgBgB,cAAc76C,KAAK4H,GAAI5H,KAAKo6C,UACjDp6C,KAAK86C,uBAAuB96C,KAAK4H,GAAI5H,KAAKo6C,WAK9CjB,EAAsB4B,WAAa,WAC/B5B,EAAsB6B,aAAc,GAKxC7B,EAAsB8B,cAAgB,WAClC9B,EAAsB+B,gBAAiB,GAG3C/B,EAAsBgC,YAAc,WAGhC,OAAQhC,EAAsB6B,cACxB7B,EAAsB+B,gBACA,oBAAbnwC,UACmB,MAA1BA,SAASqwC,gBACRj0C,EAAOsH,mCACPtH,EAAOyH,sBACPvH,EAAOyD,aAKpBquC,EAAsBx3C,UAAUo0C,sBAAwB,aAKxDoD,EAAsBx3C,UAAU05C,UAAY,WACxCr7C,KAAK05C,WAAY,EACb15C,KAAK65C,kBACL75C,KAAK65C,gBAAgBx0C,QACrBrF,KAAK65C,gBAAkB,MAGvB75C,KAAKs7C,iBACLvwC,SAASI,KAAKowC,YAAYv7C,KAAKs7C,gBAC/Bt7C,KAAKs7C,eAAiB,MAEtBt7C,KAAK25C,uBACLvI,aAAapxC,KAAK25C,sBAClB35C,KAAK25C,qBAAuB,OAOpCR,EAAsBx3C,UAAUi4C,UAAY,WACnC55C,KAAK05C,YACN15C,KAAK4qB,KAAK,8BACV5qB,KAAKq7C,YACDr7C,KAAKumB,gBACLvmB,KAAKumB,cAAcvmB,KAAKq5C,gBACxBr5C,KAAKumB,cAAgB,QAQjC4yB,EAAsBx3C,UAAU0D,MAAQ,WAC/BrF,KAAK05C,YACN15C,KAAK4qB,KAAK,6BACV5qB,KAAKq7C,cAQblC,EAAsBx3C,UAAUw1C,KAAO,SAAU1xC,GAC7C,IAAI+1C,EAAUp0C,EAAO2B,UAAUtD,GAC/BzF,KAAKg2C,WAAawF,EAAQ14C,OAC1B9C,KAAK4mB,OAAOmH,iBAAiB,aAAcytB,EAAQ14C,QAQnD,IAAK,IAND24C,EAAar0C,EAAOs0C,aAAaF,GAGjC5uC,EAAWzF,EAAOsF,kBAAkBgvC,EAzOzBE,MA4ONhzC,EAAI,EAAGA,EAAIiE,EAAS9J,OAAQ6F,IACjC3I,KAAK65C,gBAAgB+B,eAAe57C,KAAKu5C,cAAe3sC,EAAS9J,OAAQ8J,EAASjE,IAClF3I,KAAKu5C,iBAUbJ,EAAsBx3C,UAAUm5C,uBAAyB,SAAUlzC,EAAIi0C,GACnE,IAAIx0C,EAAOyD,YAAX,CAEA9K,KAAKs7C,eAAiBvwC,SAASqwC,cAAc,UAC7C,IAAIX,KACJA,EAAUxzC,EAAQiyC,+CAAiD,IACnEuB,EAAUxzC,EAAQyxC,4BAA8B9wC,EAChD6yC,EAAUxzC,EAAQ0xC,4BAA8BkD,EAChD77C,KAAKs7C,eAAeQ,IAAM97C,KAAKs5C,MAAMmB,GACrCz6C,KAAKs7C,eAAeS,MAAMC,QAAU,OACpCjxC,SAASI,KAAK8wC,YAAYj8C,KAAKs7C,kBAOnCnC,EAAsBx3C,UAAUw4C,wBAA0B,SAAUJ,GAEhE,IAAIjE,EAAgB1uC,EAAO2B,UAAUgxC,GAAMj3C,OAC3C9C,KAAK81C,eAAiBA,EACtB91C,KAAK4mB,OAAOmH,iBAAiB,iBAAkB+nB,IAE5CqD,EA1P+B,GAiQ1C,IAAIW,EAA4C,WAO5C,SAAAA,EAAoCoC,EAAWC,EAAa7qB,EAAcgoB,GAoBtE,GAnBAt5C,KAAKsxB,aAAeA,EACpBtxB,KAAKs5C,MAAQA,EAMbt5C,KAAKo8C,oBAAsB,IAAI7T,EAAaC,WAE5CxoC,KAAKq8C,eAMLr8C,KAAKs8C,cAAgBjxC,KAAKC,MAAsB,IAAhBD,KAAKwmC,UAGrC7xC,KAAKq6C,cAAe,EACfhzC,EAAOyD,YAkCR9K,KAAKk8C,UAAYA,EACjBl8C,KAAKm8C,YAAcA,MAnCE,CAKrBn8C,KAAK06C,yBAA2BvzC,EAAOQ,gBACvCuC,OAAOjD,EAAQuxC,kCAAoCx4C,KAAK06C,0BAA4BwB,EACpFhyC,OAAOjD,EAAQwxC,+BAAiCz4C,KAAK06C,0BAA4ByB,EAEjFn8C,KAAKu8C,SAAWzC,EAA2B0C,gBAE3C,IAAIC,EAAS,GAGb,GAAIz8C,KAAKu8C,SAAST,KACwC,gBAAtD97C,KAAKu8C,SAAST,IAAIxtC,OAAO,EAAG,cAAcxL,QAA2B,CAErE25C,EAAS,4BADW1xC,SAASi1B,OAC0B,eAE3D,IAAI0c,EAAiB,eAAiBD,EAAS,iBAC/C,IACIz8C,KAAKu8C,SAASI,IAAI33C,OAClBhF,KAAKu8C,SAASI,IAAIC,MAAMF,GACxB18C,KAAKu8C,SAASI,IAAIt3C,QAEtB,MAAOmI,GACHrG,EAAO/B,IAAI,2BACPoI,EAAEgC,OACFrI,EAAO/B,IAAIoI,EAAEgC,OAEjBrI,EAAO/B,IAAIoI,KAsPvB,OAxOAssC,EAA2B0C,cAAgB,WACvC,IAAIK,EAAS9xC,SAASqwC,cAAc,UAGpC,GAFAyB,EAAOd,MAAMC,QAAU,QAEnBjxC,SAASI,KAuBT,KAAM,oGAtBNJ,SAASI,KAAK8wC,YAAYY,GAC1B,IAIYA,EAAOC,cAAc/xC,UAGzB5D,EAAO/B,IAAI,iCAGnB,MAAOoI,GACH,IAAIwyB,EAASj1B,SAASi1B,OACtB6c,EAAOf,IACH,gEACI9b,EACA,2BAkBhB,OATI6c,EAAOE,gBACPF,EAAOF,IAAME,EAAOE,gBAEfF,EAAOC,cACZD,EAAOF,IAAME,EAAOC,cAAc/xC,SAE7B8xC,EAAO9xC,WACZ8xC,EAAOF,IAAME,EAAO9xC,UAEjB8xC,GAKX/C,EAA2Bn4C,UAAU0D,MAAQ,WACzC,IAAItF,EAAQC,KAeZ,GAbAA,KAAKg9C,OAAQ,EACTh9C,KAAKu8C,WAILv8C,KAAKu8C,SAASI,IAAIxxC,KAAK8xC,UAAY,GACnC7xC,WAAW,WACgB,OAAnBrL,EAAMw8C,WACNxxC,SAASI,KAAKowC,YAAYx7C,EAAMw8C,UAChCx8C,EAAMw8C,SAAW,OAEtBlxC,KAAKC,MAAM,KAEdjE,EAAOyD,aAAe9K,KAAKk9C,KAAM,CACjC,IAAIzC,KACJA,EAAUxzC,EAAQgyC,uCAAyC,IAC3DwB,EAAUxzC,EAAQyxC,4BAA8B14C,KAAKk9C,KACrDzC,EAAUxzC,EAAQ0xC,4BAA8B34C,KAAKm9C,KACrD,IAAIC,EAASp9C,KAAKs5C,MAAMmB,GACxBX,EAA2BuD,gBAAgBD,GAG/C,IAAI9rB,EAAetxB,KAAKsxB,aACpBA,IACAtxB,KAAKsxB,aAAe,KACpBA,MAQRwoB,EAA2Bn4C,UAAUk5C,cAAgB,SAAUjzC,EAAIi0C,GAK/D,IAJA77C,KAAKk9C,KAAOt1C,EACZ5H,KAAKm9C,KAAOtB,EACZ77C,KAAKg9C,OAAQ,EAENh9C,KAAKs9C,kBAShBxD,EAA2Bn4C,UAAU27C,YAAc,WAI/C,GAAIt9C,KAAKg9C,OACLh9C,KAAKq6C,cACLr6C,KAAKo8C,oBAAoBzkC,SAAW3X,KAAKq8C,YAAYv5C,OAAS,EAAI,EAAI,GAAI,CAE1E9C,KAAKs8C,gBACL,IAAI7B,KACJA,EAAUxzC,EAAQyxC,4BAA8B14C,KAAKk9C,KACrDzC,EAAUxzC,EAAQ0xC,4BAA8B34C,KAAKm9C,KACrD1C,EAAUxzC,EAAQ2xC,gCAAkC54C,KAAKs8C,cAKzD,IAJA,IAAIc,EAASp9C,KAAKs5C,MAAMmB,GAEpB8C,EAAgB,GAChB50C,EAAI,EACD3I,KAAKq8C,YAAYv5C,OAAS,GAAG,CAGhC,KADc9C,KAAKq8C,YAAY,GACnBt2C,EAAEjD,OAhdR,GAgdmCy6C,EAAcz6C,QAjd/C,MAyeJ,MArBA,IAAI06C,EAASx9C,KAAKq8C,YAAYlJ,QAC9BoK,EACIA,EACI,IACAt2C,EAAQ6xC,oCACRnwC,EACA,IACA60C,EAAOC,IACP,IACAx2C,EAAQ8xC,qCACRpwC,EACA,IACA60C,EAAO5F,GACP,IACA3wC,EAAQ+xC,6BACRrwC,EACA,IACA60C,EAAOz3C,EACf4C,IAQR,OAFAy0C,GAAkBG,EAClBv9C,KAAK09C,gBAAgBN,EAAQp9C,KAAKs8C,gBAC3B,EAGP,OAAO,GASfxC,EAA2Bn4C,UAAUi6C,eAAiB,SAAU+B,EAAQC,EAAWn4C,GAE/EzF,KAAKq8C,YAAYp3C,MAAOw4C,IAAKE,EAAQ/F,GAAIgG,EAAW73C,EAAGN,IAGnDzF,KAAKg9C,OACLh9C,KAAKs9C,eASbxD,EAA2Bn4C,UAAU+7C,gBAAkB,SAAU75C,EAAKg6C,GAClE,IAAI99C,EAAQC,KAEZA,KAAKo8C,oBAAoB3T,IAAIoV,EAAQ,GACrC,IAAIC,EAAe,WACf/9C,EAAMq8C,oBAAoB3yC,OAAOo0C,GACjC99C,EAAMu9C,eAINS,EAAmB3yC,WAAW0yC,EAAczyC,KAAKC,MAzgB5B,OAghBzBtL,KAAK46C,OAAO/2C,EANO,WAEfutC,aAAa2M,GAEbD,OASRhE,EAA2Bn4C,UAAUi5C,OAAS,SAAU/2C,EAAKm6C,GACzD,IAAIj+C,EAAQC,KACRqH,EAAOyD,YACP9K,KAAKi+C,eAAep6C,EAAKm6C,GAGzB5yC,WAAW,WACP,IAEI,IAAKrL,EAAMs6C,aACP,OACJ,IAAI6D,EAAcn+C,EAAMw8C,SAASI,IAAIvB,cAAc,UACnD8C,EAAYt/B,KAAO,kBACnBs/B,EAAY5nB,OAAQ,EACpB4nB,EAAYpC,IAAMj4C,EAClBq6C,EAAYC,OAASD,EAAYE,mBAAqB,WAClD,IAAIC,EAASH,EAAYlzC,WACpBqzC,GAAqB,WAAXA,GAAkC,aAAXA,IAClCH,EAAYC,OAASD,EAAYE,mBAAqB,KAClDF,EAAYI,YACZJ,EAAYI,WAAW/C,YAAY2C,GAEvCF,MAGRE,EAAYK,QAAU,WAClBp3C,EAAO/B,IAAI,oCAAsCvB,GACjD9D,EAAMs6C,cAAe,EACrBt6C,EAAMsF,SAEVtF,EAAMw8C,SAASI,IAAIxxC,KAAK8wC,YAAYiC,GAExC,MAAO1wC,MAGRnC,KAAKC,MAAM,KAGfwuC,EA/SoC,GAiT/C7yC,EAAQ6yC,2BAA6BA,iDClmBrC/yC,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAIklC,EAAQtmC,EAAQ,IAChBqB,EAASrB,EAAQ,KACjBsB,EAAStB,EAAQ,KACjByf,EAAiBzf,EAAQ,KACzBq7B,EAAcr7B,EAAQ,KACtBuB,EAASvB,EAAQ,KACjB2B,EAAY3B,EAAQ,KACpBwB,EAASxB,EAAQ,KACjByB,EAASzB,EAAQ,KAGjB04C,EAAgB,KACQ,oBAAjBC,aACPD,EAAgBC,aAEU,oBAAdC,YACZF,EAAgBE,WAKpBz3C,EAAQ03C,iBAHR,SAA0BC,GACtBJ,EAAgBI,GAwTpB33C,EAAQ43C,oBAhTiC,WAQrC,SAAAA,EAA6BnI,EAAQt5B,EAAUg8B,EAAoB9L,GAC/DttC,KAAK02C,OAASA,EACd12C,KAAK8+C,eAAiB,KACtB9+C,KAAK++C,OAAS,KACd/+C,KAAKg/C,YAAc,EACnBh/C,KAAKg2C,UAAY,EACjBh2C,KAAK81C,cAAgB,EACrB91C,KAAK4qB,KAAOxjB,EAAOsC,WAAW1J,KAAK02C,QACnC12C,KAAK4mB,OAASrB,EAAesB,aAAaC,cAAc1J,GACxDpd,KAAK+hC,QAAU8c,EAAoBI,eAAe7hC,EAAUg8B,EAAoB9L,GA6RpF,OAnRAuR,EAAoBI,eAAiB,SAAU7hC,EAAUg8B,EAAoB9L,GACzE,IAAImN,KAcJ,OAbAA,EAAUtZ,EAAYzf,eAAiByf,EAAY1f,kBAC9Cla,EAAOuD,aACY,oBAAbX,UACPA,SAASwE,OAC4C,IAArDxE,SAASwE,KAAKtE,QAAQ82B,EAAYrf,gBAClC24B,EAAUtZ,EAAYvf,eAAiBuf,EAAYtf,WAEnDu3B,IACAqB,EAAUtZ,EAAYxf,yBAA2By3B,GAEjD9L,IACAmN,EAAUtZ,EAAYpf,oBAAsBurB,GAEzClwB,EAASykB,cAAcV,EAAYnf,UAAWy4B,IAOzDoE,EAAoBl9C,UAAUqD,KAAO,SAAUmzC,EAAW7mB,GACtD,IAAIvxB,EAAQC,KACZA,KAAKsxB,aAAeA,EACpBtxB,KAAKm4C,UAAYA,EACjBn4C,KAAK4qB,KAAK,2BAA6B5qB,KAAK+hC,SAC5C/hC,KAAKq5C,gBAAiB,EAEtB5xC,EAAU+Z,kBAAkBhY,IAAI,8BAA8B,GAC9D,IACI,GAAIjC,EAAOuD,YAAa,CACpB,IAEIsc,GACA83B,SACIC,aAAc,YAAche,EAAY1f,iBAAmB,IAAM2qB,EAAMkH,QAAQC,YAAc,IAAM6L,EAAQnhD,SAAW,KAJjHoJ,EAAOqrC,UAAUC,WAAa,YAAc,UAQrD0M,EAAMD,EAAa,IACnBE,EAA0C,GAAlCt/C,KAAK+hC,QAAQ13B,QAAQ,UAC3Bg1C,EAAiB,aAAKA,EAAiB,YACvCA,EAAgB,YAAKA,EAAgB,WACvCC,IACAl4B,EAAe,OAAMnjB,OAAQq7C,IAEjCt/C,KAAKu/C,OAAS,IAAIf,EAAcx+C,KAAK+hC,WAAa3a,QAGlDpnB,KAAKu/C,OAAS,IAAIf,EAAcx+C,KAAK+hC,SAG7C,MAAOv0B,GACHxN,KAAK4qB,KAAK,kCACV,IAAI/gB,EAAQ2D,EAAE9E,SAAW8E,EAAE/H,KAK3B,OAJIoE,GACA7J,KAAK4qB,KAAK/gB,QAEd7J,KAAK45C,YAGT55C,KAAKu/C,OAAOC,OAAS,WACjBz/C,EAAM6qB,KAAK,wBACX7qB,EAAMs5C,gBAAiB,GAE3Br5C,KAAKu/C,OAAOE,QAAU,WAClB1/C,EAAM6qB,KAAK,0CACX7qB,EAAMw/C,OAAS,KACfx/C,EAAM65C,aAEV55C,KAAKu/C,OAAOG,UAAY,SAAUC,GAC9B5/C,EAAM6/C,oBAAoBD,IAE9B3/C,KAAKu/C,OAAOhB,QAAU,SAAU/wC,GAC5BzN,EAAM6qB,KAAK,yCACX,IAAI/gB,EAAQ2D,EAAE9E,SAAW8E,EAAE/H,KACvBoE,GACA9J,EAAM6qB,KAAK/gB,GAEf9J,EAAM65C,cAMdiF,EAAoBl9C,UAAUy1C,MAAQ,aACtCyH,EAAoB5D,cAAgB,WAChC4D,EAAoB3D,gBAAiB,GAEzC2D,EAAoB1D,YAAc,WAC9B,IAAI0E,GAAe,EACnB,GAAyB,oBAAdC,WAA6BA,UAAUC,UAAW,CACzD,IAAIC,EAAkB,iCAClBC,EAAkBH,UAAUC,UAAUG,MAAMF,GAC5CC,GAAmBA,EAAgBn9C,OAAS,GACxCq9C,WAAWF,EAAgB,IAAM,MACjCJ,GAAe,GAI3B,OAASA,GACa,OAAlBrB,IACCK,EAAoB3D,gBAM7B2D,EAAoBuB,iBAAmB,WAGnC,OAAQ34C,EAAU+Z,kBAAkB6+B,oBACkC,IAAlE54C,EAAU+Z,kBAAkBtgB,IAAI,+BAExC29C,EAAoBl9C,UAAUo0C,sBAAwB,WAClDtuC,EAAU+Z,kBAAkB/X,OAAO,+BAEvCo1C,EAAoBl9C,UAAU2+C,aAAe,SAAU76C,GAEnD,GADAzF,KAAK++C,OAAO95C,KAAKQ,GACbzF,KAAK++C,OAAOj8C,QAAU9C,KAAKg/C,YAAa,CACxC,IAAIuB,EAAWvgD,KAAK++C,OAAO5wC,KAAK,IAChCnO,KAAK++C,OAAS,KACd,IAAIyB,EAAWl5C,EAAOm5C,SAASF,GAE/BvgD,KAAKm4C,UAAUqI,KAOvB3B,EAAoBl9C,UAAU++C,qBAAuB,SAAUC,GAC3D3gD,KAAKg/C,YAAc2B,EACnB3gD,KAAK++C,WAQTF,EAAoBl9C,UAAUi/C,mBAAqB,SAAUn7C,GAIzD,GAHA0B,EAAOkC,OAAuB,OAAhBrJ,KAAK++C,OAAiB,kCAGhCt5C,EAAK3C,QAAU,EAAG,CAClB,IAAI69C,EAAal2C,OAAOhF,GACxB,IAAKo7C,MAAMF,GAEP,OADA3gD,KAAK0gD,qBAAqBC,GACnB,KAIf,OADA3gD,KAAK0gD,qBAAqB,GACnBj7C,GAMXo5C,EAAoBl9C,UAAUi+C,oBAAsB,SAAUkB,GAC1D,GAAoB,OAAhB9gD,KAAKu/C,OAAT,CAEA,IAAI95C,EAAOq7C,EAAW,KAItB,GAHA9gD,KAAK81C,eAAiBrwC,EAAK3C,OAC3B9C,KAAK4mB,OAAOmH,iBAAiB,iBAAkBtoB,EAAK3C,QACpD9C,KAAK+gD,iBACe,OAAhB/gD,KAAK++C,OAEL/+C,KAAKsgD,aAAa76C,OAEjB,CAED,IAAIu7C,EAAgBhhD,KAAK4gD,mBAAmBn7C,GACtB,OAAlBu7C,GACAhhD,KAAKsgD,aAAaU,MAQ9BnC,EAAoBl9C,UAAUw1C,KAAO,SAAU1xC,GAC3CzF,KAAK+gD,iBACL,IAAIvF,EAAUl0C,EAAOyB,UAAUtD,GAC/BzF,KAAKg2C,WAAawF,EAAQ14C,OAC1B9C,KAAK4mB,OAAOmH,iBAAiB,aAAcytB,EAAQ14C,QAGnD,IAAI8J,EAAWxF,EAAOqF,kBAAkB+uC,EA3OjB,OA6OnB5uC,EAAS9J,OAAS,GAClB9C,KAAKihD,YAAY/vC,OAAOtE,EAAS9J,SAGrC,IAAK,IAAI6F,EAAI,EAAGA,EAAIiE,EAAS9J,OAAQ6F,IACjC3I,KAAKihD,YAAYr0C,EAASjE,KAGlCk2C,EAAoBl9C,UAAU05C,UAAY,WACtCr7C,KAAK05C,WAAY,EACb15C,KAAK8+C,iBACLoC,cAAclhD,KAAK8+C,gBACnB9+C,KAAK8+C,eAAiB,MAEtB9+C,KAAKu/C,SACLv/C,KAAKu/C,OAAOl6C,QACZrF,KAAKu/C,OAAS,OAGtBV,EAAoBl9C,UAAUi4C,UAAY,WACjC55C,KAAK05C,YACN15C,KAAK4qB,KAAK,+BACV5qB,KAAKq7C,YAEDr7C,KAAKsxB,eACLtxB,KAAKsxB,aAAatxB,KAAKq5C,gBACvBr5C,KAAKsxB,aAAe,QAQhCutB,EAAoBl9C,UAAU0D,MAAQ,WAC7BrF,KAAK05C,YACN15C,KAAK4qB,KAAK,6BACV5qB,KAAKq7C,cAObwD,EAAoBl9C,UAAUo/C,eAAiB,WAC3C,IAAIhhD,EAAQC,KACZkhD,cAAclhD,KAAK8+C,gBACnB9+C,KAAK8+C,eAAiBqC,YAAY,WAE1BphD,EAAMw/C,QACNx/C,EAAMkhD,YAAY,KAEtBlhD,EAAMghD,kBACP11C,KAAKC,MAjSmB,QAyS/BuzC,EAAoBl9C,UAAUs/C,YAAc,SAAUn5C,GAIlD,IACI9H,KAAKu/C,OAAOpI,KAAKrvC,GAErB,MAAO0F,GACHxN,KAAK4qB,KAAK,0CAA2Cpd,EAAE9E,SAAW8E,EAAE/H,KAAM,uBAC1E2F,WAAWpL,KAAK45C,UAAUtwC,KAAKtJ,MAAO,KAO9C6+C,EAAoBuC,6BAA+B,EAKnDvC,EAAoBwC,eAAiB,IAC9BxC,EA9S6B,sDC5BxC93C,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IAoDtDD,EAAQ0sC,cA7C2B,WAC/B,SAAAA,KA0CA,OAlCAA,EAAchyC,UAAUwpB,IAAM,SAAUpa,EAAYtL,EAAM4iB,EAAYlQ,KAOtEw7B,EAAchyC,UAAUqqB,MAAQ,SAAUjb,EAAYtL,EAAM4iB,EAAYlQ,KAKxEw7B,EAAchyC,UAAU8lB,iBAAmB,SAAUD,KAMrDmsB,EAAchyC,UAAU6qB,gBAAkB,SAAUzb,EAAYtL,EAAM4iB,KAMtEsrB,EAAchyC,UAAUirB,kBAAoB,SAAU7b,EAAYtL,EAAM4iB,KAKxEsrB,EAAchyC,UAAU0qB,mBAAqB,SAAUtb,EAAYsX,KAInEsrB,EAAchyC,UAAU8uC,YAAc,SAAUpjB,KACzCsmB,EA3CuB,qCCPlC5sC,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAIo6C,EAAkBx7C,EAAQ,KAC1B2P,EAAkB3P,EAAQ,KAC1B4N,EAAS5N,EAAQ,KACjBka,EAAiBla,EAAQ,KAwH7BmB,EAAQs6C,aAjH0B,WAI9B,SAAAA,EAAsBzf,GAClB9hC,KAAKwhD,eAAiB,IAAIF,EAAgBhtB,cAAcwN,EAAO/M,YAC/D/0B,KAAK6xB,OAASiQ,EAAO/M,WACrB/0B,KAAKyhD,WAAaF,EAAaG,cAAc5f,GAC7C9hC,KAAK2hD,SAAWJ,EAAaK,YAAY9f,GAuG7C,OAlGAyf,EAAa5/C,UAAUkgD,aAAe,WAClC,OAAO7hD,KAAKyhD,YAKhBF,EAAa5/C,UAAUmgD,WAAa,WAChC,OAAO9hD,KAAK2hD,UAMhBJ,EAAa5/C,UAAUogD,QAAU,SAAU5tC,GACvC,OAAQnU,KAAK6xB,OAAO5d,QAAQjU,KAAK6hD,eAAgB1tC,IAAS,GACtDnU,KAAK6xB,OAAO5d,QAAQE,EAAMnU,KAAK8hD,eAAiB,GAKxDP,EAAa5/C,UAAU6V,YAAc,SAAUyS,EAAM9d,EAAKinB,EAAUlJ,EAAcqK,EAAQC,GAItF,OAHKx0B,KAAK+hD,QAAQ,IAAIruC,EAAOmB,UAAU1I,EAAKinB,MACxCA,EAAWpT,EAAenK,aAAaP,YAEpCtV,KAAKwhD,eAAehqC,YAAYyS,EAAM9d,EAAKinB,EAAUlJ,EAAcqK,EAAQC,IAKtF+sB,EAAa5/C,UAAUgzB,eAAiB,SAAU7V,EAAS8V,EAASJ,GAC5DI,EAAQre,eAERqe,EAAU5U,EAAenK,aAAaP,YAE1C,IAAIm2B,EAAW7W,EAAQ3a,UAAUja,KAAK6xB,QAEtC4Z,EAAWA,EAASj1B,eAAewJ,EAAenK,aAAaP,YAC/D,IAAI0sC,EAAOhiD,KAMX,OALA40B,EAAQ5c,aAAavC,EAAgBJ,eAAgB,SAAUlJ,EAAK8L,GAC3D+pC,EAAKD,QAAQ,IAAIruC,EAAOmB,UAAU1I,EAAK8L,MACxCwzB,EAAWA,EAAS10B,qBAAqB5K,EAAK6T,EAAenK,aAAaP,eAG3EtV,KAAKwhD,eAAe7sB,eAAe7V,EAAS2sB,EAAUjX,IAKjE+sB,EAAa5/C,UAAU6U,eAAiB,SAAUsI,EAAS1H,GAEvD,OAAO0H,GAKXyiC,EAAa5/C,UAAUkzB,aAAe,WAClC,OAAO,GAKX0sB,EAAa5/C,UAAUmzB,iBAAmB,WACtC,OAAO90B,KAAKwhD,gBAKhBD,EAAa5/C,UAAUozB,SAAW,WAC9B,OAAO/0B,KAAK6xB,QAOhB0vB,EAAaG,cAAgB,SAAU5f,GACnC,GAAIA,EAAOY,WAAY,CACnB,IAAIuf,EAAYngB,EAAOkB,oBACvB,OAAOlB,EAAO/M,WAAW9f,SAAS6sB,EAAOa,qBAAsBsf,GAG/D,OAAOngB,EAAO/M,WAAWngB,WAQjC2sC,EAAaK,YAAc,SAAU9f,GACjC,GAAIA,EAAOc,SAAU,CACjB,IAAIsf,EAAUpgB,EAAOmB,kBACrB,OAAOnB,EAAO/M,WAAW9f,SAAS6sB,EAAOe,mBAAoBqf,GAG7D,OAAOpgB,EAAO/M,WAAWhgB,WAG1BwsC,EA/GsB,qCCKjC,SAAAY,EAAAC,GAEA,IAAA9kC,EAAA8kC,EAAArjB,SAAAsjB,gBAAA,WAAA,SAAAlkD,EAAAmkD,EAAAz+C,GAA+F,OAAAg7B,EAAArJ,YAAAG,cAAAG,gBAAA33B,EAAA0F,KAG/FsrB,UAAAyP,EAAAzP,UACAqC,MAAA1C,EAAA0C,MACAtD,SAAArI,EAAAqI,SACAhlB,cAAA/B,EAAA+B,cACA61B,SAAAA,EACAO,YAAAA,EACAijB,YAAAA,GACK,MAAA,GACLn7C,EAAA0D,cACA4T,EAAAzX,QAAAqW,GA9BAvW,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAklC,EAAAtmC,EAAA,IACA+f,EAAA/f,EAAA,KACAmB,EAAAinB,SAAArI,EAAAqI,SACA,IAAAY,EAAAhpB,EAAA,KACAmB,EAAAuqB,MAAA1C,EAAA0C,MACA,IAAAoN,EAAA94B,EAAA,KACAmB,EAAAkoB,UAAAyP,EAAAzP,UACA,IAAAhoB,EAAArB,EAAA,KACAmB,EAAAiC,cAAA/B,EAAA+B,cACA,IAAA21B,EAAA/4B,EAAA,KACAi5B,EAAAj5B,EAAA,KACAy8C,EAAAz8C,EAAA,KACAsB,EAAAtB,EAAA,KACAw5B,EAAAzZ,EAAAqI,SAAAoR,YACAr4B,EAAAq4B,YAAAA,EAkBAr4B,EAAAk7C,iBAAAA,EACAA,EAAA/V,EAAAkH,SACA,IAAAkP,EAAA18C,EAAA,KACAmB,EAAA0qB,aAAA6wB,EAAA7wB,aACA,IAAAhD,EAAA7oB,EAAA,KACAmB,EAAAsqB,aAAA5C,EAAA4C,+CCtCAxqB,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAIC,EAASrB,EAAQ,KA+DrBmB,EAAQqa,kBApD+B,WAInC,SAAAA,EAA2BmhC,GACvBziD,KAAKyiD,YAAcA,EAEnBziD,KAAK0iD,QAAU,YA2CnB,OArCAphC,EAAkB3f,UAAU6H,IAAM,SAAU2C,EAAKjF,GAChC,MAATA,EACAlH,KAAKyiD,YAAYphC,WAAWrhB,KAAK2iD,cAAcx2C,IAG/CnM,KAAKyiD,YAAYrhC,QAAQphB,KAAK2iD,cAAcx2C,GAAMhF,EAAO4B,UAAU7B,KAO3Eoa,EAAkB3f,UAAUT,IAAM,SAAUiL,GACxC,IAAIy2C,EAAY5iD,KAAKyiD,YAAYI,QAAQ7iD,KAAK2iD,cAAcx2C,IAC5D,OAAiB,MAAby2C,EACO,KAGAz7C,EAAOs5C,SAASmC,IAM/BthC,EAAkB3f,UAAU8H,OAAS,SAAU0C,GAC3CnM,KAAKyiD,YAAYphC,WAAWrhB,KAAK2iD,cAAcx2C,KAMnDmV,EAAkB3f,UAAUghD,cAAgB,SAAUn/C,GAClD,OAAOxD,KAAK0iD,QAAUl/C,GAE1B8d,EAAkB3f,UAAU4M,SAAW,WACnC,OAAOvO,KAAKyiD,YAAYl0C,YAErB+S,EAlD2B,qCCZtCva,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAIC,EAASrB,EAAQ,KA+BrBmB,EAAQsa,cAxB2B,WAC/B,SAAAA,IACIvhB,KAAK8iD,UACL9iD,KAAKqgD,mBAAoB,EAmB7B,OAjBA9+B,EAAc5f,UAAU6H,IAAM,SAAU2C,EAAKjF,GAC5B,MAATA,SACOlH,KAAK8iD,OAAO32C,GAGnBnM,KAAK8iD,OAAO32C,GAAOjF,GAG3Bqa,EAAc5f,UAAUT,IAAM,SAAUiL,GACpC,OAAIhF,EAAOsL,SAASzS,KAAK8iD,OAAQ32C,GACtBnM,KAAK8iD,OAAO32C,GAEhB,MAEXoV,EAAc5f,UAAU8H,OAAS,SAAU0C,UAChCnM,KAAK8iD,OAAO32C,IAEhBoV,EAtBuB,qCCRlCxa,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAIC,EAASrB,EAAQ,KAqBrBmB,EAAQ6pB,kBApB+B,WAQnC,SAAAA,EAA2BH,EAAW1R,GAClCjf,KAAK2wB,UAAYA,EACjB3wB,KAAKif,SAAWA,EAQpB,OAJA6R,EAAkBnvB,UAAUowB,OAAS,WAEjC,OADA5qB,EAAOqoB,iBAAiB,2BAA4B,EAAG,EAAG/mB,UAAU3F,SAC3D6tB,UAAW3wB,KAAK2wB,UAAW1R,SAAUjf,KAAKif,SAAS8S,WAEzDjB,EAlB2B,qCCFtC/pB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAArB,EAAA,KAeAmB,EAAAgqB,WAAA,WAEA,IAAA8xB,EAAA,mEAGAC,EAAA,EAKAC,KACA,OAAA,SAAAjyB,GACA,IAAAkyB,EAAAlyB,IAAAgyB,EACAA,EAAAhyB,EACA,IAAAroB,EACAw6C,EAAA,IAAAv6C,MAAA,GACA,IAAAD,EAAA,EAAmBA,GAAA,EAAQA,IAC3Bw6C,EAAAx6C,GAAAo6C,EAAAK,OAAApyB,EAAA,IAGAA,EAAA3lB,KAAAC,MAAA0lB,EAAA,IAEA7pB,EAAAkC,OAAA,IAAA2nB,EAAA,4BACA,IAAAppB,EAAAu7C,EAAAh1C,KAAA,IACA,GAAA+0C,EAKA,CAGA,IAAAv6C,EAAA,GAAwBA,GAAA,GAAA,KAAAs6C,EAAAt6C,GAAmCA,IAC3Ds6C,EAAAt6C,GAAA,EAEAs6C,EAAAt6C,UAVA,IAAAA,EAAA,EAAuBA,EAAA,GAAQA,IAC/Bs6C,EAAAt6C,GAAA0C,KAAAC,MAAA,GAAAD,KAAAwmC,UAWA,IAAAlpC,EAAA,EAAmBA,EAAA,GAAQA,IAC3Bf,GAAAm7C,EAAAK,OAAAH,EAAAt6C,IAGA,OADAxB,EAAAkC,OAAA,KAAAzB,EAAA9E,OAAA,oCACA8E,GAzCA,qCChBAb,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAIs7C,EAAiB18C,EAAQ,KACzBu9C,EAAUv9C,EAAQ,KAClBqB,EAASrB,EAAQ,KACjBsB,EAAStB,EAAQ,KAkFrBmB,EAAQg9B,uBA9EoC,WAMxC,SAAAA,EAAgCqf,EAAWC,EAAiBC,GACxDxjD,KAAKsjD,UAAYA,EACjBtjD,KAAKujD,gBAAkBA,EACvBvjD,KAAKwjD,SAAWA,EAmEpB,OA9DAvf,EAAuBtiC,UAAU8hD,WAAa,SAAU5mC,GACpD,MAAqB,UAAdA,GAKXonB,EAAuBtiC,UAAU+hD,YAAc,SAAUC,EAAQviD,GAC7D,IAAIoX,EAAQpX,EAAMoiC,iBAAiBzO,WACnC,OAAO,IAAIsuB,EAAQO,UAAU,QAAS5jD,KAAM,IAAIwiD,EAAe7wB,aAAagyB,EAAO9kC,aAAczd,EAAMixB,SAAU7Z,KAKrHyrB,EAAuBtiC,UAAUkiD,eAAiB,SAAU3P,GACxD,IAAI4P,EAAM9jD,KAAKwjD,SACf,GAAiC,WAA7BtP,EAAU6P,eAA6B,CACvC38C,EAAOiC,OAAOrJ,KAAKujD,gBAAiB,gEACpC,IAAIS,EAAahkD,KAAKujD,gBACtB,OAAO,WAEHS,EAAWppC,KAAKkpC,EAAK5P,EAAUrqC,QAInC,IAAIo6C,EAAOjkD,KAAKsjD,UAChB,OAAO,WACHW,EAAKrpC,KAAKkpC,EAAK5P,EAAUj1B,YAOrCglB,EAAuBtiC,UAAUuiD,kBAAoB,SAAUr6C,EAAOqF,GAClE,OAAIlP,KAAKujD,gBACE,IAAIF,EAAQc,YAAYnkD,KAAM6J,EAAOqF,GAGrC,MAMf+0B,EAAuBtiC,UAAUogD,QAAU,SAAUxvC,GACjD,OAAMA,aAAiB0xB,KAGb1xB,EAAM+wC,YAActjD,KAAKsjD,WAKvB/wC,EAAM+wC,YAActjD,KAAKsjD,WAAa/wC,EAAMixC,WAAaxjD,KAAKwjD,WAM9Evf,EAAuBtiC,UAAUyiD,eAAiB,WAC9C,OAA0B,OAAnBpkD,KAAKsjD,WAETrf,EA5EgC,GA4L3Ch9B,EAAQi9B,uBApGoC,WAMxC,SAAAA,EAAgCmgB,EAAYd,EAAiBC,GACzDxjD,KAAKqkD,WAAaA,EAClBrkD,KAAKujD,gBAAkBA,EACvBvjD,KAAKwjD,SAAWA,EAyFpB,OApFAtf,EAAuBviC,UAAU8hD,WAAa,SAAU5mC,GACpD,IAAIynC,EAA6B,mBAAdznC,EAAiC,cAAgBA,EAGpE,OAFAynC,EACqB,qBAAjBA,EAAsC,gBAAkBA,EACrDn9C,EAAOsL,SAASzS,KAAKqkD,WAAYC,IAK5CpgB,EAAuBviC,UAAUuiD,kBAAoB,SAAUr6C,EAAOqF,GAClE,OAAIlP,KAAKujD,gBACE,IAAIF,EAAQc,YAAYnkD,KAAM6J,EAAOqF,GAGrC,MAMfg1B,EAAuBviC,UAAU+hD,YAAc,SAAUC,EAAQviD,GAC7DgG,EAAOiC,OAA2B,MAApBs6C,EAAOhtC,UAAmB,yCACxC,IAAIiZ,EAAMxuB,EAAMixB,SAAS9gB,MAA8BoyC,EAAiB,WACpEnrC,EAAQpX,EAAMoiC,iBAAiBzO,WACnC,OAAO,IAAIsuB,EAAQO,UAAUD,EAAO/kC,KAAM5e,KAAM,IAAIwiD,EAAe7wB,aAAagyB,EAAO9kC,aAAc+Q,EAAKpX,GAAQmrC,EAAO5kC,WAK7HmlB,EAAuBviC,UAAUkiD,eAAiB,SAAU3P,GACxD,IAAI4P,EAAM9jD,KAAKwjD,SACf,GAAiC,WAA7BtP,EAAU6P,eAA6B,CACvC38C,EAAOiC,OAAOrJ,KAAKujD,gBAAiB,gEACpC,IAAIgB,EAAavkD,KAAKujD,gBACtB,OAAO,WAEHgB,EAAW3pC,KAAKkpC,EAAK5P,EAAUrqC,QAInC,IAAI26C,EAAOxkD,KAAKqkD,WAAWnQ,EAAUr3B,WACrC,OAAO,WACH2nC,EAAK5pC,KAAKkpC,EAAK5P,EAAUj1B,SAAUi1B,EAAUn1B,YAOzDmlB,EAAuBviC,UAAUogD,QAAU,SAAUxvC,GACjD,GAAIA,aAAiB2xB,EAAwB,CACzC,IAAKlkC,KAAKqkD,aAAe9xC,EAAM8xC,WAC3B,OAAO,EAEN,GAAIrkD,KAAKwjD,WAAajxC,EAAMixC,SAAU,CACvC,IAAIiB,EAAat9C,EAAO2hC,SAASv2B,EAAM8xC,YAEvC,GAAII,IADYt9C,EAAO2hC,SAAS9oC,KAAKqkD,YACP,CAI1B,GAAmB,IAAfI,EAAkB,CAClB,IAAIC,EAAkCv9C,EAAOw9C,UAAUpyC,EAAM8xC,YACzDO,EAAiCz9C,EAAOw9C,UAAU3kD,KAAKqkD,YAC3D,QAAQO,IAAYF,GACdnyC,EAAM8xC,WAAWK,IACd1kD,KAAKqkD,WAAWO,IACjBryC,EAAM8xC,WAAWK,KAAc1kD,KAAKqkD,WAAWO,IAIvD,OAAOz9C,EAAO09C,MAAM7kD,KAAKqkD,WAAY,SAAUxnC,EAAWioC,GAAM,OAAOvyC,EAAM8xC,WAAWxnC,KAAeioC,MAKvH,OAAO,GAKX5gB,EAAuBviC,UAAUyiD,eAAiB,WAC9C,OAA2B,OAApBpkD,KAAKqkD,YAETngB,EAlGgC,qCChG3Cn9B,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAIC,EAASrB,EAAQ,KAsDrBmB,EAAQ28C,UAjDuB,WAO3B,SAAAA,EAAmB/mC,EAAWiQ,EAAmB7N,EAAUF,GACvD/e,KAAK6c,UAAYA,EACjB7c,KAAK8sB,kBAAoBA,EACzB9sB,KAAKif,SAAWA,EAChBjf,KAAK+e,SAAWA,EAoCpB,OA/BA6kC,EAAUjiD,UAAUojD,QAAU,WAC1B,IAAIn1B,EAAM5vB,KAAKif,SAASoT,SACxB,MAAuB,UAAnBryB,KAAK6c,UACE+S,EAAI1gB,KAGJ0gB,EAAIH,YAAYvgB,MAM/B00C,EAAUjiD,UAAUoiD,aAAe,WAC/B,OAAO/jD,KAAK6c,WAKhB+mC,EAAUjiD,UAAUkiD,eAAiB,WACjC,OAAO7jD,KAAK8sB,kBAAkB+2B,eAAe7jD,OAKjD4jD,EAAUjiD,UAAU4M,SAAW,WAC3B,OAAQvO,KAAK+kD,UAAUx2C,WACnB,IACAvO,KAAK6c,UACL,IACA1V,EAAO4B,UAAU/I,KAAKif,SAAS6S,cAEhC8xB,EA/CmB,GAuF9B38C,EAAQk9C,YArCyB,WAM7B,SAAAA,EAAqBr3B,EAAmBjjB,EAAOqF,GAC3ClP,KAAK8sB,kBAAoBA,EACzB9sB,KAAK6J,MAAQA,EACb7J,KAAKkP,KAAOA,EA0BhB,OArBAi1C,EAAYxiD,UAAUojD,QAAU,WAC5B,OAAO/kD,KAAKkP,MAKhBi1C,EAAYxiD,UAAUoiD,aAAe,WACjC,MAAO,UAKXI,EAAYxiD,UAAUkiD,eAAiB,WACnC,OAAO7jD,KAAK8sB,kBAAkB+2B,eAAe7jD,OAKjDmkD,EAAYxiD,UAAU4M,SAAW,WAC7B,OAAOvO,KAAKkP,KAAKX,WAAa,WAE3B41C,EAnCqB,qCCxDhCp9C,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAIC,EAASrB,EAAQ,KACjBsB,EAAStB,EAAQ,KACjBk/C,EAAiBl/C,EAAQ,KACzBka,EAAiBla,EAAQ,KACzBuB,EAASvB,EAAQ,KACjBm/C,EAAkBn/C,EAAQ,KAC1Bo/C,EAAmBp/C,EAAQ,KAC3Bq/C,EAAUr/C,EAAQ,KAClBijC,EAAcjjC,EAAQ,KACtBs/C,EAAct/C,EAAQ,KACtBoV,EAASpV,EAAQ,KACjBopB,EAAcppB,EAAQ,KACtBu/C,EAAcv/C,EAAQ,KAuqB1BmB,EAAQghB,SAhpBsB,WAK1B,SAAAA,EAAkBq9B,GACdtlD,KAAKslD,gBAAkBA,EAMvBtlD,KAAKulD,eAAiBN,EAAgBzyB,cAAcpG,MAMpDpsB,KAAKwlD,kBAAoB,IAAIH,EAAYI,UACzCzlD,KAAK0lD,kBACL1lD,KAAK2lD,kBA0nBT,OA/mBA19B,EAAStmB,UAAUspB,mBAAqB,SAAU/b,EAAM02C,EAAS56B,EAASsmB,GAGtE,OADAtxC,KAAKwlD,kBAAkBK,aAAa32C,EAAM02C,EAAS56B,EAASsmB,GACvDA,EAIMtxC,KAAK8lD,4BAA4B,IAAIV,EAAYpc,UAAUD,EAAY7qB,gBAAgBK,KAAMrP,EAAM02C,QAWlH39B,EAAStmB,UAAUoqB,eAAiB,SAAU7c,EAAM6a,EAAiBiB,GAEjEhrB,KAAKwlD,kBAAkBO,SAAS72C,EAAM6a,EAAiBiB,GACvD,IAAIg7B,EAAaf,EAAgBzyB,cAAcE,WAAW3I,GAC1D,OAAO/pB,KAAK8lD,4BAA4B,IAAIX,EAAQc,MAAMld,EAAY7qB,gBAAgBK,KAAMrP,EAAM82C,KAStG/9B,EAAStmB,UAAU4pB,aAAe,SAAUP,EAASk7B,QAClC,IAAXA,IAAqBA,GAAS,GAClC,IAAItJ,EAAQ58C,KAAKwlD,kBAAkBW,SAASn7B,GAE5C,GADuBhrB,KAAKwlD,kBAAkBY,YAAYp7B,GAIrD,CACD,IAAIq7B,EAAiBpB,EAAgBzyB,cAAcpG,MAUnD,OATkB,MAAdwwB,EAAM3yB,KAENo8B,EAAiBA,EAAe78C,IAAI0R,EAAOhL,KAAKkc,OAAO,GAGvD/kB,EAAO2F,QAAQ4vC,EAAMnqB,SAAU,SAAU1hB,EAAYoD,GACjDkyC,EAAiBA,EAAe78C,IAAI,IAAI0R,EAAOhL,KAAKa,GAAaoD,KAGlEnU,KAAK8lD,4BAA4B,IAAId,EAAesB,aAAa1J,EAAM1tC,KAAMm3C,EAAgBH,IAbpG,UAuBRj+B,EAAStmB,UAAU6mB,qBAAuB,SAAUtZ,EAAM02C,GACtD,OAAO5lD,KAAK8lD,4BAA4B,IAAIV,EAAYpc,UAAUD,EAAY7qB,gBAAgBM,OAAQtP,EAAM02C,KAShH39B,EAAStmB,UAAUqoB,iBAAmB,SAAU9a,EAAM6a,GAClD,IAAIi8B,EAAaf,EAAgBzyB,cAAcE,WAAW3I,GAC1D,OAAO/pB,KAAK8lD,4BAA4B,IAAIX,EAAQc,MAAMld,EAAY7qB,gBAAgBM,OAAQtP,EAAM82C,KAQxG/9B,EAAStmB,UAAU4kD,oBAAsB,SAAUr3C,GAC/C,OAAOlP,KAAK8lD,4BAA4B,IAAIZ,EAAiBsB,eAAezd,EAAY7qB,gBAAgBM,OAAQtP,KAUpH+Y,EAAStmB,UAAUmoB,0BAA4B,SAAU5a,EAAM+a,EAAM9B,GACjE,IAAIs+B,EAAWzmD,KAAK0mD,gBAAgBv+B,GACpC,GAAgB,MAAZs+B,EAAkB,CAClB,IAAI9X,EAAI1mB,EAAS0+B,eAAeF,GAC5BG,EAAYjY,EAAEz/B,KAAMmP,EAAUswB,EAAEtwB,QAChC1M,EAAeuJ,EAAOhL,KAAKyB,aAAai1C,EAAW13C,GACnD23C,EAAK,IAAIzB,EAAYpc,UAAUD,EAAY7qB,gBAAgBO,qBAAqBJ,GAAU1M,EAAcsY,GAC5G,OAAOjqB,KAAK8mD,sBAAsBF,EAAWC,GAI7C,UAWR5+B,EAAStmB,UAAUioB,sBAAwB,SAAU1a,EAAM6a,EAAiB5B,GACxE,IAAIs+B,EAAWzmD,KAAK0mD,gBAAgBv+B,GACpC,GAAIs+B,EAAU,CACV,IAAI9X,EAAI1mB,EAAS0+B,eAAeF,GAC5BG,EAAYjY,EAAEz/B,KAAMmP,EAAUswB,EAAEtwB,QAChC1M,EAAeuJ,EAAOhL,KAAKyB,aAAai1C,EAAW13C,GACnD82C,EAAaf,EAAgBzyB,cAAcE,WAAW3I,GACtD88B,EAAK,IAAI1B,EAAQc,MAAMld,EAAY7qB,gBAAgBO,qBAAqBJ,GAAU1M,EAAcq0C,GACpG,OAAOhmD,KAAK8mD,sBAAsBF,EAAWC,GAI7C,UAUR5+B,EAAStmB,UAAUolD,0BAA4B,SAAU73C,EAAMiZ,GAC3D,IAAIs+B,EAAWzmD,KAAK0mD,gBAAgBv+B,GACpC,GAAIs+B,EAAU,CACV,IAAI9X,EAAI1mB,EAAS0+B,eAAeF,GAC5BG,EAAYjY,EAAEz/B,KAAMmP,EAAUswB,EAAEtwB,QAChC1M,EAAeuJ,EAAOhL,KAAKyB,aAAai1C,EAAW13C,GACnD23C,EAAK,IAAI3B,EAAiBsB,eAAezd,EAAY7qB,gBAAgBO,qBAAqBJ,GAAU1M,GACxG,OAAO3R,KAAK8mD,sBAAsBF,EAAWC,GAI7C,UAUR5+B,EAAStmB,UAAUorB,qBAAuB,SAAU3rB,EAAO0rB,GACvD,IAAI5d,EAAO9N,EAAM8N,KACb26B,EAAc,KACdmd,GAA2B,EAG/BhnD,KAAKulD,eAAexxB,cAAc7kB,EAAM,SAAU+3C,EAAiBC,GAC/D,IAAIv1C,EAAeuJ,EAAOhL,KAAKyB,aAAas1C,EAAiB/3C,GAC7D26B,EAAcA,GAAeqd,EAAGlc,uBAAuBr5B,GACvDq1C,EACIA,GAA4BE,EAAGvc,oBAEvC,IAAIwc,EAAYnnD,KAAKulD,eAAerkD,IAAIgO,GACnCi4C,GAKDH,EACIA,GAA4BG,EAAUxc,kBAC1Cd,EAAcA,GAAesd,EAAUnc,uBAAuB9vB,EAAOhL,KAAKkc,SAN1E+6B,EAAY,IAAIj4B,EAAYwC,UAC5B1xB,KAAKulD,eAAiBvlD,KAAKulD,eAAe/7C,IAAI0F,EAAMi4C,IAOxD,IAAIrd,EACJ,GAAmB,MAAfD,EACAC,GAAsB,MAErB,CACDA,GAAsB,EACtBD,EAAc7pB,EAAenK,aAAaP,WAC5BtV,KAAKulD,eAAetyB,QAAQ/jB,GAClCklB,aAAa,SAAUzd,EAAWywC,GACtC,IAAIC,EAAgBD,EAAepc,uBAAuB9vB,EAAOhL,KAAKkc,OAClEi7B,IACAxd,EAAcA,EAAY9yB,qBAAqBJ,EAAW0wC,MAItE,IAAIC,EAAoBH,EAAUhc,mBAAmB/pC,GACrD,IAAKkmD,IAAsBlmD,EAAMoiC,iBAAiBsH,eAAgB,CAE9D,IAAI2b,EAAWx+B,EAASs/B,cAAcnmD,GACtC+F,EAAOkC,SAASo9C,KAAYzmD,KAAK2lD,gBAAiB,0CAClD,IAAIx9B,EAAMF,EAASu/B,mBACnBxnD,KAAK2lD,eAAec,GAAYt+B,EAEhCnoB,KAAK0lD,eAAe,IAAMv9B,GAAOs+B,EAErC,IAAIhd,EAAczpC,KAAKwlD,kBAAkBiC,YAAYv4C,GACjD4Z,EAASq+B,EAAUp6B,qBAAqB3rB,EAAO0rB,EAAmB2c,EAAaI,EAAaC,GAChG,IAAKwd,IAAsBN,EAA0B,CACjD,IAAIrd,EAA0Bwd,EAAUlc,aAAa7pC,GACrD0nB,EAASA,EAAOlf,OAAO5J,KAAK0nD,eAAetmD,EAAOuoC,IAEtD,OAAO7gB,GAaXb,EAAStmB,UAAUurB,wBAA0B,SAAU9rB,EAAO0rB,EAAmByd,GAC7E,IAAIxqC,EAAQC,KAERkP,EAAO9N,EAAM8N,KACby4C,EAAiB3nD,KAAKulD,eAAerkD,IAAIgO,GACzCu7B,KAIJ,GAAIkd,IAC6B,YAA5BvmD,EAAMyjC,mBACH8iB,EAAexc,mBAAmB/pC,IAAS,CAI/C,IAAIwmD,EAAmBD,EAAez6B,wBAAwB9rB,EAAO0rB,EAAmByd,GACpFod,EAAej2C,YACf1R,KAAKulD,eAAiBvlD,KAAKulD,eAAe97C,OAAOyF,IAErD,IAAIs7B,EAAUod,EAAiBpd,QAC/BC,EAAemd,EAAiB9+B,OAOhC,IAAI++B,GAAmB,IACnBrd,EAAQsd,UAAU,SAAU1mD,GACxB,OAAOA,EAAMoiC,iBAAiBsH,iBAElCid,EAAU/nD,KAAKulD,eAAe5xB,WAAWzkB,EAAM,SAAUyC,EAAcq2C,GACvE,OAAOA,EAAgBrd,oBAE3B,GAAIkd,IAAoBE,EAAS,CAC7B,IAAI90B,EAAUjzB,KAAKulD,eAAetyB,QAAQ/jB,GAG1C,IAAK+jB,EAAQvhB,UAIT,IAAK,IAFDu2C,EAAWjoD,KAAKkoD,gCAAgCj1B,GAE3CtqB,EAAI,EAAGA,EAAIs/C,EAASnlD,SAAU6F,EAAG,CACtC,IAAIghC,EAAOse,EAASt/C,GAAIw/C,EAAWxe,EAAKkB,WACpCud,EAAWpoD,KAAKqoD,uBAAuB1e,GAC3C3pC,KAAKslD,gBAAgBp9B,eAAeD,EAASqgC,mBAAmBH,GAAWnoD,KAAKuoD,aAAaJ,GAAWC,EAAStZ,OAAQsZ,EAAS//B,aAU9I,IAAK0/B,GAAWvd,EAAQ1nC,OAAS,IAAMynC,EAGnC,GAAIsd,EAAiB,CAGjB7nD,KAAKslD,gBAAgB78B,cAAcR,EAASqgC,mBAAmBlnD,GAD9C,WAIjBopC,EAAQx9B,QAAQ,SAAUw7C,GACtB,IAAIC,EAAc1oD,EAAM4lD,eAAe19B,EAASs/B,cAAciB,IAC9DzoD,EAAMulD,gBAAgB78B,cAAcR,EAASqgC,mBAAmBE,GAAgBC,KAK5FzoD,KAAK0oD,YAAYle,GAKrB,OAAOC,GAWXxiB,EAAStmB,UAAUqoC,uBAAyB,SAAU96B,EAAMy5C,GACxD,IACIC,EAAY5oD,KAAKwlD,kBACjB3b,EAAc7pC,KAAKulD,eAAe5xB,WAAWzkB,EAAM,SAAUukB,EAAW0zB,GACxE,IAAIx1C,EAAeuJ,EAAOhL,KAAKyB,aAAa8hB,EAAWvkB,GACnD26B,EAAcsd,EAAUnc,uBAAuBr5B,GACnD,GAAIk4B,EACA,OAAOA,IAGf,OAAO+e,EAAU5e,uBAAuB96B,EAAM26B,EAAa8e,GATnC,IAmB5B1gC,EAAStmB,UAAUumD,gCAAkC,SAAUj1B,GAC3D,OAAOA,EAAQM,KAAK,SAAU5hB,EAAck3C,EAAqBC,GAC7D,GAAID,GAAuBA,EAAoBle,kBAAmB,CAE9D,OADmBke,EAAoB3d,mBAKvC,IAAI6d,KAOJ,OANIF,IACAE,EAAUF,EAAoB9d,iBAElC1jC,EAAO2F,QAAQ87C,EAAU,SAAU38C,EAAK68C,GACpCD,EAAUA,EAAQn/C,OAAOo/C,KAEtBD,KAQnB9gC,EAAStmB,UAAU+mD,YAAc,SAAUxV,GACvC,IAAK,IAAI1gC,EAAI,EAAGA,EAAI0gC,EAAQpwC,SAAU0P,EAAG,CACrC,IAAIy2C,EAAe/V,EAAQ1gC,GAC3B,IAAKy2C,EAAazlB,iBAAiBsH,eAAgB,CAE/C,IAAIoe,EAAkBjhC,EAASs/B,cAAc0B,GACzCE,EAAkBnpD,KAAK2lD,eAAeuD,UACnClpD,KAAK2lD,eAAeuD,UACpBlpD,KAAK0lD,eAAe,IAAMyD,MAU7ClhC,EAASqgC,mBAAqB,SAAUlnD,GACpC,OAAIA,EAAMoiC,iBAAiBsH,iBACtB1pC,EAAMoiC,iBAAiBoL,YAIKxtC,EAAMixB,SAG5BjxB,GAWf6mB,EAAStmB,UAAU+lD,eAAiB,SAAUtmD,EAAOuoC,GACjD,IAAIz6B,EAAO9N,EAAM8N,KACbiZ,EAAMnoB,KAAKuoD,aAAannD,GACxBgnD,EAAWpoD,KAAKqoD,uBAAuB1e,GACvC7gB,EAAS9oB,KAAKslD,gBAAgBp9B,eAAeD,EAASqgC,mBAAmBlnD,GAAQ+mB,EAAKigC,EAAStZ,OAAQsZ,EAAS//B,YAChH4K,EAAUjzB,KAAKulD,eAAetyB,QAAQ/jB,GAG1C,GAAIiZ,EACAhhB,EAAOkC,QAAQ4pB,EAAQ/rB,MAAMyjC,kBAAmB,0DAsBhD,IAAK,IAlBDye,EAAgBn2B,EAAQM,KAAK,SAAU5hB,EAAck3C,EAAqBC,GAC1E,IAAKn3C,EAAaD,WACdm3C,GACAA,EAAoBle,kBACpB,OAAQke,EAAoB3d,kBAAkBL,YAI9C,IAAIwe,KAOJ,OANIR,IACAQ,EAAYA,EAAUz/C,OAAOi/C,EAAoB9d,gBAAgBvoC,IAAI,SAAUmnC,GAAQ,OAAOA,EAAKkB,eAEvGxjC,EAAO2F,QAAQ87C,EAAU,SAAU38C,EAAKm9C,GACpCD,EAAYA,EAAUz/C,OAAO0/C,KAE1BD,IAGN1gD,EAAI,EAAGA,EAAIygD,EAActmD,SAAU6F,EAAG,CAC3C,IAAI4gD,EAAcH,EAAczgD,GAChC3I,KAAKslD,gBAAgB78B,cAAcR,EAASqgC,mBAAmBiB,GAAcvpD,KAAKuoD,aAAagB,IAGvG,OAAOzgC,GAQXb,EAAStmB,UAAU0mD,uBAAyB,SAAU1e,GAClD,IAAI5pC,EAAQC,KACRoB,EAAQuoC,EAAKkB,WACb1iB,EAAMnoB,KAAKuoD,aAAannD,GAC5B,OACI0tC,OAAQ,WAEJ,OADYnF,EAAKmC,kBAAoB9rB,EAAenK,aAAaP,YACpD6C,QAEjBkQ,WAAY,SAAUQ,GAClB,GAAe,OAAXA,EACA,OAAIV,EACOpoB,EAAMgnD,0BAA0B3lD,EAAM8N,KAAMiZ,GAG5CpoB,EAAMwmD,oBAAoBnlD,EAAM8N,MAM3C,IAAIrF,EAAQzC,EAAO2H,mBAAmB8Z,EAAQznB,GAC9C,OAAOrB,EAAMmtB,wBAAwB9rB,EACf,KAAMyI,MAW5Coe,EAASs/B,cAAgB,SAAUnmD,GAC/B,OAAOA,EAAM8N,KAAKX,WAAa,IAAMnN,EAAMyjC,mBAQ/C5c,EAAS0+B,eAAiB,SAAUF,GAChC,IAAI+C,EAAa/C,EAASp8C,QAAQ,KAElC,OADAlD,EAAOkC,QAAuB,IAAhBmgD,GAAqBA,EAAa/C,EAAS3jD,OAAS,EAAG,kBAEjEub,QAASooC,EAASn4C,OAAOk7C,EAAa,GACtCt6C,KAAM,IAAIgM,EAAOhL,KAAKu2C,EAASn4C,OAAO,EAAGk7C,MASjDvhC,EAAStmB,UAAU+kD,gBAAkB,SAAUv+B,GAC3C,OAAOnoB,KAAK0lD,eAAe,IAAMv9B,IAQrCF,EAAStmB,UAAU4mD,aAAe,SAAUnnD,GACxC,IAAIqlD,EAAWx+B,EAASs/B,cAAcnmD,GACtC,OAAOiG,EAAO2W,QAAQhe,KAAK2lD,eAAgBc,IAO/Cx+B,EAASu/B,iBAAmB,WACxB,OAAOv/B,EAASwhC,iBAUpBxhC,EAAStmB,UAAUmlD,sBAAwB,SAAUF,EAAWpd,GAC5D,IAAI2d,EAAYnnD,KAAKulD,eAAerkD,IAAI0lD,GACxCz/C,EAAOkC,OAAO89C,EAAW,wDACzB,IAAI1d,EAAczpC,KAAKwlD,kBAAkBiC,YAAYb,GACrD,OAAOO,EAAU5d,eAAeC,EAAWC,EAC1B,OAmBrBxhB,EAAStmB,UAAUmkD,4BAA8B,SAAUtc,GACvD,OAAOxpC,KAAK0pD,sBAAsBlgB,EAAWxpC,KAAKulD,eACjC,KAAMvlD,KAAKwlD,kBAAkBiC,YAAYvsC,EAAOhL,KAAKkc,SAY1EnE,EAAStmB,UAAU+nD,sBAAwB,SAAUlgB,EAAWmgB,EAAe9f,EAAaJ,GACxF,GAAID,EAAUt6B,KAAKwC,UACf,OAAO1R,KAAK4pD,iCAAiCpgB,EAAWmgB,EAAe9f,EAAaJ,GAGpF,IAAI0d,EAAYwC,EAAczoD,IAAIga,EAAOhL,KAAKkc,OAE3B,MAAfyd,GAAoC,MAAbsd,IACvBtd,EAAcsd,EAAUnc,uBAAuB9vB,EAAOhL,KAAKkc,QAE/D,IAAItD,KACAnS,EAAY6yB,EAAUt6B,KAAKyB,WAC3Bk5C,EAAiBrgB,EAAUN,kBAAkBvyB,GAC7Cuc,EAAYy2B,EAAcl3B,SAASvxB,IAAIyV,GAC3C,GAAIuc,GAAa22B,EAAgB,CAC7B,IAAIC,EAAmBjgB,EACjBA,EAAYnzB,kBAAkBC,GAC9B,KACFozC,EAAmBtgB,EAAYl4B,MAAMoF,GACzCmS,EAASA,EAAOlf,OAAO5J,KAAK0pD,sBAAsBG,EAAgB32B,EAAW42B,EAAkBC,IAKnG,OAHI5C,IACAr+B,EAASA,EAAOlf,OAAOu9C,EAAU5d,eAAeC,EAAWC,EAAaI,KAErE/gB,GAafb,EAAStmB,UAAUioD,iCAAmC,SAAUpgB,EAAWmgB,EAAe9f,EAAaJ,GACnG,IAAI1pC,EAAQC,KACRmnD,EAAYwC,EAAczoD,IAAIga,EAAOhL,KAAKkc,OAE3B,MAAfyd,GAAoC,MAAbsd,IACvBtd,EAAcsd,EAAUnc,uBAAuB9vB,EAAOhL,KAAKkc,QAE/D,IAAItD,KAcJ,OAbA6gC,EAAcl3B,SAASrZ,iBAAiB,SAAUzC,EAAWuc,GACzD,IAAI42B,EAAmBjgB,EACjBA,EAAYnzB,kBAAkBC,GAC9B,KACFozC,EAAmBtgB,EAAYl4B,MAAMoF,GACrCkzC,EAAiBrgB,EAAUN,kBAAkBvyB,GAC7CkzC,IACA/gC,EAASA,EAAOlf,OAAO7J,EAAM6pD,iCAAiCC,EAAgB32B,EAAW42B,EAAkBC,OAG/G5C,IACAr+B,EAASA,EAAOlf,OAAOu9C,EAAU5d,eAAeC,EAAWC,EAAaI,KAErE/gB,GAOXb,EAASwhC,cAAgB,EAClBxhC,EA9oBkB,qCCpC7BlhB,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAIC,EAASrB,EAAQ,KACjBoV,EAASpV,EAAQ,KACjBijC,EAAcjjC,EAAQ,KAwC1BmB,EAAQq/C,aAvC0B,WAO9B,SAAAA,EACkBp3C,EACA86C,EACA9D,GACdlmD,KAAKkP,KAAOA,EACZlP,KAAKgqD,aAAeA,EACpBhqD,KAAKkmD,OAASA,EAEdlmD,KAAK4e,KAAOmqB,EAAY9qB,cAAcgsC,eAEtCjqD,KAAKu0B,OAASwU,EAAY7qB,gBAAgBK,KAoB9C,OAfA+nC,EAAa3kD,UAAUunC,kBAAoB,SAAUvyB,GACjD,GAAK3W,KAAKkP,KAAKwC,UAIV,CAAA,GAA+B,MAA3B1R,KAAKgqD,aAAa9iD,MAGvB,OAFAC,EAAOkC,OAAOrJ,KAAKgqD,aAAav3B,SAAS/gB,UAAW,4DAE7C1R,KAGP,IAAIkzB,EAAYlzB,KAAKgqD,aAAa/2B,QAAQ,IAAI/X,EAAOhL,KAAKyG,IAC1D,OAAO,IAAI2vC,EAAaprC,EAAOhL,KAAKkc,MAAO8G,EAAWlzB,KAAKkmD,QAT3D,OADA/+C,EAAOkC,OAAOrJ,KAAKkP,KAAKyB,aAAegG,EAAW,iDAC3C,IAAI2vC,EAAatmD,KAAKkP,KAAK2B,WAAY7Q,KAAKgqD,aAAchqD,KAAKkmD,SAYvEI,EArCsB,qCCJjCv/C,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAIgU,EAASpV,EAAQ,KACjBijC,EAAcjjC,EAAQ,KAwB1BmB,EAAQu/C,eAjB4B,WAChC,SAAAA,EAAwBjyB,EAAQrlB,GAC5BlP,KAAKu0B,OAASA,EACdv0B,KAAKkP,KAAOA,EAEZlP,KAAK4e,KAAOmqB,EAAY9qB,cAAcisC,gBAU1C,OARA1D,EAAe7kD,UAAUunC,kBAAoB,SAAUvyB,GACnD,OAAI3W,KAAKkP,KAAKwC,UACH,IAAI80C,EAAexmD,KAAKu0B,OAAQrZ,EAAOhL,KAAKkc,OAG5C,IAAIo6B,EAAexmD,KAAKu0B,OAAQv0B,KAAKkP,KAAK2B,aAGlD21C,EAfwB,qCCTnCz/C,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAI6hC,EAAcjjC,EAAQ,KACtBs/C,EAAct/C,EAAQ,KACtBoV,EAASpV,EAAQ,KACjBqB,EAASrB,EAAQ,KAyDrBmB,EAAQg/C,MAjDmB,WACvB,SAAAA,EACkB1xB,EACArlB,EACAujB,GACdzyB,KAAKu0B,OAASA,EACdv0B,KAAKkP,KAAOA,EACZlP,KAAKyyB,SAAWA,EAEhBzyB,KAAK4e,KAAOmqB,EAAY9qB,cAAcksC,MAsC1C,OAjCAlE,EAAMtkD,UAAUunC,kBAAoB,SAAUvyB,GAC1C,GAAI3W,KAAKkP,KAAKwC,UAAW,CACrB,IAAIwhB,EAAYlzB,KAAKyyB,SAASQ,QAAQ,IAAI/X,EAAOhL,KAAKyG,IACtD,OAAIuc,EAAUxhB,UAEH,KAEFwhB,EAAUhsB,MAER,IAAIk+C,EAAYpc,UAAUhpC,KAAKu0B,OAAQrZ,EAAOhL,KAAKkc,MAAO8G,EAAUhsB,OAIpE,IAAI++C,EAAMjmD,KAAKu0B,OAAQrZ,EAAOhL,KAAKkc,MAAO8G,GAKrD,OADA/rB,EAAOkC,OAAOrJ,KAAKkP,KAAKyB,aAAegG,EAAW,kEAC3C,IAAIsvC,EAAMjmD,KAAKu0B,OAAQv0B,KAAKkP,KAAK2B,WAAY7Q,KAAKyyB,WAMjEwzB,EAAMtkD,UAAU4M,SAAW,WACvB,MAAQ,aACJvO,KAAKkP,KACL,KACAlP,KAAKu0B,OAAOhmB,WACZ,WACAvO,KAAKyyB,SAASlkB,WACd,KAED03C,EA/Ce,qCCZ1Bl/C,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAIo6C,EAAkBx7C,EAAQ,KAC1BskD,EAAkBtkD,EAAQ,KAC1Bka,EAAiBla,EAAQ,KACzBqjC,EAAcrjC,EAAQ,KACtBsjC,EAActjC,EAAQ,KACtBukD,EAAmBvkD,EAAQ,KAC3BqB,EAASrB,EAAQ,KACjBijC,EAAcjjC,EAAQ,KACtBuuB,EAAWvuB,EAAQ,KACnB2P,EAAkB3P,EAAQ,KAmL9BmB,EAAQojC,KAxKkB,WAMtB,SAAAA,EAAcigB,EAAQC,GAClBvqD,KAAKsqD,OAASA,EACdtqD,KAAKwqD,uBACL,IAAI1oB,EAAS9hC,KAAKsqD,OAAO9mB,iBACrBinB,EAAc,IAAInJ,EAAgBhtB,cAAcwN,EAAO/M,YACvDqE,EAAS0I,EAAO4oB,gBAKpB1qD,KAAK2qD,WAAa,IAAIP,EAAgBQ,cAAcxxB,GACpD,IAAIyxB,EAAqBN,EAAiBze,iBACtCgf,EAAoBP,EAAiB3e,gBAErCD,EAAa8e,EAAY91B,eAAe3U,EAAenK,aAAaP,WAAYu1C,EAAmBtiC,UAAW,MAC9GijB,EAAYpS,EAAOzE,eAAe3U,EAAenK,aAAaP,WAAYw1C,EAAkBviC,UAAW,MACvGwiC,EAAiB,IAAI5hB,EAAYhb,UAAUwd,EAAYkf,EAAmBt8B,qBAAsBk8B,EAAY51B,gBAC5Gm2B,EAAgB,IAAI7hB,EAAYhb,UAAUqd,EAAWsf,EAAkBv8B,qBAAsB6K,EAAOvE,gBAKxG70B,KAAKirD,WAAa,IAAI7hB,EAAYgB,UAAU4gB,EAAeD,GAK3D/qD,KAAKkrD,gBAAkB,IAAIb,EAAiBc,eAAenrD,KAAKsqD,QAqIpE,OAhIAjgB,EAAK1oC,UAAUkpC,SAAW,WACtB,OAAO7qC,KAAKsqD,QAKhBjgB,EAAK1oC,UAAUmqC,eAAiB,WAC5B,OAAO9rC,KAAKirD,WAAWnf,iBAAiBvjB,WAM5C8hB,EAAK1oC,UAAUqpC,uBAAyB,SAAU97B,GAC9C,IAAIk8C,EAAQprD,KAAKirD,WAAWlf,wBAC5B,OAAIqf,IAGIprD,KAAKsqD,OAAO9mB,iBAAiBsH,iBAC3B57B,EAAKwC,YAAc05C,EAAM10C,kBAAkBxH,EAAKyB,YAAYe,WACvD05C,EAAMx0C,SAAS1H,GAGvB,MAKXm7B,EAAK1oC,UAAU+P,QAAU,WACrB,OAA2C,IAApC1R,KAAKwqD,oBAAoB1nD,QAKpCunC,EAAK1oC,UAAUorB,qBAAuB,SAAUD,GAC5C9sB,KAAKwqD,oBAAoBvlD,KAAK6nB,IAOlCud,EAAK1oC,UAAUurB,wBAA0B,SAAUJ,EAAmByd,GAClE,IAAIE,KACJ,GAAIF,EAAa,CACbpjC,EAAOkC,OAA4B,MAArByjB,EAA2B,mDACzC,IAAIu+B,EAASrrD,KAAKsqD,OAAOp7C,KACzBlP,KAAKwqD,oBAAoBx9C,QAAQ,SAAUs+C,GAEvC,IAAIC,EAAaD,EAAapH,kBAD9B3Z,EAAoCA,EACyB8gB,GACzDE,GACA9gB,EAAaxlC,KAAKsmD,KAI9B,GAAIz+B,EAAmB,CAEnB,IAAK,IADD0+B,KACK7iD,EAAI,EAAGA,EAAI3I,KAAKwqD,oBAAoB1nD,SAAU6F,EAAG,CACtD,IAAI8iD,EAAWzrD,KAAKwqD,oBAAoB7hD,GACxC,GAAK8iD,EAAS1J,QAAQj1B,IAGjB,GAAIA,EAAkBs3B,iBAAkB,CAEzCoH,EAAYA,EAAU5hD,OAAO5J,KAAKwqD,oBAAoBr5C,MAAMxI,EAAI,IAChE,YALA6iD,EAAUvmD,KAAKwmD,GAQvBzrD,KAAKwqD,oBAAsBgB,OAG3BxrD,KAAKwqD,uBAET,OAAO/f,GAUXJ,EAAK1oC,UAAU4nC,eAAiB,SAAUC,EAAWC,EAAaiiB,GAC1DliB,EAAU5qB,OAASmqB,EAAY9qB,cAAcksC,OAChB,OAA7B3gB,EAAUjV,OAAOlW,UACjBlX,EAAOkC,OAAOrJ,KAAKirD,WAAWlf,wBAAyB,6DACvD5kC,EAAOkC,OAAOrJ,KAAKirD,WAAWpf,uBAAwB,4DAE1D,IAAI8f,EAAe3rD,KAAKirD,WACpB5nC,EAASrjB,KAAK2qD,WAAWphB,eAAeoiB,EAAcniB,EAAWC,EAAaiiB,GAKlF,OAJA1rD,KAAK2qD,WAAWiB,cAAcvoC,EAAO8mB,WACrChjC,EAAOkC,OAAOga,EAAO8mB,UAAU2B,iBAAiBvd,uBAC3Co9B,EAAa7f,iBAAiBvd,qBAAsB,2DACzDvuB,KAAKirD,WAAa5nC,EAAO8mB,UAClBnqC,KAAK6rD,0BAA0BxoC,EAAOyoC,QAASzoC,EAAO8mB,UAAUyB,gBAAgBrjB,UAAW,OAMtG8hB,EAAK1oC,UAAU2oC,iBAAmB,SAAUghB,GACxC,IAAI9f,EAAYxrC,KAAKirD,WAAWrf,gBAC5BmgB,KACJ,IAAKvgB,EAAUjjB,UAAUhS,aAAc,CACnBi1B,EAAUjjB,UAChBvQ,aAAavC,EAAgBJ,eAAgB,SAAUlJ,EAAK8L,GAClE8zC,EAAe9mD,KAAKovB,EAAS1V,OAAOQ,iBAAiBhT,EAAK8L,MAMlE,OAHIuzB,EAAUjd,sBACVw9B,EAAe9mD,KAAKovB,EAAS1V,OAAOK,YAAYwsB,EAAUjjB,YAEvDvoB,KAAK6rD,0BAA0BE,EAAgBvgB,EAAUjjB,UAAW+iC,IAS/EjhB,EAAK1oC,UAAUkqD,0BAA4B,SAAUC,EAAS/hB,EAAYjd,GAItE,OAAO9sB,KAAKkrD,gBAAgBc,yBAAyBF,EAAS/hB,EAH1Cjd,GACbA,GACD9sB,KAAKwqD,sBAGRngB,EAtKc,qCCrBzBtjC,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAI6hC,EAAcjjC,EAAQ,KACtBqB,EAASrB,EAAQ,KACjBmmD,EAA2BnmD,EAAQ,KACnCuuB,EAAWvuB,EAAQ,KACnBka,EAAiBla,EAAQ,KACzB4P,EAAa5P,EAAQ,KACrBm/C,EAAkBn/C,EAAQ,KAC1BoV,EAASpV,EAAQ,KACjBomD,EAAwBpmD,EAAQ,KAKhCqmD,EAAiC,WASjC,OAJA,SAAyBhiB,EAAW2hB,GAChC9rD,KAAKmqC,UAAYA,EACjBnqC,KAAK8rD,QAAUA,GAPa,GAWpC7kD,EAAQklD,gBAAkBA,EAuiB1BllD,EAAQ2jD,cAniB2B,WAI/B,SAAAA,EAAuBwB,GACnBpsD,KAAKosD,QAAUA,EA4hBnB,OAvhBAxB,EAAcjpD,UAAUiqD,cAAgB,SAAUzhB,GAC9ChjC,EAAOkC,OAAO8gC,EACTyB,gBACArjB,UACAlO,UAAUra,KAAKosD,QAAQr3B,YAAa,0BACzC5tB,EAAOkC,OAAO8gC,EACT2B,iBACAvjB,UACAlO,UAAUra,KAAKosD,QAAQr3B,YAAa,4BAS7C61B,EAAcjpD,UAAU4nC,eAAiB,SAAUoiB,EAAcniB,EAAWC,EAAa4d,GACrF,IACIgF,EAAcC,EADdlwB,EAAc,IAAI6vB,EAAyBM,uBAE/C,GAAI/iB,EAAU5qB,OAASmqB,EAAY9qB,cAAcgrB,UAAW,CACxD,IAAIujB,EAAYhjB,EACZgjB,EAAUj4B,OAAOpW,SACjBkuC,EAAersD,KAAKysD,oBAAoBd,EAAca,EAAUt9C,KAAMs9C,EAAUviC,KAAMwf,EAAa4d,EAAejrB,IAGlHj1B,EAAOkC,OAAOmjD,EAAUj4B,OAAOnW,WAAY,mBAI3CkuC,EACIE,EAAUj4B,OAAOjW,QACZqtC,EAAa7f,iBAAiBtd,eAC1Bg+B,EAAUt9C,KAAKwC,UAC5B26C,EAAersD,KAAK0sD,sBAAsBf,EAAca,EAAUt9C,KAAMs9C,EAAUviC,KAAMwf,EAAa4d,EAAeiF,EAAkBlwB,SAGzI,GAAIoN,EAAU5qB,OAASmqB,EAAY9qB,cAAcksC,MAAO,CACzD,IAAIn+B,EAAQwd,EACRxd,EAAMuI,OAAOpW,SACbkuC,EAAersD,KAAK2sD,gBAAgBhB,EAAc3/B,EAAM9c,KAAM8c,EAAMyG,SAAUgX,EAAa4d,EAAejrB,IAG1Gj1B,EAAOkC,OAAO2iB,EAAMuI,OAAOnW,WAAY,mBAEvCkuC,EACItgC,EAAMuI,OAAOjW,QAAUqtC,EAAa7f,iBAAiBtd,aACzD69B,EAAersD,KAAK4sD,kBAAkBjB,EAAc3/B,EAAM9c,KAAM8c,EAAMyG,SAAUgX,EAAa4d,EAAeiF,EAAkBlwB,SAGjI,GAAIoN,EAAU5qB,OAASmqB,EAAY9qB,cAAcgsC,eAAgB,CAClE,IAAI1+B,EAAeie,EAKf6iB,EAJC9gC,EAAa26B,OAIClmD,KAAK6sD,iBAAiBlB,EAAcpgC,EAAarc,KAAMu6B,EAAa4d,EAAejrB,GAHnFp8B,KAAK8sD,cAAcnB,EAAcpgC,EAAarc,KAAMqc,EAAay+B,aAAcvgB,EAAa4d,EAAejrB,OAM7H,CAAA,GAAIoN,EAAU5qB,OAASmqB,EAAY9qB,cAAcisC,gBAIlD,MAAM/iD,EAAO2Y,eAAe,2BAA6B0pB,EAAU5qB,MAHnEytC,EAAersD,KAAK+sD,gBAAgBpB,EAAcniB,EAAUt6B,KAAMu6B,EAAarN,GAKnF,IAAI0vB,EAAU1vB,EAAY4wB,aAE1B,OADApC,EAAcqC,oBAAoBtB,EAAcU,EAAcP,GACvD,IAAIK,EAAgBE,EAAcP,IAQ7ClB,EAAcqC,oBAAsB,SAAUtB,EAAcU,EAAcjwB,GACtE,IAAIoP,EAAY6gB,EAAazgB,gBAC7B,GAAIJ,EAAUjd,qBAAsB,CAChC,IAAI2+B,EAAgB1hB,EAAUjjB,UAAUhS,cAAgBi1B,EAAUjjB,UAAU7W,UACxEy7C,EAAkBxB,EAAa9f,wBAC/BzP,EAAYt5B,OAAS,IACpB6oD,EAAa/f,gBAAgBrd,sBAC7B2+B,IACI1hB,EACIjjB,UACAjW,OAA4B,KACpCk5B,EACIjjB,UACAnU,cACA9B,OAAO66C,EAAgB/4C,iBAC5BgoB,EAAYn3B,KAAKovB,EAAS1V,OAAOK,YACZqtC,EAAaxgB,2BAa9C+e,EAAcjpD,UAAUyrD,oCAAsC,SAAUjjB,EAAWkjB,EAAY5jB,EAAalV,EAAQ6H,GAChH,IAAIkxB,EAAenjB,EAAUyB,gBAC7B,GAA8C,MAA1CnC,EAAY8jB,eAAeF,GAE3B,OAAOljB,EAGP,IAAI6gB,OAAgB,EAAQwC,OAAa,EACzC,GAAIH,EAAW37C,UAGX,GADAvK,EAAOkC,OAAO8gC,EAAU2B,iBAAiBvd,qBAAsB,8DAC3D4b,EAAU2B,iBAAiBtd,aAAc,CAIzC,IAAIqb,EAAcM,EAAU4B,wBAIxB0hB,EAAwBhkB,EAAYS,0BAHjBL,aAAuB7pB,EAAenK,aACvDg0B,EACA7pB,EAAenK,aAAaP,YAElC01C,EAAgBhrD,KAAKosD,QAAQz3B,eAAewV,EAAUyB,gBAAgBrjB,UAAWklC,EAAuBrxB,OAEvG,CACD,IAAIsxB,EAAejkB,EAAYO,uBAAuBG,EAAU4B,yBAChEif,EAAgBhrD,KAAKosD,QAAQz3B,eAAewV,EAAUyB,gBAAgBrjB,UAAWmlC,EAActxB,OAGlG,CACD,IAAIhd,EAAWiuC,EAAW18C,WAC1B,GAAgB,aAAZyO,EAAyB,CACzBjY,EAAOkC,OAAiC,GAA1BgkD,EAAWz8C,YAAkB,yDAC3C,IAAI+8C,EAAeL,EAAa/kC,UAChCilC,EAAarjB,EAAU2B,iBAAiBvjB,UAExC,IAAIqlC,EAAkBnkB,EAAYokB,mCAAmCR,EAAYM,EAAcH,GAE3FxC,EADmB,MAAnB4C,EACgB5tD,KAAKosD,QAAQ51C,eAAem3C,EAAcC,GAI1CN,EAAa/kC,cAGhC,CACD,IAAIulC,EAAkBT,EAAWx8C,WAE7Bk9C,OAAgB,EACpB,GAAIT,EAAa5+B,mBAAmBtP,GAAW,CAC3CouC,EAAarjB,EAAU2B,iBAAiBvjB,UACxC,IAAIylC,EAAmBvkB,EAAYokB,mCAAmCR,EAAYC,EAAa/kC,UAAWilC,GAEtGO,EADoB,MAApBC,EACgBV,EACX/kC,UACA7R,kBAAkB0I,GAClB5H,YAAYs2C,EAAiBE,GAIlBV,EACX/kC,UACA7R,kBAAkB0I,QAI3B2uC,EAAgBtkB,EAAYwkB,kBAAkB7uC,EAAU+qB,EAAU2B,kBAGlEkf,EADiB,MAAjB+C,EACgB/tD,KAAKosD,QAAQ50C,YAAY81C,EAAa/kC,UAAWnJ,EAAU2uC,EAAeD,EAAiBv5B,EAAQ6H,GAInGkxB,EAAa/kC,WAIzC,OAAO4hB,EAAUoB,gBAAgByf,EAAesC,EAAa/+B,sBAAwB8+B,EAAW37C,UAAW1R,KAAKosD,QAAQv3B,iBAchI+1B,EAAcjpD,UAAU+qD,sBAAwB,SAAUf,EAAc0B,EAAYa,EAAazkB,EAAa4d,EAAeiF,EAAkBlwB,GAC3I,IACI2uB,EADAoD,EAAgBxC,EAAa7f,iBAE7BsiB,EAAe9B,EACbtsD,KAAKosD,QACLpsD,KAAKosD,QAAQt3B,mBACnB,GAAIu4B,EAAW37C,UACXq5C,EAAiBqD,EAAaz5B,eAAew5B,EAAc5lC,UAAW2lC,EAAa,WAElF,GAAIE,EAAav5B,iBAAmBs5B,EAAc3/B,aAAc,CAEjE,IAAI6/B,EAAgBF,EACf5lC,UACA/Q,YAAY61C,EAAYa,GAC7BnD,EAAiBqD,EAAaz5B,eAAew5B,EAAc5lC,UAAW8lC,EAAe,UAEpF,CACD,IAAIjvC,EAAWiuC,EAAW18C,WAC1B,IAAKw9C,EAAc1/B,kBAAkB4+B,IACjCA,EAAWz8C,YAAc,EAEzB,OAAO+6C,EAEX,IAAImC,EAAkBT,EAAWx8C,WAE7BmG,EADYm3C,EAAc5lC,UAAU7R,kBAAkB0I,GAC7B5H,YAAYs2C,EAAiBI,GAEtDnD,EADY,aAAZ3rC,EACiBgvC,EAAa53C,eAAe23C,EAAc5lC,UAAWvR,GAGrDo3C,EAAa52C,YAAY22C,EAAc5lC,UAAWnJ,EAAUpI,EAAc82C,EAAiB5B,EAAsBoC,yBAA0B,MAGpK,IAAIjC,EAAeV,EAAajgB,iBAAiBqf,EAAgBoD,EAAc5/B,sBAAwB8+B,EAAW37C,UAAW08C,EAAav5B,gBACtIN,EAAS,IAAI23B,EAAsBqC,6BAA6B9kB,EAAa4iB,EAAchF,GAC/F,OAAOrnD,KAAKotD,oCAAoCf,EAAcgB,EAAY5jB,EAAalV,EAAQ6H,IAYnGwuB,EAAcjpD,UAAU8qD,oBAAsB,SAAUd,EAAc0B,EAAYa,EAAazkB,EAAa4d,EAAejrB,GACvH,IACIiwB,EAAcrB,EADdsC,EAAe3B,EAAa/f,gBAE5BrX,EAAS,IAAI23B,EAAsBqC,6BAA6B9kB,EAAakiB,EAActE,GAC/F,GAAIgG,EAAW37C,UACXs5C,EAAgBhrD,KAAKosD,QAAQz3B,eAAeg3B,EAAa/f,gBAAgBrjB,UAAW2lC,EAAa9xB,GACjGiwB,EAAeV,EAAapgB,gBAAgByf,GAAe,EAAMhrD,KAAKosD,QAAQv3B,oBAE7E,CACD,IAAIzV,EAAWiuC,EAAW18C,WAC1B,GAAiB,cAAbyO,EACA4rC,EAAgBhrD,KAAKosD,QAAQ51C,eAAem1C,EAAa/f,gBAAgBrjB,UAAW2lC,GACpF7B,EAAeV,EAAapgB,gBAAgByf,EAAesC,EAAa/+B,qBAAsB++B,EAAa9+B,kBAE1G,CACD,IAAIs/B,EAAkBT,EAAWx8C,WAC7B4jB,EAAW64B,EAAa/kC,UAAU7R,kBAAkB0I,GACpDgU,OAAW,EACf,GAAI06B,EAAgBp8C,UAEhB0hB,EAAW86B,MAEV,CACD,IAAIj2C,EAAYsc,EAAOi6B,iBAAiBpvC,GAMhCgU,EALS,MAAbnb,EACkC,cAA9B61C,EAAgBh9C,WAChBmH,EAAUrB,SAASk3C,EAAgBz8C,UAAUK,UAGlCuG,EAGAA,EAAUT,YAAYs2C,EAAiBI,GAK3CluC,EAAenK,aAAaP,WAG/C,GAAKmf,EAASniB,OAAO8gB,GAKjBi5B,EAAeV,MALa,CAC5B,IAAI8C,EAAezuD,KAAKosD,QAAQ50C,YAAY81C,EAAa/kC,UAAWnJ,EAAUgU,EAAU06B,EAAiBv5B,EAAQ6H,GACjHiwB,EAAeV,EAAapgB,gBAAgBkjB,EAAcnB,EAAa/+B,qBAAsBvuB,KAAKosD,QAAQv3B,kBAOtH,OAAOw3B,GAQXzB,EAAc8D,eAAiB,SAAUvkB,EAAW/qB,GAChD,OAAO+qB,EAAUyB,gBAAgBld,mBAAmBtP,IAYxDwrC,EAAcjpD,UAAUgrD,gBAAkB,SAAUxiB,EAAWj7B,EAAM6a,EAAiB0f,EAAaI,EAAazN,GAC5G,IAAIr8B,EAAQC,KAOR2uD,EAAexkB,EAanB,OAZApgB,EAAgBmK,QAAQ,SAAUviB,EAAcsG,GAC5C,IAAI22C,EAAY1/C,EAAKqC,MAAMI,GACvBi5C,EAAc8D,eAAevkB,EAAWykB,EAAUj+C,cAClDg+C,EAAe5uD,EAAM0sD,oBAAoBkC,EAAcC,EAAW32C,EAAWwxB,EAAaI,EAAazN,MAG/GrS,EAAgBmK,QAAQ,SAAUviB,EAAcsG,GAC5C,IAAI22C,EAAY1/C,EAAKqC,MAAMI,GACtBi5C,EAAc8D,eAAevkB,EAAWykB,EAAUj+C,cACnDg+C,EAAe5uD,EAAM0sD,oBAAoBkC,EAAcC,EAAW32C,EAAWwxB,EAAaI,EAAazN,MAGxGuyB,GAQX/D,EAAcjpD,UAAUktD,YAAc,SAAU16C,EAAM6X,GAIlD,OAHAA,EAAMkI,QAAQ,SAAUviB,EAAcsG,GAClC9D,EAAOA,EAAKqD,YAAY7F,EAAcsG,KAEnC9D,GAaXy2C,EAAcjpD,UAAUirD,kBAAoB,SAAUziB,EAAWj7B,EAAM6a,EAAiB0f,EAAaI,EAAayiB,EAAkBlwB,GAChI,IAAIr8B,EAAQC,KAGZ,GAAImqC,EACC2B,iBACAvjB,UACA7W,YACAy4B,EAAU2B,iBAAiBvd,qBAC5B,OAAO4b,EAQX,IACI2kB,EADAH,EAAexkB,EAGf2kB,EADA5/C,EAAKwC,UACWqY,EAGAk7B,EAAgBzyB,cAAcpG,MAAMiH,QAAQnkB,EAAM6a,GAEtE,IAAIyjC,EAAarjB,EAAU2B,iBAAiBvjB,UAuB5C,OAtBAumC,EAAcr8B,SAASrZ,iBAAiB,SAAUgG,EAAU8T,GACxD,GAAIs6B,EAAW12C,SAASsI,GAAW,CAC/B,IAAI2vC,EAAc5kB,EACb2B,iBACAvjB,UACA7R,kBAAkB0I,GACnBgU,EAAWrzB,EAAM8uD,YAAYE,EAAa77B,GAC9Cy7B,EAAe5uD,EAAM2sD,sBAAsBiC,EAAc,IAAIzzC,EAAOhL,KAAKkP,GAAWgU,EAAUqW,EAAaI,EAAayiB,EAAkBlwB,MAGlJ0yB,EAAcr8B,SAASrZ,iBAAiB,SAAUgG,EAAU4vC,GACxD,IAAIC,GAAsB9kB,EAAU2B,iBAAiBpd,mBAAmBtP,IAC5C,MAAxB4vC,EAAe9nD,MACnB,IAAKsmD,EAAW12C,SAASsI,KAAc6vC,EAAoB,CACvD,IAAIF,EAAc5kB,EACb2B,iBACAvjB,UACA7R,kBAAkB0I,GACnBgU,EAAWrzB,EAAM8uD,YAAYE,EAAaC,GAC9CL,EAAe5uD,EAAM2sD,sBAAsBiC,EAAc,IAAIzzC,EAAOhL,KAAKkP,GAAWgU,EAAUqW,EAAaI,EAAayiB,EAAkBlwB,MAG3IuyB,GAYX/D,EAAcjpD,UAAUmrD,cAAgB,SAAU3iB,EAAW+kB,EAASlF,EAAcvgB,EAAa4d,EAAejrB,GAC5G,GAA2C,MAAvCqN,EAAY8jB,eAAe2B,GAC3B,OAAO/kB,EAGX,IAAImiB,EAAmBniB,EAAU2B,iBAAiBtd,aAG9Cqb,EAAcM,EAAU2B,iBAC5B,GAA0B,MAAtBke,EAAa9iD,MAAe,CAE5B,GAAKgoD,EAAQx9C,WAAam4B,EAAYtb,sBAClCsb,EAAYpb,kBAAkBygC,GAC9B,OAAOlvD,KAAK0sD,sBAAsBviB,EAAW+kB,EAASrlB,EAAYthB,UAAU3R,SAASs4C,GAAUzlB,EAAa4d,EAAeiF,EAAkBlwB,GAE5I,GAAI8yB,EAAQx9C,UAAW,CAGxB,IAAIy9C,EAAoBlK,EAAgBzyB,cAAcpG,MAItD,OAHAyd,EAAYthB,UAAUvQ,aAAatC,EAAWwE,UAAW,SAAU1W,EAAM2Q,GACrEg7C,EAAoBA,EAAkB3lD,IAAI,IAAI0R,EAAOhL,KAAK1M,GAAO2Q,KAE9DnU,KAAK4sD,kBAAkBziB,EAAW+kB,EAASC,EAAmB1lB,EAAa4d,EAAeiF,EAAkBlwB,GAGnH,OAAO+N,EAKX,IAAIilB,EAAoBnK,EAAgBzyB,cAAcpG,MAOtD,OANA49B,EAAa91B,QAAQ,SAAUm7B,EAAWnoD,GACtC,IAAIooD,EAAkBJ,EAAQ39C,MAAM89C,GAChCxlB,EAAYpb,kBAAkB6gC,KAC9BF,EAAoBA,EAAkB5lD,IAAI6lD,EAAWxlB,EAAYthB,UAAU3R,SAAS04C,OAGrFtvD,KAAK4sD,kBAAkBziB,EAAW+kB,EAASE,EAAmB3lB,EAAa4d,EAAeiF,EAAkBlwB,IAW3HwuB,EAAcjpD,UAAUorD,gBAAkB,SAAU5iB,EAAWj7B,EAAMu6B,EAAarN,GAC9E,IAAImzB,EAAgBplB,EAAU2B,iBAC1BugB,EAAeliB,EAAUuB,iBAAiB6jB,EAAchnC,UAAWgnC,EAAchhC,sBAAwBrf,EAAKwC,UAAW69C,EAAc/gC,cAC3I,OAAOxuB,KAAKotD,oCAAoCf,EAAcn9C,EAAMu6B,EAAayiB,EAAsBoC,yBAA0BlyB,IAWrIwuB,EAAcjpD,UAAUkrD,iBAAmB,SAAU1iB,EAAWj7B,EAAMu6B,EAAaiiB,EAAqBtvB,GACpG,IAAIlB,EACJ,GAAwC,MAApCuO,EAAY8jB,eAAer+C,GAC3B,OAAOi7B,EAGP,IAAI5V,EAAS,IAAI23B,EAAsBqC,6BAA6B9kB,EAAaU,EAAWuhB,GACxF8D,EAAgBrlB,EAAUyB,gBAAgBrjB,UAC1CyiC,OAAgB,EACpB,GAAI97C,EAAKwC,WAAiC,cAApBxC,EAAKyB,WAA4B,CACnD,IAAIgE,OAAU,EACd,GAAIw1B,EAAU2B,iBAAiBvd,qBAC3B5Z,EAAU80B,EAAYO,uBAAuBG,EAAU4B,6BAEtD,CACD,IAAI0jB,EAAiBtlB,EAAU2B,iBAAiBvjB,UAChDphB,EAAOkC,OAAOomD,aAA0BzvC,EAAenK,aAAc,iDACrElB,EAAU80B,EAAYS,0BAA0BulB,GAGpDzE,EAAgBhrD,KAAKosD,QAAQz3B,eAAe66B,EAD5C76C,EAAUA,EAC0DynB,OAEnE,CACD,IAAIhd,EAAWlQ,EAAKyB,WAChByiB,EAAWqW,EAAYwkB,kBAAkB7uC,EAAU+qB,EAAU2B,kBACjD,MAAZ1Y,GACA+W,EAAU2B,iBAAiBpd,mBAAmBtP,KAC9CgU,EAAWo8B,EAAc94C,kBAAkB0I,KAG3C4rC,EADY,MAAZ53B,EACgBpzB,KAAKosD,QAAQ50C,YAAYg4C,EAAepwC,EAAUgU,EAAUlkB,EAAK2B,WAAY0jB,EAAQ6H,GAEhG+N,EACJyB,gBACArjB,UACAzR,SAASsI,GAEMpf,KAAKosD,QAAQ50C,YAAYg4C,EAAepwC,EAAUY,EAAenK,aAAaP,WAAYpG,EAAK2B,WAAY0jB,EAAQ6H,GAGnHozB,GAEF99C,WACdy4B,EAAU2B,iBAAiBvd,uBAE3B2M,EAAWuO,EAAYO,uBAAuBG,EAAU4B,0BAC3Cx1B,eACTy0C,EAAgBhrD,KAAKosD,QAAQz3B,eAAeq2B,EAAe9vB,EAAUkB,IAOjF,OAHAlB,EACIiP,EAAU2B,iBAAiBvd,sBAC0B,MAAjDkb,EAAY8jB,eAAeryC,EAAOhL,KAAKkc,OACxC+d,EAAUoB,gBAAgByf,EAAe9vB,EAAUl7B,KAAKosD,QAAQv3B,iBAGxE+1B,EAjiBuB,qCC7BlC7jD,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAIC,EAASrB,EAAQ,KACjBuuB,EAAWvuB,EAAQ,KACnBsB,EAAStB,EAAQ,KA2DrBmB,EAAQslD,uBAvDoC,WACxC,SAAAA,IACIvsD,KAAK0vD,cAmDT,OA9CAnD,EAAuB5qD,UAAU+yB,iBAAmB,SAAUivB,GAC1D,IAAI/kC,EAAO+kC,EAAO/kC,KACdQ,EAAkCukC,EAAOhtC,UAC7CvP,EAAOiC,OAAOuV,GAAQyV,EAAS1V,OAAOU,aAClCT,GAAQyV,EAAS1V,OAAOgB,eACxBf,GAAQyV,EAAS1V,OAAOY,cAAe,6CAC3CnY,EAAOiC,OAAoB,cAAb+V,EAA0B,mDACxC,IAAIuwC,EAAYxoD,EAAO6W,QAAQhe,KAAK0vD,WAAYtwC,GAChD,GAAIuwC,EAAW,CACX,IAAIC,EAAUD,EAAU/wC,KACxB,GAAIA,GAAQyV,EAAS1V,OAAOU,aAAeuwC,GAAWv7B,EAAS1V,OAAOY,cAClEvf,KAAK0vD,WAAWtwC,GAAYiV,EAAS1V,OAAOa,mBAAmBJ,EAAUukC,EAAO9kC,aAAc8wC,EAAU9wC,mBAEvG,GAAID,GAAQyV,EAAS1V,OAAOY,eAC7BqwC,GAAWv7B,EAAS1V,OAAOU,mBACpBrf,KAAK0vD,WAAWtwC,QAEtB,GAAIR,GAAQyV,EAAS1V,OAAOY,eAC7BqwC,GAAWv7B,EAAS1V,OAAOgB,cAC3B3f,KAAK0vD,WAAWtwC,GAAYiV,EAAS1V,OAAOW,mBAAmBF,EAAUuwC,EAAU7wC,cAElF,GAAIF,GAAQyV,EAAS1V,OAAOgB,eAC7BiwC,GAAWv7B,EAAS1V,OAAOU,YAC3Brf,KAAK0vD,WAAWtwC,GAAYiV,EAAS1V,OAAOQ,iBAAiBC,EAAUukC,EAAO9kC,kBAE7E,CAAA,GAAID,GAAQyV,EAAS1V,OAAOgB,eAC7BiwC,GAAWv7B,EAAS1V,OAAOgB,cAI3B,MAAMvY,EAAO0Y,eAAe,mCACxB6jC,EACA,mBACAgM,GANJ3vD,KAAK0vD,WAAWtwC,GAAYiV,EAAS1V,OAAOa,mBAAmBJ,EAAUukC,EAAO9kC,aAAc8wC,EAAU7wC,eAU5G9e,KAAK0vD,WAAWtwC,GAAYukC,GAMpC4I,EAAuB5qD,UAAUqrD,WAAa,WAC1C,OAAO7lD,EAAO0oD,UAAU7vD,KAAK0vD,aAE1BnD,EArDgC,qCCP3CxlD,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAIiiC,EAAcrjC,EAAQ,KAQtBgqD,EAAwC,WACxC,SAAAA,KAcA,OATAA,EAAuBnuD,UAAU6sD,iBAAmB,SAAUpvC,GAC1D,OAAO,MAKX0wC,EAAuBnuD,UAAUouD,mBAAqB,SAAUv3C,EAAOjH,EAAOrD,GAC1E,OAAO,MAEJ4hD,EAfgC,GAiB3C7oD,EAAQ6oD,uBAAyBA,EAMjC7oD,EAAQqnD,yBAA2B,IAAIwB,EAoDvC7oD,EAAQsnD,6BA5C0C,WAM9C,SAAAA,EAAsCyB,EAAS/E,EAAYgF,QACvB,IAA5BA,IAAsCA,EAA0B,MACpEjwD,KAAKgwD,QAAUA,EACfhwD,KAAKirD,WAAaA,EAClBjrD,KAAKiwD,wBAA0BA,EAgCnC,OA3BA1B,EAA6B5sD,UAAU6sD,iBAAmB,SAAUpvC,GAChE,IAAIjL,EAAOnU,KAAKirD,WAAWrf,gBAC3B,GAAIz3B,EAAKua,mBAAmBtP,GACxB,OAAOjL,EAAKoU,UAAU7R,kBAAkB0I,GAGxC,IAAIouC,EAA6C,MAAhCxtD,KAAKiwD,wBAChB,IAAI9mB,EAAYhb,UAAUnuB,KAAKiwD,yBAAyB,GAAM,GAC9DjwD,KAAKirD,WAAWnf,iBACtB,OAAO9rC,KAAKgwD,QAAQ/B,kBAAkB7uC,EAAUouC,IAMxDe,EAA6B5sD,UAAUouD,mBAAqB,SAAUv3C,EAAOjH,EAAOrD,GAChF,IAAIgiD,EAAqD,MAAhClwD,KAAKiwD,wBACxBjwD,KAAKiwD,wBACLjwD,KAAKirD,WAAWlf,wBAClBokB,EAAQnwD,KAAKgwD,QAAQI,iBAAiBF,EAAoB3+C,EAAO,EAAGrD,EAASsK,GACjF,OAAqB,IAAjB23C,EAAMrtD,OACC,KAGAqtD,EAAM,IAGd5B,EA1CsC,qCCxCjDxnD,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAIwM,EAAS5N,EAAQ,KACjBuuB,EAAWvuB,EAAQ,KACnBqB,EAASrB,EAAQ,KA4GrBmB,EAAQkkD,eApG4B,WAKhC,SAAAA,EAAwBb,GACpBtqD,KAAKsqD,OAASA,EAKdtqD,KAAK6xB,OAAS7xB,KAAKsqD,OAAO9mB,iBAAiBzO,WAuF/C,OAvEAo2B,EAAexpD,UAAUqqD,yBAA2B,SAAUF,EAAS/hB,EAAYsmB,GAC/E,IAAItwD,EAAQC,KACR8oB,KACAwnC,KAYJ,OAXAxE,EAAQ9+C,QAAQ,SAAU22C,GAClBA,EAAO/kC,OAASyV,EAAS1V,OAAOgB,eAChC5f,EAAM8xB,OAAOpd,oBAAoBkvC,EAAO7kC,QAAS6kC,EAAO9kC,eACxDyxC,EAAMrrD,KAAKovB,EAAS1V,OAAOiB,iBAAiB+jC,EAAOhtC,UAAWgtC,EAAO9kC,iBAG7E7e,KAAKuwD,uBAAuBznC,EAAQuL,EAAS1V,OAAOY,cAAeusC,EAASuE,EAAoBtmB,GAChG/pC,KAAKuwD,uBAAuBznC,EAAQuL,EAAS1V,OAAOU,YAAaysC,EAASuE,EAAoBtmB,GAC9F/pC,KAAKuwD,uBAAuBznC,EAAQuL,EAAS1V,OAAOkB,YAAaywC,EAAOD,EAAoBtmB,GAC5F/pC,KAAKuwD,uBAAuBznC,EAAQuL,EAAS1V,OAAOgB,cAAemsC,EAASuE,EAAoBtmB,GAChG/pC,KAAKuwD,uBAAuBznC,EAAQuL,EAAS1V,OAAOO,MAAO4sC,EAASuE,EAAoBtmB,GACjFjhB,GAYXqiC,EAAexpD,UAAU4uD,uBAAyB,SAAUznC,EAAQjM,EAAWivC,EAAS0E,EAAezmB,GACnG,IAAIhqC,EAAQC,KACRywD,EAAkB3E,EAAQ1yB,OAAO,SAAUuqB,GAAU,OAAOA,EAAO/kC,OAAS/B,IAChF4zC,EAAgBjkD,KAAKxM,KAAK0wD,gBAAgBpnD,KAAKtJ,OAC/CywD,EAAgBzjD,QAAQ,SAAU22C,GAC9B,IAAIgN,EAAqB5wD,EAAM6wD,yBAAyBjN,EAAQ5Z,GAChEymB,EAAcxjD,QAAQ,SAAUs+C,GACxBA,EAAa7H,WAAWE,EAAO/kC,OAC/BkK,EAAO7jB,KAAKqmD,EAAa5H,YAAYiN,EAAoB5wD,EAAMuqD,cAW/Ea,EAAexpD,UAAUivD,yBAA2B,SAAUjN,EAAQ5Z,GAClE,MAAoB,UAAhB4Z,EAAO/kC,MAAoC,kBAAhB+kC,EAAO/kC,KAC3B+kC,GAGPA,EAAO5kC,SAAWgrB,EAAWxxB,wBAE7BorC,EAAOhtC,UAAWgtC,EAAO9kC,aAAc7e,KAAK6xB,QACrC8xB,IASfwH,EAAexpD,UAAU+uD,gBAAkB,SAAU9kD,EAAGC,GACpD,GAAmB,MAAfD,EAAE+K,WAAoC,MAAf9K,EAAE8K,UACzB,MAAMxP,EAAO2Y,eAAe,sCAEhC,IAAI+wC,EAAW,IAAIn9C,EAAOmB,UAAUjJ,EAAE+K,UAAW/K,EAAEiT,cAC/CiyC,EAAW,IAAIp9C,EAAOmB,UAAUhJ,EAAE8K,UAAW9K,EAAEgT,cACnD,OAAO7e,KAAK6xB,OAAO5d,QAAQ48C,EAAUC,IAElC3F,EAlGwB,qCCXnCpkD,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAIC,EAASrB,EAAQ,KACjBsB,EAAStB,EAAQ,KACjBoV,EAASpV,EAAQ,KACjBirD,EAAkBjrD,EAAQ,KAC1B2P,EAAkB3P,EAAQ,KAC1Bka,EAAiBla,EAAQ,KAof7BmB,EAAQw+C,UA5euB,WAC3B,SAAAA,IAQIzlD,KAAKgxD,eAAiBD,EAAgBE,cAAc7kC,MASpDpsB,KAAKkxD,cACLlxD,KAAKmxD,cAAgB,EAudzB,OA/cA1L,EAAU9jD,UAAU8lD,YAAc,SAAUv4C,GACxC,OAAO,IAAIkiD,EAAaliD,EAAMlP,OAUlCylD,EAAU9jD,UAAUkkD,aAAe,SAAU32C,EAAM+a,EAAMe,EAASsmB,GAC9DlqC,EAAOiC,OAAO2hB,EAAUhrB,KAAKmxD,aAAc,qDAC3Bn1C,IAAZs1B,IACAA,GAAU,GAEdtxC,KAAKkxD,WAAWjsD,MACZiK,KAAMA,EACN+a,KAAMA,EACNe,QAASA,EACTsmB,QAASA,IAETA,IACAtxC,KAAKgxD,eAAiBhxD,KAAKgxD,eAAeK,SAASniD,EAAM+a,IAE7DjqB,KAAKmxD,aAAenmC,GASxBy6B,EAAU9jD,UAAUokD,SAAW,SAAU72C,EAAM6a,EAAiBiB,GAC5D5jB,EAAOiC,OAAO2hB,EAAUhrB,KAAKmxD,aAAc,gDAC3CnxD,KAAKkxD,WAAWjsD,MACZiK,KAAMA,EACNujB,SAAU1I,EACViB,QAASA,EACTsmB,SAAS,IAEbtxC,KAAKgxD,eAAiBhxD,KAAKgxD,eAAeM,UAAUpiD,EAAM6a,GAC1D/pB,KAAKmxD,aAAenmC,GAMxBy6B,EAAU9jD,UAAUwkD,SAAW,SAAUn7B,GACrC,IAAK,IAAIriB,EAAI,EAAGA,EAAI3I,KAAKkxD,WAAWpuD,OAAQ6F,IAAK,CAC7C,IAAI4oD,EAASvxD,KAAKkxD,WAAWvoD,GAC7B,GAAI4oD,EAAOvmC,UAAYA,EACnB,OAAOumC,EAGf,OAAO,MAUX9L,EAAU9jD,UAAUykD,YAAc,SAAUp7B,GAKxC,IAAIjrB,EAAQC,KACRyY,EAAMzY,KAAKkxD,WAAWpJ,UAAU,SAAUv6C,GAC1C,OAAOA,EAAEyd,UAAYA,IAEzB5jB,EAAOiC,OAAOoP,GAAO,EAAG,gDACxB,IAAI+4C,EAAgBxxD,KAAKkxD,WAAWz4C,GACpCzY,KAAKkxD,WAAW9c,OAAO37B,EAAK,GAI5B,IAHA,IAAIg5C,EAAyBD,EAAclgB,QACvCogB,GAAsC,EACtC/oD,EAAI3I,KAAKkxD,WAAWpuD,OAAS,EAC1B2uD,GAA0B9oD,GAAK,GAAG,CACrC,IAAIgpD,EAAe3xD,KAAKkxD,WAAWvoD,GAC/BgpD,EAAargB,UACT3oC,GAAK8P,GACLzY,KAAK4xD,oBAAoBD,EAAcH,EAActiD,MAErDuiD,GAAyB,EAEpBD,EAActiD,KAAKuD,SAASk/C,EAAaziD,QAE9CwiD,GAAsC,IAG9C/oD,IAEJ,GAAK8oD,EAGA,CAAA,GAAIC,EAGL,OADA1xD,KAAK6xD,cACE,EAIP,GAAIL,EAAcvnC,KACdjqB,KAAKgxD,eAAiBhxD,KAAKgxD,eAAe5K,YAAYoL,EAActiD,UAEnE,CAED/H,EAAO6F,QADQwkD,EAAc/+B,SACJ,SAAU9b,GAC/B5W,EAAMixD,eAAiBjxD,EAAMixD,eAAe5K,YAAYoL,EAActiD,KAAKqC,MAAMoF,MAGzF,OAAO,EAlBP,OAAO,GA4Bf8uC,EAAU9jD,UAAUmwD,qBAAuB,SAAU5iD,GACjD,OAAOlP,KAAKgxD,eAAee,gBAAgB7iD,IAY/Cu2C,EAAU9jD,UAAUqoC,uBAAyB,SAAUgoB,EAAUtG,EAAqB/C,EAAmBsJ,GACrG,GAAKtJ,GAAsBsJ,EAqBtB,CACD,IAAIjmC,EAAQhsB,KAAKgxD,eAAekB,mBAAmBF,GACnD,IAAKC,GAAuBjmC,EAAMta,UAC9B,OAAOg6C,EAIP,GAAKuG,GACsB,MAAvBvG,GACC1/B,EAAMmmC,iBAAiBj3C,EAAOhL,KAAKkc,OAGnC,CACD,IAMIgmC,EAAc3M,EAAU4M,WAAWryD,KAAKkxD,WAN/B,SAAUtU,GACnB,OAASA,EAAMtL,SAAW2gB,MACpBtJ,KACIA,EAAkBt+C,QAAQuyC,EAAM5xB,YACrC4xB,EAAM1tC,KAAKuD,SAASu/C,IAAaA,EAASv/C,SAASmqC,EAAM1tC,QAEF8iD,GAC5DM,EAAe5G,GAAuB1rC,EAAenK,aAAaP,WACtE,OAAO88C,EAAYtpD,MAAMwpD,GAXzB,OAAO,KA9Bf,IAAIC,EAAgBvyD,KAAKgxD,eAAee,gBAAgBC,GACxD,GAAqB,MAAjBO,EACA,OAAOA,EAGP,IAAIC,EAAWxyD,KAAKgxD,eAAekB,mBAAmBF,GACtD,GAAIQ,EAAS9gD,UACT,OAAOg6C,EAEN,GAA2B,MAAvBA,GACJ8G,EAASL,iBAAiBj3C,EAAOhL,KAAKkc,OAItC,CAED,OAAOomC,EAAS1pD,MADZwpD,EAAe5G,GAAuB1rC,EAAenK,aAAaP,YAHtE,OAAO,MA0CvBmwC,EAAU9jD,UAAUuoC,0BAA4B,SAAU8nB,EAAUS,GAChE,IAAIC,EAAmB1yC,EAAenK,aAAaP,WAC/Cq9C,EAAc3yD,KAAKgxD,eAAee,gBAAgBC,GACtD,GAAIW,EAOA,OANKA,EAAYp8C,cAEbo8C,EAAY36C,aAAavC,EAAgBJ,eAAgB,SAAUsB,EAAWic,GAC1E8/B,EAAmBA,EAAiB37C,qBAAqBJ,EAAWic,KAGrE8/B,EAEN,GAAID,EAAwB,CAG7B,IAAIG,EAAU5yD,KAAKgxD,eAAekB,mBAAmBF,GAWrD,OAVAS,EAAuBz6C,aAAavC,EAAgBJ,eAAgB,SAAUsB,EAAWsB,GACrF,IAAI9D,EAAOy+C,EACNV,mBAAmB,IAAIh3C,EAAOhL,KAAKyG,IACnC7N,MAAMmP,GACXy6C,EAAmBA,EAAiB37C,qBAAqBJ,EAAWxC,KAGxEy+C,EAAQC,sBAAsB7lD,QAAQ,SAAUiK,GAC5Cy7C,EAAmBA,EAAiB37C,qBAAqBE,EAAUzT,KAAMyT,EAAU9C,QAEhFu+C,EASP,OAJY1yD,KAAKgxD,eAAekB,mBAAmBF,GAC7Ca,sBAAsB7lD,QAAQ,SAAUiK,GAC1Cy7C,EAAmBA,EAAiB37C,qBAAqBE,EAAUzT,KAAMyT,EAAU9C,QAEhFu+C,GAuBfjN,EAAU9jD,UAAUksD,mCAAqC,SAAUmE,EAAU9/B,EAAW4gC,EAAmBC,GACvG3rD,EAAOiC,OAAOypD,GAAqBC,EAAoB,6DACvD,IAAI7jD,EAAO8iD,EAASzgD,MAAM2gB,GAC1B,GAAIlyB,KAAKgxD,eAAemB,iBAAiBjjD,GAGrC,OAAO,KAIP,IAAI8jD,EAAahzD,KAAKgxD,eAAekB,mBAAmBhjD,GACxD,OAAI8jD,EAAWthD,UAEJqhD,EAAmBn8C,SAASsb,GAS5B8gC,EAAWlqD,MAAMiqD,EAAmBn8C,SAASsb,KAahEuzB,EAAU9jD,UAAUssD,kBAAoB,SAAU+D,EAAU5yC,EAAU2zC,GAClE,IAAI7jD,EAAO8iD,EAASzgD,MAAM6N,GACtBmzC,EAAgBvyD,KAAKgxD,eAAee,gBAAgB7iD,GACxD,GAAqB,MAAjBqjD,EACA,OAAOA,EAGP,GAAIQ,EAAmBrkC,mBAAmBtP,GAAW,CAEjD,OADiBpf,KAAKgxD,eAAekB,mBAAmBhjD,GACtCpG,MAAMiqD,EAAmBxqC,UAAU7R,kBAAkB0I,IAGvE,OAAO,MAYnBqmC,EAAU9jD,UAAU4rD,eAAiB,SAAUr+C,GAC3C,OAAOlP,KAAKgxD,eAAee,gBAAgB7iD,IAc/Cu2C,EAAU9jD,UAAUyuD,iBAAmB,SAAU4B,EAAU9B,EAAoB12C,EAAW7B,EAAOzJ,EAASsK,GACtG,IAAIy6C,EACAjnC,EAAQhsB,KAAKgxD,eAAekB,mBAAmBF,GAC/CO,EAAgBvmC,EAAM+lC,gBAAgB72C,EAAOhL,KAAKkc,OACtD,GAAqB,MAAjBmmC,EACAU,EAAYV,MAEX,CAAA,GAA0B,MAAtBrC,EAKL,SAJA+C,EAAYjnC,EAAMljB,MAAMonD,GAO5B,IADA+C,EAAYA,EAAUh5C,UAAUzB,IACjB9G,WAAcuhD,EAAU18C,aAgBnC,SATA,IANA,IAAI45C,KACA99C,EAAMmG,EAAMqI,aACZglB,EAAO33B,EACL+kD,EAAUl5C,uBAAuBP,EAAWhB,GAC5Cy6C,EAAU15C,gBAAgBC,EAAWhB,GACvCmB,EAAOksB,EAAKhsB,UACTF,GAAQw2C,EAAMrtD,OAAS6U,GACG,IAAzBtF,EAAIsH,EAAMH,IACV22C,EAAMlrD,KAAK0U,GAEfA,EAAOksB,EAAKhsB,UAEhB,OAAOs2C,GAYf1K,EAAU9jD,UAAUiwD,oBAAsB,SAAUsB,EAAahkD,GAC7D,OAAIgkD,EAAYjpC,KACLipC,EAAYhkD,KAAKuD,SAASvD,KAIxB/H,EAAOgsD,QAAQD,EAAYzgC,SAAU,SAAUG,EAAWjc,GAC/D,OAAOu8C,EAAYhkD,KAAKqC,MAAMoF,GAAWlE,SAASvD,MAQ9Du2C,EAAU9jD,UAAUkwD,WAAa,WAC7B7xD,KAAKgxD,eAAiBvL,EAAU4M,WAAWryD,KAAKkxD,WAAYzL,EAAU2N,eAAgBl4C,EAAOhL,KAAKkc,OAE9FpsB,KAAKmxD,aADLnxD,KAAKkxD,WAAWpuD,OAAS,EACL9C,KAAKkxD,WAAWlxD,KAAKkxD,WAAWpuD,OAAS,GAAGkoB,SAG3C,GAU7By6B,EAAU2N,eAAiB,SAAUxW,GACjC,OAAOA,EAAMtL,SAYjBmU,EAAU4M,WAAa,SAAUgB,EAAQj6B,EAAQk6B,GAE7C,IAAK,IADDC,EAAgBxC,EAAgBE,cAAc7kC,MACzCzjB,EAAI,EAAGA,EAAI0qD,EAAOvwD,SAAU6F,EAAG,CACpC,IAAIi0C,EAAQyW,EAAO1qD,GAInB,GAAIywB,EAAOwjB,GAAQ,CACf,IAAIgS,EAAYhS,EAAM1tC,KAClByC,OAAe,EACnB,GAAIirC,EAAM3yB,KACFqpC,EAAS7gD,SAASm8C,IAClBj9C,EAAeuJ,EAAOhL,KAAKyB,aAAa2hD,EAAU1E,GAClD2E,EAAgBA,EAAclC,SAAS1/C,EAAcirC,EAAM3yB,OAEtD2kC,EAAUn8C,SAAS6gD,KACxB3hD,EAAeuJ,EAAOhL,KAAKyB,aAAai9C,EAAW0E,GACnDC,EAAgBA,EAAclC,SAASn2C,EAAOhL,KAAKkc,MAAOwwB,EAAM3yB,KAAKrT,SAASjF,SAMjF,CAAA,IAAIirC,EAAMnqB,SAwBX,MAAMrrB,EAAO0Y,eAAe,8CAvB5B,GAAIwzC,EAAS7gD,SAASm8C,GAClBj9C,EAAeuJ,EAAOhL,KAAKyB,aAAa2hD,EAAU1E,GAClD2E,EAAgBA,EAAcjC,UAAU3/C,EAAcirC,EAAMnqB,eAE3D,GAAIm8B,EAAUn8C,SAAS6gD,GAExB,IADA3hD,EAAeuJ,EAAOhL,KAAKyB,aAAai9C,EAAW0E,IAClC5hD,UACb6hD,EAAgBA,EAAcjC,UAAUp2C,EAAOhL,KAAKkc,MAAOwwB,EAAMnqB,cAEhE,CACD,IAAIlhB,EAAQpK,EAAO6W,QAAQ4+B,EAAMnqB,SAAU9gB,EAAahB,YACxD,GAAIY,EAAO,CAEP,IAAIiiD,EAAWjiD,EAAMqF,SAASjF,EAAad,YAC3C0iD,EAAgBA,EAAclC,SAASn2C,EAAOhL,KAAKkc,MAAOonC,OAalF,OAAOD,GAEJ9N,EA1emB,GAmf9B,IAAI2L,EAA8B,WAK9B,SAAAA,EAAsBliD,EAAM05C,GACxB5oD,KAAKyzD,UAAYvkD,EACjBlP,KAAK0zD,WAAa9K,EA4FtB,OAhFAwI,EAAazvD,UAAUqoC,uBAAyB,SAAU0hB,EAAqB/C,EAAmBsJ,GAC9F,OAAOjyD,KAAK0zD,WAAW1pB,uBAAuBhqC,KAAKyzD,UAAW/H,EAAqB/C,EAAmBsJ,IAS1Gb,EAAazvD,UAAUuoC,0BAA4B,SAAUuoB,GACzD,OAAOzyD,KAAK0zD,WAAWxpB,0BAA0BlqC,KAAKyzD,UAAWhB,IAqBrErB,EAAazvD,UAAUksD,mCAAqC,SAAU3+C,EAAM4jD,EAAmBC,GAC3F,OAAO/yD,KAAK0zD,WAAW7F,mCAAmC7tD,KAAKyzD,UAAWvkD,EAAM4jD,EAAmBC,IAUvG3B,EAAazvD,UAAU4rD,eAAiB,SAAUr+C,GAC9C,OAAOlP,KAAK0zD,WAAWnG,eAAevtD,KAAKyzD,UAAUliD,MAAMrC,KAa/DkiD,EAAazvD,UAAUyuD,iBAAmB,SAAUF,EAAoB12C,EAAW7B,EAAOzJ,EAASsK,GAC/F,OAAOxY,KAAK0zD,WAAWtD,iBAAiBpwD,KAAKyzD,UAAWvD,EAAoB12C,EAAW7B,EAAOzJ,EAASsK,IAU3G44C,EAAazvD,UAAUssD,kBAAoB,SAAU7uC,EAAUu0C,GAC3D,OAAO3zD,KAAK0zD,WAAWzF,kBAAkBjuD,KAAKyzD,UAAWr0C,EAAUu0C,IAQvEvC,EAAazvD,UAAU4P,MAAQ,SAAUoF,GACrC,OAAO,IAAIy6C,EAAapxD,KAAKyzD,UAAUliD,MAAMoF,GAAY3W,KAAK0zD,aAE3DtC,EAnGsB,GAqGjCnqD,EAAQmqD,aAAeA,oCCtmBvBrqD,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAI+9C,EAAkBn/C,EAAQ,KAC1BoV,EAASpV,EAAQ,KACjBqB,EAASrB,EAAQ,KACjB4N,EAAS5N,EAAQ,KACjB2P,EAAkB3P,EAAQ,KAC1BsB,EAAStB,EAAQ,KAgMrBmB,EAAQgqD,cAtL2B,WAC/B,SAAAA,EAAuByC,GACnB1zD,KAAK0zD,WAAaA,EAkLtB,OA3KAzC,EAActvD,UAAU0vD,SAAW,SAAUniD,EAAMiF,GAC/C,GAAIjF,EAAKwC,UACL,OAAO,IAAIu/C,EAAc,IAAIhM,EAAgBzyB,cAAcre,IAG3D,IAAIy/C,EAAW5zD,KAAK0zD,WAAW1gC,yBAAyB9jB,GACxD,GAAgB,MAAZ0kD,EAAkB,CAClB,IAAIC,EAAeD,EAAS1kD,KACxBhI,EAAQ0sD,EAAS1sD,MACjByK,EAAeuJ,EAAOhL,KAAKyB,aAAakiD,EAAc3kD,GAE1D,OADAhI,EAAQA,EAAMsQ,YAAY7F,EAAcwC,GACjC,IAAI88C,EAAcjxD,KAAK0zD,WAAWlqD,IAAIqqD,EAAc3sD,IAG3D,IAAI+rB,EAAU,IAAIgyB,EAAgBzyB,cAAcre,GAEhD,OAAO,IAAI88C,EADQjxD,KAAK0zD,WAAWrgC,QAAQnkB,EAAM+jB,KAU7Dg+B,EAActvD,UAAU2vD,UAAY,SAAUpiD,EAAMqb,GAChD,IAAIupC,EAAW9zD,KAIf,OAHAmH,EAAO6F,QAAQud,EAAS,SAAUnL,EAAUjL,GACxC2/C,EAAWA,EAASzC,SAASniD,EAAKqC,MAAM6N,GAAWjL,KAEhD2/C,GASX7C,EAActvD,UAAUykD,YAAc,SAAUl3C,GAC5C,GAAIA,EAAKwC,UACL,OAAOu/C,EAAc7kC,MAIrB,OAAO,IAAI6kC,EADQjxD,KAAK0zD,WAAWrgC,QAAQnkB,EAAM+1C,EAAgBzyB,cAAcpG,SAWvF6kC,EAActvD,UAAUwwD,iBAAmB,SAAUjjD,GACjD,OAAqC,MAA9BlP,KAAK+xD,gBAAgB7iD,IAShC+hD,EAActvD,UAAUowD,gBAAkB,SAAU7iD,GAChD,IAAI0kD,EAAW5zD,KAAK0zD,WAAW1gC,yBAAyB9jB,GACxD,OAAgB,MAAZ0kD,EACO5zD,KAAK0zD,WACPxyD,IAAI0yD,EAAS1kD,MACb0H,SAASsE,EAAOhL,KAAKyB,aAAaiiD,EAAS1kD,KAAMA,IAG/C,MAQf+hD,EAActvD,UAAUkxD,oBAAsB,WAC1C,IAAIpgC,KACAte,EAAOnU,KAAK0zD,WAAWxsD,MAgB3B,OAfY,MAARiN,EAEKA,EAAKoC,cACNpC,EAAK6D,aAAavC,EAAgBJ,eAAgB,SAAUsB,EAAWsB,GACnEwa,EAASxtB,KAAK,IAAIyO,EAAOmB,UAAU8B,EAAWsB,MAKtDjY,KAAK0zD,WAAWjhC,SAASrZ,iBAAiB,SAAUzC,EAAWuc,GACpC,MAAnBA,EAAUhsB,OACVurB,EAASxtB,KAAK,IAAIyO,EAAOmB,UAAU8B,EAAWuc,EAAUhsB,UAI7DurB,GAMXw+B,EAActvD,UAAUuwD,mBAAqB,SAAUhjD,GACnD,GAAIA,EAAKwC,UACL,OAAO1R,KAGP,IAAIuyD,EAAgBvyD,KAAK+xD,gBAAgB7iD,GACzC,OACW,IAAI+hD,EADM,MAAjBsB,EACyB,IAAItN,EAAgBzyB,cAAc+/B,GAGlCvyD,KAAK0zD,WAAWzgC,QAAQ/jB,KAQ7D+hD,EAActvD,UAAU+P,QAAU,WAC9B,OAAO1R,KAAK0zD,WAAWhiD,WAQ3Bu/C,EAActvD,UAAUmH,MAAQ,SAAUqL,GACtC,OAAO88C,EAAc8C,mBAAmB74C,EAAOhL,KAAKkc,MAAOpsB,KAAK0zD,WAAYv/C,IAKhF88C,EAAc7kC,MAAQ,IAAI6kC,EAAc,IAAIhM,EAAgBzyB,cAAc,OAQ1Ey+B,EAAc8C,mBAAqB,SAAUpiD,EAAci3C,EAAWz0C,GAClE,GAAuB,MAAnBy0C,EAAU1hD,MAEV,OAAOiN,EAAKqD,YAAY7F,EAAci3C,EAAU1hD,OAGhD,IAAI8sD,EAAkB,KAgBtB,OAfApL,EAAUn2B,SAASrZ,iBAAiB,SAAUgG,EAAU8T,GACnC,cAAb9T,GAGAhY,EAAOiC,OAA2B,OAApB6pB,EAAUhsB,MAAgB,6CACxC8sD,EAAkB9gC,EAAUhsB,OAG5BiN,EAAO88C,EAAc8C,mBAAmBpiD,EAAaJ,MAAM6N,GAAW8T,EAAW/e,KAIpFA,EAAKyC,SAASjF,GAAcD,WAAiC,OAApBsiD,IAC1C7/C,EAAOA,EAAKqD,YAAY7F,EAAaJ,MAAM,aAAcyiD,IAEtD7/C,GAGR88C,EApLuB,qCChBlClqD,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAI8Y,EAAiBla,EAAQ,KAkB7BmB,EAAQ8gB,eAZ4B,WAChC,SAAAA,IACI/nB,KAAKi0D,UAAYj0C,EAAenK,aAAaP,WAQjD,OANAyS,EAAepmB,UAAU4mB,QAAU,SAAUrZ,GACzC,OAAOlP,KAAKi0D,UAAUr9C,SAAS1H,IAEnC6Y,EAAepmB,UAAU6oB,eAAiB,SAAUtb,EAAMglD,GACtDl0D,KAAKi0D,UAAYj0D,KAAKi0D,UAAUz8C,YAAYtI,EAAMglD,IAE/CnsC,EAVwB,qCCPnChhB,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAIC,EAASrB,EAAQ,KAiErBmB,EAAQ0f,kBA7D+B,WAInC,SAAAA,EAA2BwtC,GACvBn0D,KAAKm0D,KAAOA,EAsDhB,OAhDAxtC,EAAkBhlB,UAAU4wC,SAAW,SAAUD,GAC7C,OAAOtyC,KAAKm0D,KAAe,SAAY,SAAE7hB,GAAclhB,KAAK,KAE5D,SAAUvnB,GAGN,OAAIA,GAAwB,+BAAfA,EAAMmF,MACf7H,EAAO/B,IAAI,kEACJ,MAGAisB,QAAQT,OAAO/mB,MAIlC8c,EAAkBhlB,UAAU4lB,uBAAyB,SAAU6gC,GAG3DpoD,KAAKm0D,KAAe,SAAwB,qBAAE/L,IAElDzhC,EAAkBhlB,UAAUyyD,0BAA4B,SAAUhM,GAC9DpoD,KAAKm0D,KAAe,SAA2B,wBAAE/L,IAErDzhC,EAAkBhlB,UAAUsxC,sBAAwB,WAChD,IAAIohB,EAAe,0DACfr0D,KAAKm0D,KAAK3wD,KACV,iFAoBJ2D,EAAO6C,KAjBHqqD,GADA,eAAgBr0D,KAAKm0D,KAAK/sC,QAEtB,uJAIC,mBAAoBpnB,KAAKm0D,KAAK/sC,QAE/B,2JAMA,oKAMLT,EA3D2B,qCCLtC5f,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAIC,EAASrB,EAAQ,KACjBsB,EAAStB,EAAQ,KAqBrBmB,EAAQkuB,gBAf6B,WACjC,SAAAA,IACIn1B,KAAKs0D,aAWT,OATAn/B,EAAgBxzB,UAAUosB,iBAAmB,SAAUvqB,EAAM+wD,QAC1C,IAAXA,IAAqBA,EAAS,GAC7BntD,EAAOqL,SAASzS,KAAKs0D,UAAW9wD,KACjCxD,KAAKs0D,UAAU9wD,GAAQ,GAC3BxD,KAAKs0D,UAAU9wD,IAAS+wD,GAE5Bp/B,EAAgBxzB,UAAUT,IAAM,WAC5B,OAAOiG,EAAOqtD,SAASx0D,KAAKs0D,YAEzBn/B,EAbyB,qCCRpCpuB,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAIC,EAASrB,EAAQ,KACjBsB,EAAStB,EAAQ,KACjB2f,EAAkB3f,EAAQ,KAI1B2uD,EAAuB,IACvBC,EAAuB,IAyC3BztD,EAAQ2gB,cAnC2B,WAK/B,SAAAA,EAAuB+sC,EAAY5tC,GAC/B/mB,KAAK+mB,QAAUA,EACf/mB,KAAK40D,kBACL50D,KAAKkmB,eAAiB,IAAIT,EAAgB8H,cAAconC,GACxD,IAAI1kD,EAAUwkD,GACTC,EAAuBD,GAAwBppD,KAAKwmC,SACzDzqC,EAAO2I,sBAAsB/P,KAAK60D,aAAavrD,KAAKtJ,MAAOqL,KAAKC,MAAM2E,IAsB1E,OApBA2X,EAAcjmB,UAAUqsB,YAAc,SAAUJ,GAC5C5tB,KAAK40D,eAAehnC,IAAQ,GAEhChG,EAAcjmB,UAAUkzD,aAAe,WACnC,IAAI90D,EAAQC,KACRqtB,EAAQrtB,KAAKkmB,eAAehlB,MAC5B4zD,KACAC,GAAoB,EACxB5tD,EAAO6F,QAAQqgB,EAAO,SAAUO,EAAM1mB,GAC9BA,EAAQ,GAAKC,EAAOsL,SAAS1S,EAAM60D,eAAgBhnC,KACnDknC,EAAclnC,GAAQ1mB,EACtB6tD,GAAoB,KAGxBA,GACA/0D,KAAK+mB,QAAQ0pB,YAAYqkB,GAG7B1tD,EAAO2I,sBAAsB/P,KAAK60D,aAAavrD,KAAKtJ,MAAOqL,KAAKC,MAAsB,EAAhBD,KAAKwmC,SAnCvD,OAqCjBjqB,EAjCuB,qCCdlC7gB,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAIC,EAASrB,EAAQ,KA4GrBmB,EAAQmf,WA7FwB,WAC5B,SAAAA,IAKIpmB,KAAKg1D,eAMLh1D,KAAKi1D,gBAAkB,EA+E3B,OA1EA7uC,EAAWzkB,UAAUupB,YAAc,SAAUgqC,GAGzC,IAAK,IADDC,EAAW,KACNxsD,EAAI,EAAGA,EAAIusD,EAAcpyD,OAAQ6F,IAAK,CAC3C,IAAIurC,EAAYghB,EAAcvsD,GAC1BysD,EAAYlhB,EAAU6Q,UACT,OAAboQ,GAAsBC,EAAU9iD,OAAO6iD,EAASpQ,aAChD/kD,KAAKg1D,YAAY/vD,KAAKkwD,GACtBA,EAAW,MAEE,OAAbA,IACAA,EAAW,IAAIE,EAAUD,IAE7BD,EAAS1sB,IAAIyL,GAEbihB,GACAn1D,KAAKg1D,YAAY/vD,KAAKkwD,IAY9B/uC,EAAWzkB,UAAUqrB,kBAAoB,SAAU9d,EAAMgmD,GACrDl1D,KAAKkrB,YAAYgqC,GACjBl1D,KAAKs1D,oCAAoC,SAAUF,GAC/C,OAAOA,EAAU9iD,OAAOpD,MAYhCkX,EAAWzkB,UAAUonB,0BAA4B,SAAUkD,EAAaipC,GACpEl1D,KAAKkrB,YAAYgqC,GACjBl1D,KAAKs1D,oCAAoC,SAAUF,GAC/C,OAAOA,EAAU3iD,SAASwZ,IAAgBA,EAAYxZ,SAAS2iD,MAOvEhvC,EAAWzkB,UAAU2zD,oCAAsC,SAAUxiC,GACjE9yB,KAAKi1D,kBAEL,IAAK,IADDM,GAAU,EACL5sD,EAAI,EAAGA,EAAI3I,KAAKg1D,YAAYlyD,OAAQ6F,IAAK,CAC9C,IAAI6sD,EAAYx1D,KAAKg1D,YAAYrsD,GACjC,GAAI6sD,EAAW,CAEP1iC,EADY0iC,EAAUzQ,YAEtB/kD,KAAKg1D,YAAYrsD,GAAG8sD,QACpBz1D,KAAKg1D,YAAYrsD,GAAK,MAGtB4sD,GAAU,GAIlBA,IACAv1D,KAAKg1D,gBAETh1D,KAAKi1D,mBAEF7uC,EA3FoB,GAkG/B,IAAIivC,EAA2B,WAC3B,SAAAA,EAAmBl5C,GACfnc,KAAKmc,MAAQA,EAKbnc,KAAK01D,WA8BT,OAzBAL,EAAU1zD,UAAU8mC,IAAM,SAAUyL,GAChCl0C,KAAK01D,QAAQzwD,KAAKivC,IAKtBmhB,EAAU1zD,UAAU8zD,MAAQ,WACxB,IAAK,IAAI9sD,EAAI,EAAGA,EAAI3I,KAAK01D,QAAQ5yD,OAAQ6F,IAAK,CAC1C,IAAIurC,EAAYl0C,KAAK01D,QAAQ/sD,GAC7B,GAAkB,OAAdurC,EAAoB,CACpBl0C,KAAK01D,QAAQ/sD,GAAK,KAClB,IAAIgtD,EAAUzhB,EAAU2P,iBACpB18C,EAAO6B,QACP7B,EAAO/B,IAAI,UAAY8uC,EAAU3lC,YAErCpH,EAAOoI,eAAeomD,MAOlCN,EAAU1zD,UAAUojD,QAAU,WAC1B,OAAO/kD,KAAKmc,OAETk5C,EArCmB,GAuC9BpuD,EAAQouD,UAAYA,oCCzJpBtuD,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAsM,EAAA1N,EAAA,GACA8vD,EAAA9vD,EAAA,KACAqB,EAAArB,EAAA,KAIAqoC,EAAA,SAAAp6B,GAEA,SAAAo6B,IACA,IACA0nB,EACAC,EAFA/1D,EAAAgU,EAAA6G,KAAA5a,MAAA,aAAAA,KAqCA,MAlCA,oBAAA+K,eACA,IAAAA,SAAAQ,wBACA,IAAAR,SAAA,QAEA+qD,EAAA,mBACAD,EAAA,eAEA,IAAA9qD,SAAA,WACA+qD,EAAA,sBACAD,EAAA,kBAEA,IAAA9qD,SAAA,UACA+qD,EAAA,qBACAD,EAAA,iBAEA,IAAA9qD,SAAA,eACA+qD,EAAA,yBACAD,EAAA,iBAOA91D,EAAAytC,UAAA,EACAsoB,GACA/qD,SAAAQ,iBAAAuqD,EAAA,WACA,IAAAxkB,GAAAvmC,SAAA8qD,GACAvkB,IAAAvxC,EAAAytC,WACAztC,EAAAytC,SAAA8D,EACAvxC,EAAAg0C,QAAA,UAAAzC,MAEa,GAEbvxC,EAaA,OApDAyT,EAAAQ,UAAAm6B,EAAAp6B,GAyCAo6B,EAAAxY,YAAA,WACA,OAAA,IAAAwY,GAMAA,EAAAxsC,UAAAwyC,gBAAA,SAAAt3B,GAEA,OADA1V,EAAAkC,OAAA,YAAAwT,EAAA,uBAAAA,IACA7c,KAAAwtC,WAEAW,EArDA,CAsDCynB,EAAAhiB,cACD3sC,EAAAknC,kBAAAA,oCC9DApnC,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAsM,EAAA1N,EAAA,GACAqB,EAAArB,EAAA,KACA8vD,EAAA9vD,EAAA,KACAsB,EAAAtB,EAAA,KAUAuoC,EAAA,SAAAt6B,GAEA,SAAAs6B,IACA,IAAAtuC,EAAAgU,EAAA6G,KAAA5a,MAAA,YAAAA,KAsBA,OArBAD,EAAAg2D,SAAA,EAKA,oBAAA7rD,aACA,IAAAA,OAAAqB,kBACAnE,EAAAosC,oBACAtpC,OAAAqB,iBAAA,SAAA,WACAxL,EAAAg2D,UACAh2D,EAAAg2D,SAAA,EACAh2D,EAAAg0C,QAAA,UAAA,MAEa,GACb7pC,OAAAqB,iBAAA,UAAA,WACAxL,EAAAg2D,UACAh2D,EAAAg2D,SAAA,EACAh2D,EAAAg0C,QAAA,UAAA,MAEa,IAEbh0C,EAmBA,OA3CAyT,EAAAQ,UAAAq6B,EAAAt6B,GA0BAs6B,EAAA1Y,YAAA,WACA,OAAA,IAAA0Y,GAMAA,EAAA1sC,UAAAwyC,gBAAA,SAAAt3B,GAEA,OADA1V,EAAAkC,OAAA,WAAAwT,EAAA,uBAAAA,IACA7c,KAAA+1D,UAKA1nB,EAAA1sC,UAAA+xC,gBAAA,WACA,OAAA1zC,KAAA+1D,SAEA1nB,EA5CA,CA6CCunB,EAAAhiB,cACD3sC,EAAAonC,cAAAA,oCC5DAtnC,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAI8uD,EAA0BlwD,EAAQ,KAClCmwD,EAAwBnwD,EAAQ,KAChCqB,EAASrB,EAAQ,KA6ErBmB,EAAQ4tC,iBApE8B,WAIlC,SAAAA,EAA0Bz3B,GACtBpd,KAAKk2D,gBAAgB94C,GA6DzB,OA3DArW,OAAOC,eAAe6tC,EAAkB,kBAKpC3zC,IAAK,WACD,OAAQ80D,EAAwB7c,sBAAuB8c,EAAsBpX,sBAEjFpuC,YAAY,EACZC,cAAc,IAMlBmkC,EAAiBlzC,UAAUu0D,gBAAkB,SAAU94C,GACnD,IAAI+4C,EAAwBF,EAAsBpX,qBAAuBoX,EAAsBpX,oBAAiC,cAC5HuX,EAAuBD,IAA0BF,EAAsBpX,oBAAoBuB,mBAM/F,GALIhjC,EAASgkB,gBACJ+0B,GACDhvD,EAAO6C,KAAK,mFAChBosD,GAAuB,GAEvBA,EACAp2D,KAAKq2D,aAAeJ,EAAsBpX,yBAEzC,CACD,IAAIyX,EAAgBt2D,KAAKq2D,eACzBlvD,EAAO4F,KAAK8nC,EAAiB0hB,eAAgB,SAAU5tD,EAAG6tD,GAClDA,GAAaA,EAAuB,eACpCF,EAAarxD,KAAKuxD,OASlC3hB,EAAiBlzC,UAAUqzC,iBAAmB,WAC1C,GAAIh1C,KAAKq2D,YAAYvzD,OAAS,EAC1B,OAAO9C,KAAKq2D,YAAY,GAGxB,MAAM,IAAItsD,MAAM,4BAOxB8qC,EAAiBlzC,UAAUs2C,iBAAmB,WAC1C,OAAIj4C,KAAKq2D,YAAYvzD,OAAS,EACnB9C,KAAKq2D,YAAY,GAGjB,MAGRxhB,EAlE0B,qCCZrC9tC,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAIC,EAASrB,EAAQ,KAkErBmB,EAAQwyC,eA5D4B,WAIhC,SAAAA,EAAwBlF,GACpBv0C,KAAKu0C,WAAaA,EAClBv0C,KAAKy2D,oBACLz2D,KAAK02D,mBAAqB,EAC1B12D,KAAK22D,oBAAsB,EAC3B32D,KAAK42D,QAAU,KAiDnB,OA/CAnd,EAAe93C,UAAU24C,WAAa,SAAUuc,EAAa1pD,GACzDnN,KAAK22D,mBAAqBE,EAC1B72D,KAAK42D,QAAUzpD,EACXnN,KAAK22D,mBAAqB32D,KAAK02D,qBAC/B12D,KAAK42D,UACL52D,KAAK42D,QAAU,OAUvBnd,EAAe93C,UAAU64C,eAAiB,SAAUsc,EAAYrxD,GAC5D,IAAI1F,EAAQC,KACZA,KAAKy2D,iBAAiBK,GAAcrxD,EAwBpC,IAvBA,IAAIsxD,EAAU,WACV,IAAIC,EAAYC,EAAOR,iBAAiBQ,EAAOP,2BACxCO,EAAOR,iBAAiBQ,EAAOP,oBAQtC,IAAK,IAPDQ,EAAU,SAAUvuD,GAChBquD,EAAUruD,IACVxB,EAAOoI,eAAe,WAClBxP,EAAMw0C,WAAWyiB,EAAUruD,OAI9BA,EAAI,EAAGA,EAAIquD,EAAUl0D,SAAU6F,EACpCuuD,EAAQvuD,GAEZ,GAAIsuD,EAAOP,qBAAuBO,EAAON,mBAKrC,OAJIM,EAAOL,UACPK,EAAOL,UACPK,EAAOL,QAAU,MAEd,QAEXK,EAAOP,sBAEPO,EAASj3D,KACNA,KAAKy2D,iBAAiBz2D,KAAK02D,qBAAqB,CAEnD,GAAgB,UADFK,IAEV,QAGLtd,EA1DwB,qCCPnC1yC,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAsM,EAAA1N,EAAA,GACAqB,EAAArB,EAAA,KACAsB,EAAAtB,EAAA,KACAuB,EAAAvB,EAAA,KACAwB,EAAAxB,EAAA,KACAyB,EAAAzB,EAAA,KAOAkhB,EAAA,SAAAjT,GAQA,SAAAiT,EAAAjB,EAAAkB,EAAAylB,GACA,IAAA3sC,EAAAgU,EAAA6G,KAAA5a,OAAAA,KAaA,OAZAD,EAAAgmB,UAAAA,EACAhmB,EAAAknB,cAAAA,EACAlnB,EAAA2sC,mBAAAA,EAEA3sC,EAAA6qB,KAAAxjB,EAAAsC,WAAA,WAOA3J,EAAA+sC,YACA/sC,EA6HA,OAlJAyT,EAAAQ,UAAAgT,EAAAjT,GAuBAiT,EAAArlB,UAAA8uC,YAAA,SAAApjB,GACA,MAAA,IAAAtjB,MAAA,4BAQAid,EAAAmwC,aAAA,SAAA/1D,EAAA+mB,GACA,YAAAnM,IAAAmM,EACA,OAAAA,GAGAhhB,EAAAkC,OAAAjI,EAAAoiC,iBAAAoL,YAAA,kDACAxtC,EAAA8N,KAAAX,aAIAyY,EAAArlB,UAAAinB,OAAA,SAAAxnB,EAAAgnB,EAAAD,EAAAE,GACA,IAAAtoB,EAAAC,KACA+Q,EAAA3P,EAAA8N,KAAAX,WACAvO,KAAA4qB,KAAA,qBAAA7Z,EAAA,IAAA3P,EAAAyjC,mBAEA,IAAAuyB,EAAApwC,EAAAmwC,aAAA/1D,EAAA+mB,GACAkvC,KACAr3D,KAAA8sC,SAAAsqB,GAAAC,EACA,IAAAC,EAAAl2D,EACAoiC,iBACA+zB,8BACAv3D,KAAAw3D,aAAAzmD,EAAA,QAAAumD,EAAA,SAAAztD,EAAAwZ,GACA,IAAA5d,EAAA4d,EAQA,GAPA,MAAAxZ,IACApE,EAAA,KACAoE,EAAA,MAEA,OAAAA,GACA9J,EAAAknB,cAAAlW,EAAAtL,GAAA,EAAA0iB,GAEA7gB,EAAA0W,QAAAje,EAAA+sC,SAAAsqB,KAAAC,EAAA,CAWAhvC,EATAxe,EAGA,KAAAA,EACA,oBAGA,cAAAA,EANA,KAQA,UAKAmd,EAAArlB,UAAAqnB,SAAA,SAAA5nB,EAAA+mB,GACA,IAAAivC,EAAApwC,EAAAmwC,aAAA/1D,EAAA+mB,UACAnoB,KAAA8sC,SAAAsqB,IAGApwC,EAAArlB,UAAA8lB,iBAAA,SAAAD,KAYAR,EAAArlB,UAAA61D,aAAA,SAAAzmD,EAAA0mD,EAAAtqD,GACA,IAAApN,EAAAC,UACA,IAAAy3D,IAA+CA,MAC/CA,EAAA,OAAA,SACAz3D,KAAA0sC,mBACA6F,UAAA,GACAnhB,KAAA,SAAAsmC,GACA,IAAAC,EAAAD,GAAAA,EAAAllB,YACAmlB,IACAF,EAAA,KAAAE,GAEA,IAAA9zD,GAAA9D,EAAAgmB,UAAAkD,OAAA,WAAA,WACAlpB,EAAAgmB,UAAA1I,KACAtM,EACA,IACAxJ,EAAAqwD,YAAAH,GACA13D,EAAA6qB,KAAA,4BAAA/mB,GACA,IAAAg0D,EAAA,IAAAC,eACAD,EAAAzZ,mBAAA,WACA,GAAAjxC,GAAA,IAAA0qD,EAAA7sD,WAAA,CACAjL,EAAA6qB,KAAA,qBAAA/mB,EAAA,qBAAAg0D,EAAAhvC,OAAA,YAAAgvC,EAAAE,cACA,IAAAhoB,EAAA,KACA,GAAA8nB,EAAAhvC,QAAA,KAAAgvC,EAAAhvC,OAAA,IAAA,CACA,IACAknB,EAAA1oC,EAAAo5C,SAAAoX,EAAAE,cAEA,MAAAvqD,GACApG,EAAA4C,KAAA,qCACAnG,EACA,KACAg0D,EAAAE,cAEA5qD,EAAA,KAAA4iC,QAIA,MAAA8nB,EAAAhvC,QAAA,MAAAgvC,EAAAhvC,QACAzhB,EAAA4C,KAAA,sCACAnG,EACA,YACAg0D,EAAAhvC,QAEA1b,EAAA0qD,EAAAhvC,QAEA1b,EAAA,OAGA0qD,EAAA7yD,KAAA,MAAAnB,GAAA,GACAg0D,EAAA1gB,UAGAnwB,EAnJA,CANAlhB,EAAA,KA0JC6tC,eACD1sC,EAAA+f,mBAAAA,oCClKAjgB,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAIC,EAASrB,EAAQ,KACjBsB,EAAStB,EAAQ,KACjB4P,EAAa5P,EAAQ,KACrB2P,EAAkB3P,EAAQ,KAC1Bo8B,EAAep8B,EAAQ,KACvBq8B,EAAcr8B,EAAQ,KACtBw7C,EAAkBx7C,EAAQ,KAC1BkyD,EAAkBlyD,EAAQ,KAC1BmyD,EAAiBnyD,EAAQ,KACzBuB,EAASvB,EAAQ,KAyXrBmB,EAAQooB,YAlXyB,WAC7B,SAAAA,IACIrvB,KAAKk4D,WAAY,EACjBl4D,KAAKm4D,WAAY,EACjBn4D,KAAKo4D,eAAgB,EACrBp4D,KAAKq4D,SAAU,EACfr4D,KAAKs4D,aAAc,EACnBt4D,KAAKu4D,OAAS,EACdv4D,KAAKw4D,UAAY,GACjBx4D,KAAKy4D,iBAAmB,KACxBz4D,KAAK04D,gBAAkB,GACvB14D,KAAK24D,eAAiB,KACtB34D,KAAK44D,cAAgB,GACrB54D,KAAK6xB,OAASpc,EAAgBJ,eAmWlC,OA9VAga,EAAY1tB,UAAU+gC,SAAW,WAC7B,OAAO1iC,KAAKm4D,WAKhB9oC,EAAY1tB,UAAUk3D,eAAiB,WACnC,MAAuB,KAAnB74D,KAAKw4D,UAKEx4D,KAAKm4D,UAGJn4D,KAAKw4D,YAAcnpC,EAAYypC,yBAAyBC,gBAOxE1pC,EAAY1tB,UAAUghC,mBAAqB,WAEvC,OADAx7B,EAAOkC,OAAOrJ,KAAKm4D,UAAW,oCACvBn4D,KAAKy4D,kBAOhBppC,EAAY1tB,UAAUqhC,kBAAoB,WAEtC,OADA77B,EAAOkC,OAAOrJ,KAAKm4D,UAAW,oCAC1Bn4D,KAAKo4D,cACEp4D,KAAK04D,gBAGLtxD,EAAOqE,UAMtB4jB,EAAY1tB,UAAUihC,OAAS,WAC3B,OAAO5iC,KAAKq4D,SAMhBhpC,EAAY1tB,UAAUkhC,iBAAmB,WAErC,OADA17B,EAAOkC,OAAOrJ,KAAKq4D,QAAS,kCACrBr4D,KAAK24D,gBAOhBtpC,EAAY1tB,UAAUshC,gBAAkB,WAEpC,OADA97B,EAAOkC,OAAOrJ,KAAKq4D,QAAS,kCACxBr4D,KAAKs4D,YACEt4D,KAAK44D,cAGLxxD,EAAOsE,UAMtB2jB,EAAY1tB,UAAU0hC,SAAW,WAC7B,OAAOrjC,KAAKk4D,WAKhB7oC,EAAY1tB,UAAU2hC,iBAAmB,WACrC,OAAOtjC,KAAKk4D,WAAgC,KAAnBl4D,KAAKw4D,WAMlCnpC,EAAY1tB,UAAUq3D,SAAW,WAE7B,OADA7xD,EAAOkC,OAAOrJ,KAAKk4D,UAAW,oCACvBl4D,KAAKu4D,QAKhBlpC,EAAY1tB,UAAUozB,SAAW,WAC7B,OAAO/0B,KAAK6xB,QAMhBxC,EAAY1tB,UAAUs3D,MAAQ,WAC1B,IAAIx1C,EAAO,IAAI4L,EAaf,OAZA5L,EAAKy0C,UAAYl4D,KAAKk4D,UACtBz0C,EAAK80C,OAASv4D,KAAKu4D,OACnB90C,EAAK00C,UAAYn4D,KAAKm4D,UACtB10C,EAAKg1C,iBAAmBz4D,KAAKy4D,iBAC7Bh1C,EAAK20C,cAAgBp4D,KAAKo4D,cAC1B30C,EAAKi1C,gBAAkB14D,KAAK04D,gBAC5Bj1C,EAAK40C,QAAUr4D,KAAKq4D,QACpB50C,EAAKk1C,eAAiB34D,KAAK24D,eAC3Bl1C,EAAK60C,YAAct4D,KAAKs4D,YACxB70C,EAAKm1C,cAAgB54D,KAAK44D,cAC1Bn1C,EAAKoO,OAAS7xB,KAAK6xB,OACnBpO,EAAK+0C,UAAYx4D,KAAKw4D,UACf/0C,GAMX4L,EAAY1tB,UAAU6iC,MAAQ,SAAU00B,GACpC,IAAIx0B,EAAY1kC,KAAKi5D,QAIrB,OAHAv0B,EAAUwzB,WAAY,EACtBxzB,EAAU6zB,OAASW,EACnBx0B,EAAU8zB,UAAY,GACf9zB,GAMXrV,EAAY1tB,UAAUo3B,aAAe,SAAUmgC,GAC3C,IAAIx0B,EAAY1kC,KAAKi5D,QAIrB,OAHAv0B,EAAUwzB,WAAY,EACtBxzB,EAAU6zB,OAASW,EACnBx0B,EAAU8zB,UAAYnpC,EAAYypC,yBAAyBC,eACpDr0B,GAMXrV,EAAY1tB,UAAUs3B,YAAc,SAAUigC,GAC1C,IAAIx0B,EAAY1kC,KAAKi5D,QAIrB,OAHAv0B,EAAUwzB,WAAY,EACtBxzB,EAAU6zB,OAASW,EACnBx0B,EAAU8zB,UAAYnpC,EAAYypC,yBAAyBK,gBACpDz0B,GAOXrV,EAAY1tB,UAAUs2B,QAAU,SAAU/iB,EAAY/I,GAClD,IAAIu4B,EAAY1kC,KAAKi5D,QAcrB,OAbAv0B,EAAUyzB,WAAY,OACDn8C,IAAf9G,IACFA,EAAa,MAEjBwvB,EAAU+zB,iBAAmBvjD,EAClB,MAAP/I,GACAu4B,EAAU0zB,eAAgB,EAC1B1zB,EAAUg0B,gBAAkBvsD,IAG5Bu4B,EAAU0zB,eAAgB,EAC1B1zB,EAAUg0B,gBAAkB,IAEzBh0B,GAOXrV,EAAY1tB,UAAUu2B,MAAQ,SAAUhjB,EAAY/I,GAChD,IAAIu4B,EAAY1kC,KAAKi5D,QAcrB,OAbAv0B,EAAU2zB,SAAU,OACCr8C,IAAf9G,IACFA,EAAa,MAEjBwvB,EAAUi0B,eAAiBzjD,OACf8G,IAAR7P,GACAu4B,EAAU4zB,aAAc,EACxB5zB,EAAUk0B,cAAgBzsD,IAG1Bu4B,EAAU4zB,aAAc,EACxB5zB,EAAUk0B,cAAgB,IAEvBl0B,GAMXrV,EAAY1tB,UAAUq2B,QAAU,SAAUxf,GACtC,IAAIksB,EAAY1kC,KAAKi5D,QAErB,OADAv0B,EAAU7S,OAASrZ,EACZksB,GAKXrV,EAAY1tB,UAAUijC,eAAiB,WACnC,IAAIw0B,EAA0B/pC,EAAYypC,yBACtC1sD,KAaJ,GAZIpM,KAAKm4D,YACL/rD,EAAIgtD,EAAwBC,mBAAqBr5D,KAAKy4D,iBAClDz4D,KAAKo4D,gBACLhsD,EAAIgtD,EAAwBE,kBAAoBt5D,KAAK04D,kBAGzD14D,KAAKq4D,UACLjsD,EAAIgtD,EAAwBG,iBAAmBv5D,KAAK24D,eAChD34D,KAAKs4D,cACLlsD,EAAIgtD,EAAwBI,gBAAkBx5D,KAAK44D,gBAGvD54D,KAAKk4D,UAAW,CAChB9rD,EAAIgtD,EAAwBK,OAASz5D,KAAKu4D,OAC1C,IAAImB,EAAW15D,KAAKw4D,UACH,KAAbkB,IAEIA,EADA15D,KAAK64D,iBACMO,EAAwBL,eAGxBK,EAAwBD,iBAG3C/sD,EAAIgtD,EAAwBO,WAAaD,EAM7C,OAHI15D,KAAK6xB,SAAWpc,EAAgBJ,iBAChCjJ,EAAIgtD,EAAwBQ,OAAS55D,KAAK6xB,OAAOtjB,YAE9CnC,GAKXijB,EAAY1tB,UAAUmpC,aAAe,WACjC,QAAS9qC,KAAKm4D,WAAan4D,KAAKq4D,SAAWr4D,KAAKk4D,YAKpD7oC,EAAY1tB,UAAUitC,UAAY,WAC9B,OAAO5uC,KAAK8qC,gBAAkB9qC,KAAK6xB,QAAUpc,EAAgBJ,gBAKjEga,EAAY1tB,UAAU+oD,cAAgB,WAClC,OAAI1qD,KAAK8qC,eACE,IAAIwW,EAAgBhtB,cAAct0B,KAAK+0B,YAEzC/0B,KAAKqjC,WACH,IAAI20B,EAAgB6B,cAAc75D,MAGlC,IAAIi4D,EAAe1W,aAAavhD,OAQ/CqvB,EAAY1tB,UAAU41D,4BAA8B,WAChD,IAAIuC,EAAiBzqC,EAAY0qC,sBAC7BC,KACJ,GAAIh6D,KAAK4uC,YACL,OAAOorB,EAEX,IAAIhiC,EAmCJ,OAlCIh4B,KAAK6xB,SAAWpc,EAAgBJ,eAChC2iB,EAAU8hC,EAAezkD,eAEpBrV,KAAK6xB,SAAWqQ,EAAaiB,YAClCnL,EAAU8hC,EAAe32B,YAEpBnjC,KAAK6xB,SAAWnc,EAAWwE,UAChC8d,EAAU8hC,EAAe5/C,WAGzB/S,EAAOkC,OAAOrJ,KAAK6xB,kBAAkBsQ,EAAYe,UAAW,4BAC5DlL,EAAUh4B,KAAK6xB,OAAOtjB,YAE1ByrD,EAAGF,EAAeG,UAAY5yD,EAAO0B,UAAUivB,GAC3Ch4B,KAAKm4D,YACL6B,EAAGF,EAAeI,UAAY7yD,EAAO0B,UAAU/I,KAAKy4D,kBAChDz4D,KAAKo4D,gBACL4B,EAAGF,EAAeI,WAAa,IAAM7yD,EAAO0B,UAAU/I,KAAK04D,mBAG/D14D,KAAKq4D,UACL2B,EAAGF,EAAeK,QAAU9yD,EAAO0B,UAAU/I,KAAK24D,gBAC9C34D,KAAKs4D,cACL0B,EAAGF,EAAeK,SAAW,IAAM9yD,EAAO0B,UAAU/I,KAAK44D,iBAG7D54D,KAAKk4D,YACDl4D,KAAK64D,iBACLmB,EAAGF,EAAeM,gBAAkBp6D,KAAKu4D,OAGzCyB,EAAGF,EAAeO,eAAiBr6D,KAAKu4D,QAGzCyB,GAQX3qC,EAAYypC,0BACRO,kBAAmB,KACnBC,iBAAkB,KAClBC,gBAAiB,KACjBC,eAAgB,KAChBC,MAAO,IACPE,UAAW,KACXZ,eAAgB,IAChBI,gBAAiB,IACjBS,MAAO,KAQXvqC,EAAY0qC,uBACRE,SAAU,UACV5kD,eAAgB,YAChB8tB,YAAa,SACbjpB,UAAW,OACXggD,SAAU,UACVC,OAAQ,QACRC,eAAgB,eAChBC,cAAe,eAOnBhrC,EAAYC,QAAU,IAAID,EACnBA,EAhXqB,qCCjBhCtoB,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAI+wD,EAAiBnyD,EAAQ,KACzBka,EAAiBla,EAAQ,KACzB4N,EAAS5N,EAAQ,KACjBqB,EAASrB,EAAQ,KACjBuuB,EAAWvuB,EAAQ,KA2OvBmB,EAAQ4yD,cApO2B,WAI/B,SAAAA,EAAuB/3B,GACnB9hC,KAAKs6D,cAAgB,IAAIrC,EAAe1W,aAAazf,GACrD9hC,KAAK6xB,OAASiQ,EAAO/M,WACrB/0B,KAAKu4D,OAASz2B,EAAOk3B,WACrBh5D,KAAKu6D,UAAYz4B,EAAO+2B,iBA0N5B,OArNAgB,EAAcl4D,UAAU6V,YAAc,SAAUyS,EAAM9d,EAAKinB,EAAUlJ,EAAcqK,EAAQC,GAIvF,OAHKx0B,KAAKs6D,cAAcvY,QAAQ,IAAIruC,EAAOmB,UAAU1I,EAAKinB,MACtDA,EAAWpT,EAAenK,aAAaP,YAEvC2U,EAAKvT,kBAAkBvK,GAAKmG,OAAO8gB,GAE5BnJ,EAEFA,EAAKvS,cAAgB1X,KAAKu4D,OACxBv4D,KAAKs6D,cACPxlC,mBACAtd,YAAYyS,EAAM9d,EAAKinB,EAAUlJ,EAAcqK,EAAQC,GAGrDx0B,KAAKw6D,sBAAsBvwC,EAAM9d,EAAKinB,EAAUmB,EAAQC,IAMvEqlC,EAAcl4D,UAAUgzB,eAAiB,SAAU7V,EAAS8V,EAASJ,GACjE,IAAIiX,EACJ,GAAI7W,EAAQre,cAAgBqe,EAAQljB,UAEhC+5B,EAAWzrB,EAAenK,aAAaP,WAAW2E,UAAUja,KAAK6xB,aAGjE,GAAkB,EAAd7xB,KAAKu4D,OAAa3jC,EAAQld,eAC1Bkd,EAAQva,UAAUra,KAAK6xB,QAAS,CAEhC4Z,EAAWzrB,EAAenK,aAAaP,WAAW2E,UAAUja,KAAK6xB,QAE7DpY,OAAW,EAEXA,EADAzZ,KAAKu6D,SACM3lC,EAAQ7a,uBAAuB/Z,KAAKs6D,cAAcxY,aAAc9hD,KAAK6xB,QAGrE+C,EAAQrb,gBAAgBvZ,KAAKs6D,cAAczY,eAAgB7hD,KAAK6xB,QAG/E,IADIla,EAAQ,EACL8B,EAAS6J,WAAa3L,EAAQ3X,KAAKu4D,QAAQ,CAC1C5+C,EAAOF,EAASI,UAUpB,KARI7Z,KAAKu6D,SAEDv6D,KAAK6xB,OAAO5d,QAAQjU,KAAKs6D,cAAczY,eAAgBloC,IAAS,EAIhE3Z,KAAK6xB,OAAO5d,QAAQ0F,EAAM3Z,KAAKs6D,cAAcxY,eAAiB,GAQlE,MALArW,EAAWA,EAAS10B,qBAAqB4C,EAAKnW,KAAMmW,EAAKxF,MACzDwD,SAQP,CAID8zB,GAFAA,EAAW7W,EAAQ3a,UAAUja,KAAK6xB,SAEdrb,eAAewJ,EAAenK,aAAaP,YAC/D,IAAIkE,OAAY,EACZQ,OAAU,EACV3H,OAAM,EACNoH,OAAW,EACf,GAAIzZ,KAAKu6D,SAAU,CACf9gD,EAAWgyB,EAAS3xB,mBAAmB9Z,KAAK6xB,QAC5CrY,EAAYxZ,KAAKs6D,cAAcxY,aAC/B9nC,EAAUha,KAAKs6D,cAAczY,eAC7B,IAAI4Y,EAAiBz6D,KAAK6xB,OAAOhR,aACjCxO,EAAM,SAAUzG,EAAGC,GAAK,OAAO4uD,EAAe5uD,EAAGD,SAGjD6N,EAAWgyB,EAASnyB,YAAYtZ,KAAK6xB,QACrCrY,EAAYxZ,KAAKs6D,cAAczY,eAC/B7nC,EAAUha,KAAKs6D,cAAcxY,aAC7BzvC,EAAMrS,KAAK6xB,OAAOhR,aAItB,IAFA,IAAIlJ,EAAQ,EACR+iD,GAAiB,EACdjhD,EAAS6J,WAAW,CACvB,IAAI3J,EAAOF,EAASI,WACf6gD,GAAkBroD,EAAImH,EAAWG,IAAS,IAE3C+gD,GAAiB,GAEPA,GAAkB/iD,EAAQ3X,KAAKu4D,QAAUlmD,EAAIsH,EAAMK,IAAY,EAEzErC,IAGA8zB,EAAWA,EAAS10B,qBAAqB4C,EAAKnW,KAAMwc,EAAenK,aAAaP,aAKhG,OAAOtV,KAAKs6D,cACPxlC,mBACAH,eAAe7V,EAAS2sB,EAAUjX,IAK3CqlC,EAAcl4D,UAAU6U,eAAiB,SAAUsI,EAAS1H,GAExD,OAAO0H,GAKX+6C,EAAcl4D,UAAUkzB,aAAe,WACnC,OAAO,GAKXglC,EAAcl4D,UAAUmzB,iBAAmB,WACvC,OAAO90B,KAAKs6D,cAAcxlC,oBAK9B+kC,EAAcl4D,UAAUozB,SAAW,WAC/B,OAAO/0B,KAAK6xB,QAWhBgoC,EAAcl4D,UAAU64D,sBAAwB,SAAUvwC,EAAM7K,EAAUwT,EAAW2B,EAAQomC,GAEzF,IAAItoD,EACJ,GAAIrS,KAAKu6D,SAAU,CACf,IAAIK,EAAa56D,KAAK6xB,OAAOhR,aAC7BxO,EAAM,SAAUzG,EAAGC,GAAK,OAAO+uD,EAAW/uD,EAAGD,SAG7CyG,EAAMrS,KAAK6xB,OAAOhR,aAEtB,IAAI2uC,EAAgBvlC,EACpB9iB,EAAOkC,OAAOmmD,EAAc93C,eAAiB1X,KAAKu4D,OAAQ,IAC1D,IAAIsC,EAAoB,IAAInnD,EAAOmB,UAAUuK,EAAUwT,GACnDkoC,EAAiB96D,KAAKu6D,SACpB/K,EAAcx2C,cAAchZ,KAAK6xB,QACjC29B,EAAct2C,aAAalZ,KAAK6xB,QAClCkpC,EAAU/6D,KAAKs6D,cAAcvY,QAAQ8Y,GACzC,GAAIrL,EAAc14C,SAASsI,GAAW,CAGlC,IAFA,IAAI47C,EAAexL,EAAc94C,kBAAkB0I,GAC/C0U,EAAYS,EAAOw7B,mBAAmB/vD,KAAK6xB,OAAQipC,EAAgB96D,KAAKu6D,UACxD,MAAbzmC,IACFA,EAAUtwB,MAAQ4b,GAAYowC,EAAc14C,SAASgd,EAAUtwB,QAIhEswB,EAAYS,EAAOw7B,mBAAmB/vD,KAAK6xB,OAAQiC,EAAW9zB,KAAKu6D,UAEvE,IAAIU,EAA2B,MAAbnnC,EAAoB,EAAIzhB,EAAIyhB,EAAW+mC,GAEzD,GADsBE,IAAYnoC,EAAUlhB,WAAaupD,GAAe,EAKpE,OAHyB,MAArBN,GACAA,EAAkBjmC,iBAAiBL,EAAS1V,OAAOa,mBAAmBJ,EAAUwT,EAAWooC,IAExFxL,EAAcz4C,qBAAqBqI,EAAUwT,GAG3B,MAArB+nC,GACAA,EAAkBjmC,iBAAiBL,EAAS1V,OAAOW,mBAAmBF,EAAU47C,IAEpF,IAAIhQ,EAAgBwE,EAAcz4C,qBAAqBqI,EAAUY,EAAenK,aAAaP,YAE7F,OADoC,MAAbwe,GAAqB9zB,KAAKs6D,cAAcvY,QAAQjuB,IAE1C,MAArB6mC,GACAA,EAAkBjmC,iBAAiBL,EAAS1V,OAAOQ,iBAAiB2U,EAAUtwB,KAAMswB,EAAU3f,OAE3F62C,EAAcj0C,qBAAqB+c,EAAUtwB,KAAMswB,EAAU3f,OAG7D62C,EAId,OAAIp4B,EAAUlhB,UAERuY,EAEF8wC,GACD1oD,EAAIyoD,EAAgBD,IAAsB,GACjB,MAArBF,IACAA,EAAkBjmC,iBAAiBL,EAAS1V,OAAOW,mBAAmBw7C,EAAet3D,KAAMs3D,EAAe3mD,OAC1GwmD,EAAkBjmC,iBAAiBL,EAAS1V,OAAOQ,iBAAiBC,EAAUwT,KAE3E48B,EACFz4C,qBAAqBqI,EAAUwT,GAC/B7b,qBAAqB+jD,EAAet3D,KAAMwc,EAAenK,aAAaP,aAOxE2U,GAGR4vC,EAlOuB,qCCZlC9yD,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAoBAg0D,EApBA/zD,EAAArB,EAAA,KACA84B,EAAA94B,EAAA,KACA08C,EAAA18C,EAAA,KACAoV,EAAApV,EAAA,KACAq1D,EAAAr1D,EAAA,KACA2P,EAAA3P,EAAA,KACAsB,EAAAtB,EAAA,KACAmf,EAAAnf,EAAA,KACAmpB,EAAAnpB,EAAA,KACAuB,EAAAvB,EAAA,KACAof,EAAApf,EAAA,KACAka,EAAAla,EAAA,KACAipB,EAAAjpB,EAAA,MASA,SAAAo1D,GAIAA,EAAAA,EAAA,IAAA,GAAA,MAGAA,EAAAA,EAAA,KAAA,GAAA,OAGAA,EAAAA,EAAA,UAAA,GAAA,YAGAA,EAAAA,EAAA,iBAAA,GAAA,mBAEAA,EAAAA,EAAA,YAAA,GAAA,cAfA,CAgBCA,EAAAj0D,EAAAi0D,oBAAAj0D,EAAAi0D,uBAQDnsC,EAAAjJ,KAAAs1C,yBAAA,GAKArsC,EAAAjJ,KAAAnkB,UAAAkmB,mBAAA,WAOA7nB,KAAAq7D,sBAAA,IAAAF,EAAAG,MAUAvsC,EAAAjJ,KAAAnkB,UAAA+uB,iBAAA,SAAAxhB,EAAAqhB,EAAAlI,EAAAmI,GACAxwB,KAAA4qB,KAAA,kBAAA1b,GAEA,IAAAqsD,EAAA,aACAC,EAAA,IAAA58B,EAAAzP,UAAAnvB,KAAAkP,GACAssD,EAAApgC,GAAA,QAAAmgC,GACA,IAIAjrC,GACAphB,KAAAA,EACAhH,OAAAqoB,EACAlI,WAAAA,EAEAQ,OAAA,KAEA4yC,MAAAr0D,EAAAO,gBAEA6oB,aAAAA,EAEAkrC,WAAA,EAEAC,UAjBA,WACAH,EAAA1/B,IAAA,QAAAy/B,IAkBAK,YAAA,KACAC,eAAA,KACAC,qBAAA,KACAC,yBAAA,KACAC,8BAAA,MAGAC,EAAAj8D,KAAAk8D,gBAAAhtD,GACAohB,EAAAwrC,qBAAAG,EACA,IAAAtxC,EAAA2F,EAAApoB,OAAA+zD,EAAAhvD,OACA,QAAA+O,IAAA2O,GAKA,GAHA2F,EAAAqrC,YACArrC,EAAAyrC,yBAAA,KACAzrC,EAAA0rC,8BAAA,KACA1rC,EAAAjI,WAAA,CAEA,IAAApJ,EAAA,IAAAujC,EAAA7wB,aAAArB,EAAAwrC,qBAAA,IAAAl9B,EAAAzP,UAAAnvB,KAAAswB,EAAAphB,MAAAuG,EAAAJ,gBACAib,EAAAjI,WAAA,MAAA,EAAApJ,QAGA,CACAgQ,EAAAhT,qBAAA,qCAAA0O,EAAA2F,EAAAphB,MAEAohB,EAAAzH,OAAAqyC,EAAAiB,IACA,IAAAC,EAAAp8D,KAAAq7D,sBAAAgB,QAAAntD,GACAotD,EAAAF,EAAA95C,eACAg6C,EAAAr3D,KAAAqrB,GACA8rC,EAAAG,SAAAD,GAIA,IAAAE,OAAA,EACA,GAAA,iBAAA7xC,GACA,OAAAA,GACAtjB,EAAAoL,SAAAkY,EAAA,aACA6xC,EAAAn1D,EAAA2W,QAAA2M,EAAA,aACAxjB,EAAAkC,OAAA4lB,EAAAvT,gBAAA8gD,GAAA,wHAGA,CAGAA,GAFAx8D,KAAA2oB,gBAAAqhB,uBAAA96B,IACA8Q,EAAAnK,aAAAP,YACAlB,cAAAnH,MAEAuvD,EAAsDA,EACtD,IAAA3xC,EAAA7qB,KAAAspB,uBACAwB,EAAA5F,EAAA5R,aAAAqX,EAAA6xC,GACA7nD,EAAAsQ,EAAA8F,6BAAAD,EAAAD,GACAyF,EAAAyrC,yBAAAjxC,EACAwF,EAAA0rC,8BAAArnD,EACA2b,EAAAurC,eAAA77D,KAAAyqB,kBACA,IAAA3B,EAAA9oB,KAAA2oB,gBAAAsC,mBAAA/b,EAAAyF,EAAA2b,EAAAurC,eAAAvrC,EAAAE,cACAxwB,KAAAmmB,YAAA4C,0BAAA7Z,EAAA4Z,GACA9oB,KAAAy8D,2BASA1tC,EAAAjJ,KAAAnkB,UAAAu6D,gBAAA,SAAAhtD,EAAAwtD,GACA,OAAA18D,KAAA2oB,gBAAAqhB,uBAAA96B,EAAAwtD,IACA18C,EAAAnK,aAAAP,YAYAyZ,EAAAjJ,KAAAnkB,UAAA86D,uBAAA,SAAAtoD,GACA,IAAApU,EAAAC,KAMA,QALA,IAAAmU,IAA0BA,EAAAnU,KAAAq7D,uBAE1BlnD,GACAnU,KAAA28D,qCAAAxoD,GAEA,OAAAA,EAAAmO,WAAA,CACA,IAAAs6C,EAAA58D,KAAA68D,uBAAA1oD,GACAhN,EAAAkC,OAAAuzD,EAAA95D,OAAA,EAAA,yCACA85D,EAAA/X,MAAA,SAAAv0B,GAAyD,OAAAA,EAAAzH,SAAAqyC,EAAAiB,OAGzDn8D,KAAA88D,sBAAA3oD,EAAAjF,OAAA0tD,QAGAzoD,EAAAie,eACAje,EAAA6D,aAAA,SAAAC,GACAlY,EAAA08D,uBAAAxkD,MAWA8W,EAAAjJ,KAAAnkB,UAAAm7D,sBAAA,SAAA5tD,EAAA0tD,GASA,IAAA,IARA78D,EAAAC,KAEA+8D,EAAAH,EAAAp6D,IAAA,SAAAw6D,GACA,OAAAA,EAAAnB,iBAEAoB,EAAAj9D,KAAAk8D,gBAAAhtD,EAAA6tD,GACAG,EAAAD,EACAE,EAAAF,EAAA9kD,OACAxP,EAAA,EAAmBA,EAAAi0D,EAAA95D,OAAkB6F,IAAA,CACrC,IAAAq0D,EAAAJ,EAAAj0D,GACAxB,EAAAkC,OAAA2zD,EAAAn0C,SAAAqyC,EAAAiB,IAAA,iEACAa,EAAAn0C,OAAAqyC,EAAAkC,KACAJ,EAAAtB,aACA,IAAA/pD,EAAAuJ,EAAAhL,KAAAyB,aAAAzC,EAAA8tD,EAAA9tD,MAEAguD,EAAAA,EAAA1lD,YAAA7F,EAAyEqrD,EAAAjB,0BAEzE,IAAAsB,EAAAH,EAAAjwD,KAAA,GACAqwD,EAAApuD,EAEAlP,KAAA+mB,QAAAoE,IAAAmyC,EAAA/uD,WAAA8uD,EAAA,SAAAx0C,GACA9oB,EAAA6qB,KAAA,4BACA1b,KAAAouD,EAAA/uD,WACAsa,OAAAA,IAEA,IAAAC,KACA,GAAA,OAAAD,EAAA,CAIA,IAAA,IADAgb,KACAl7B,EAAA,EAA2BA,EAAAi0D,EAAA95D,OAAkB6F,IAAA,CAG7C,GAFAi0D,EAAAj0D,GAAAkgB,OAAAqyC,EAAAqC,UACAz0C,EAAAA,EAAAlf,OAAA7J,EAAA4oB,gBAAA4C,aAAAqxC,EAAAj0D,GAAAkzD,iBACAe,EAAAj0D,GAAA0f,WAAA,CAEA,IAAAlU,EAAAyoD,EAAAj0D,GAAAqzD,8BACApsC,EAAA,IAAAgP,EAAAzP,UAAApvB,EAAA68D,EAAAj0D,GAAAuG,MACA+P,EAAA,IAAAujC,EAAA7wB,aAAAxd,EAAAyb,EAAAna,EAAAJ,gBACAwuB,EAAA5+B,KAAA23D,EAAAj0D,GAAA0f,WAAA/e,KAAA,KAAA,MAAA,EAAA2V,IAEA29C,EAAAj0D,GAAAgzD,YAGA57D,EAAA48D,qCAAA58D,EAAAs7D,sBAAAgB,QAAAntD,IAEAnP,EAAA08D,yBACA18D,EAAAomB,YAAA4C,0BAAA7Z,EAAA4Z,GAEA,IAAAngB,EAAA,EAA2BA,EAAAk7B,EAAA/gC,OAAsB6F,IACjDvB,EAAAmI,eAAAs0B,EAAAl7B,QAGA,CAEA,GAAA,cAAAkgB,EACA,IAAAlgB,EAAA,EAA+BA,EAAAi0D,EAAA95D,OAAkB6F,IAEjDi0D,EAAAj0D,GAAAkgB,OADA+zC,EAAAj0D,GAAAkgB,SAAAqyC,EAAAsC,iBACAtC,EAAAuC,YAEAvC,EAAAiB,QAGA,CACA/0D,EAAA4C,KAAA,kBAAAszD,EAAA/uD,WAAA,YAAAsa,GACA,IAAAlgB,EAAA,EAA+BA,EAAAi0D,EAAA95D,OAAkB6F,IACjDi0D,EAAAj0D,GAAAkgB,OAAAqyC,EAAAuC,YACAb,EAAAj0D,GAAAizD,YAAA/yC,EAGA9oB,EAAAoqB,mBAAAjb,KAEKiuD,IAcLpuC,EAAAjJ,KAAAnkB,UAAAwoB,mBAAA,SAAA8B,GACA,IAAAyxC,EAAA19D,KAAA29D,4BAAA1xC,GACA/c,EAAAwuD,EAAAxuD,OACA0tD,EAAA58D,KAAA68D,uBAAAa,GAEA,OADA19D,KAAA49D,uBAAAhB,EAAA1tD,GACAA,GASA6f,EAAAjJ,KAAAnkB,UAAAi8D,uBAAA,SAAAhB,EAAA1tD,GACA,GAAA,IAAA0tD,EAAA95D,OAAA,CAcA,IAAA,IATA+gC,KACA/a,KAKAi0C,EAHAH,EAAAxjC,OAAA,SAAAyZ,GACA,OAAAA,EAAAhqB,SAAAqyC,EAAAiB,MAEA35D,IAAA,SAAAqwC,GACA,OAAAA,EAAAgpB,iBAEAlzD,EAAA,EAAmBA,EAAAi0D,EAAA95D,OAAkB6F,IAAA,CACrC,IAAA2nB,EAAAssC,EAAAj0D,GACAgJ,EAAAuJ,EAAAhL,KAAAyB,aAAAzC,EAAAohB,EAAAphB,MACA2uD,GAAA,EAAAjC,OAAA,EAEA,GADAz0D,EAAAkC,OAAA,OAAAsI,EAAA,iEACA2e,EAAAzH,SAAAqyC,EAAAuC,YACAI,GAAA,EACAjC,EAAAtrC,EAAAsrC,YACA9yC,EAAAA,EAAAlf,OAAA5J,KAAA2oB,gBAAA4C,aAAA+E,EAAAurC,gBAAA,SAEA,GAAAvrC,EAAAzH,SAAAqyC,EAAAiB,IACA,GAAA7rC,EAAAorC,YAAA3sC,EAAAjJ,KAAAs1C,yBACAyC,GAAA,EACAjC,EAAA,WACA9yC,EAAAA,EAAAlf,OAAA5J,KAAA2oB,gBAAA4C,aAAA+E,EAAAurC,gBAAA,QAEA,CAEA,IAAAiC,EAAA99D,KAAAk8D,gBAAA5rC,EAAAphB,KAAA6tD,GACAzsC,EAAAwrC,qBAAAgC,EACA,IAAAlY,EAAAgX,EAAAj0D,GAAAT,OAAA41D,EAAA7wD,OACA,QAAA+O,IAAA4pC,EAAA,CACA32B,EAAAhT,qBAAA,qCAAA2pC,EAAAt1B,EAAAphB,MACA,IAAA6uD,EAAA74C,EAAA5R,aAAAsyC,GACA,iBAAAA,GACA,MAAAA,GACAv+C,EAAAoL,SAAAmzC,EAAA,eAGAmY,EAAAA,EAAAvnD,eAAAsnD,EAAA1pD,gBAEA,IAAA4pD,EAAA1tC,EAAAurC,eACAhxC,EAAA7qB,KAAAspB,uBACA20C,EAAAh5C,EAAA8F,6BAAAgzC,EAAAlzC,GACAyF,EAAAyrC,yBAAAgC,EACAztC,EAAA0rC,8BAAAiC,EACA3tC,EAAAurC,eAAA77D,KAAAyqB,kBAEAsyC,EAAA3oB,OAAA2oB,EAAA1yD,QAAA2zD,GAAA,GAEAl1C,GADAA,EAAAA,EAAAlf,OAAA5J,KAAA2oB,gBAAAsC,mBAAAqF,EAAAphB,KAAA+uD,EAAA3tC,EAAAurC,eAAAvrC,EAAAE,gBACA5mB,OAAA5J,KAAA2oB,gBAAA4C,aAAAyyC,GAAA,SAGAH,GAAA,EACAjC,EAAA,SACA9yC,EAAAA,EAAAlf,OAAA5J,KAAA2oB,gBAAA4C,aAAA+E,EAAAurC,gBAAA,IAMA,GAFA77D,KAAAmmB,YAAA4C,0BAAA7Z,EAAA4Z,GACAA,KACA+0C,IAEAjB,EAAAj0D,GAAAkgB,OAAAqyC,EAAAqC,UAGA,SAAA5B,GACAvwD,WAAAuwD,EAAAtwD,KAAAC,MAAA,IADA,CAEasxD,EAAAj0D,GAAAgzD,WACbiB,EAAAj0D,GAAA0f,YACA,GAAA,WAAAuzC,EAAA,CACA,IAAAhsC,EAAA,IAAAgP,EAAAzP,UAAAnvB,KAAA48D,EAAAj0D,GAAAuG,MAGA+P,EAAA,IAAAujC,EAAA7wB,aADmDirC,EAAAj0D,GAAAmzD,qBACnDlsC,EAAAna,EAAAJ,gBACAwuB,EAAA5+B,KAAA23D,EAAAj0D,GAAA0f,WAAA/e,KAAA,KAAA,MAAA,EAAA2V,SAGA4kB,EAAA5+B,KAAA23D,EAAAj0D,GAAA0f,WAAA/e,KAAA,KAAA,IAAAS,MAAA6xD,IAAA,EAAA,OAMA57D,KAAA28D,qCAAA38D,KAAAq7D,uBAEA,IAAA1yD,EAAA,EAAmBA,EAAAk7B,EAAA/gC,OAAsB6F,IACzCvB,EAAAmI,eAAAs0B,EAAAl7B,IAGA3I,KAAAy8D,2BAUA1tC,EAAAjJ,KAAAnkB,UAAAg8D,4BAAA,SAAAzuD,GAIA,IAHA,IAAA2H,EAEAqnD,EAAAl+D,KAAAq7D,sBACA,QAAAxkD,EAAA3H,EAAAyB,aACA,OAAAutD,EAAA57C,YACA47C,EAAAA,EAAA7B,QAAAxlD,GACA3H,EAAAA,EAAA2B,WAEA,OAAAqtD,GASAnvC,EAAAjJ,KAAAnkB,UAAAk7D,uBAAA,SAAAqB,GAEA,IAAAC,KAMA,OALAn+D,KAAAo+D,mCAAAF,EAAAC,GAEAA,EAAA3xD,KAAA,SAAAZ,EAAAC,GACA,OAAAD,EAAA6vD,MAAA5vD,EAAA4vD,QAEA0C,GAOApvC,EAAAjJ,KAAAnkB,UAAAy8D,mCAAA,SAAAjqD,EAAAyoD,GACA,IAAA78D,EAAAC,KACAs8D,EAAAnoD,EAAAmO,WACA,GAAA,OAAAg6C,EACA,IAAA,IAAA3zD,EAAA,EAAuBA,EAAA2zD,EAAAx5D,OAAsB6F,IAC7Ci0D,EAAA33D,KAAAq3D,EAAA3zD,IAGAwL,EAAA6D,aAAA,SAAAzG,GACAxR,EAAAq+D,mCAAA7sD,EAAAqrD,MASA7tC,EAAAjJ,KAAAnkB,UAAAg7D,qCAAA,SAAAxoD,GACA,IAAApU,EAAAC,KACA48D,EAAAzoD,EAAAmO,WACA,GAAAs6C,EAAA,CAEA,IAAA,IADAyB,EAAA,EACAC,EAAA,EAA0BA,EAAA1B,EAAA95D,OAAqBw7D,IAC/C1B,EAAA0B,GAAAz1C,SAAAqyC,EAAAqC,YACAX,EAAAyB,GAAAzB,EAAA0B,GACAD,KAGAzB,EAAA95D,OAAAu7D,EACAlqD,EAAAooD,SAAAK,EAAA95D,OAAA,EAAA85D,EAAA,MAEAzoD,EAAA6D,aAAA,SAAAC,GACAlY,EAAA48D,qCAAA1kD,MAWA8W,EAAAjJ,KAAAnkB,UAAA8pB,mBAAA,SAAAvc,GACA,IAAAnP,EAAAC,KACAkqB,EAAAlqB,KAAA29D,4BAAAzuD,GAAAA,OACAgvD,EAAAl+D,KAAAq7D,sBAAAgB,QAAAntD,GAQA,OAPAgvD,EAAAK,gBAAA,SAAApqD,GACApU,EAAAy+D,yBAAArqD,KAEAnU,KAAAw+D,yBAAAN,GACAA,EAAAO,kBAAA,SAAAtqD,GACApU,EAAAy+D,yBAAArqD,KAEA+V,GAQA6E,EAAAjJ,KAAAnkB,UAAA68D,yBAAA,SAAArqD,GACA,IAAAyoD,EAAAzoD,EAAAmO,WACA,GAAA,OAAAs6C,EAAA,CAQA,IAAA,IALA/4B,KAGA/a,KACA41C,GAAA,EACA/1D,EAAA,EAAuBA,EAAAi0D,EAAA95D,OAAkB6F,IACzC,GAAAi0D,EAAAj0D,GAAAkgB,SAAAqyC,EAAAsC,uBAGA,GAAAZ,EAAAj0D,GAAAkgB,SAAAqyC,EAAAkC,KACAj2D,EAAAkC,OAAAq1D,IAAA/1D,EAAA,EAAA,mDACA+1D,EAAA/1D,EAEAi0D,EAAAj0D,GAAAkgB,OAAAqyC,EAAAsC,iBACAZ,EAAAj0D,GAAAizD,YAAA,WAOA,GAJAz0D,EAAAkC,OAAAuzD,EAAAj0D,GAAAkgB,SAAAqyC,EAAAiB,IAAA,0CAEAS,EAAAj0D,GAAAgzD,YACA7yC,EAAAA,EAAAlf,OAAA5J,KAAA2oB,gBAAA4C,aAAAqxC,EAAAj0D,GAAAkzD,gBAAA,IACAe,EAAAj0D,GAAA0f,WAAA,CAEAwb,EAAA5+B,KAAA23D,EAAAj0D,GAAA0f,WAAA/e,KAAA,KAAA,IAAAS,MAAA,QAAA,EADA,QAKA,IAAA20D,EAEAvqD,EAAAooD,SAAA,MAIAK,EAAA95D,OAAA47D,EAAA,EAGA1+D,KAAAmmB,YAAA4C,0BAAA5U,EAAAjF,OAAA4Z,GACA,IAAAngB,EAAA,EAAuBA,EAAAk7B,EAAA/gC,OAAsB6F,IAC7CvB,EAAAmI,eAAAs0B,EAAAl7B,wCC/hBA5B,OAAOC,eAAeC,EAAS,cAAgBC,OAAO,IACtD,IAAIC,EAASrB,EAAQ,KACjBoV,EAASpV,EAAQ,KACjBsB,EAAStB,EAAQ,KAIjB64D,EAA0B,WAQ1B,OAPA,WAGI3+D,KAAKyyB,YACLzyB,KAAK4+D,WAAa,EAClB5+D,KAAKkH,MAAQ,MANQ,GAU7BD,EAAQ03D,SAAWA,EA+LnB13D,EAAQq0D,KAzLkB,WAOtB,SAAAA,EAAcuD,EAAOC,EAAS1wC,QACZ,IAAVywC,IAAoBA,EAAQ,SAChB,IAAZC,IAAsBA,EAAU,WACtB,IAAV1wC,IAAoBA,EAAQ,IAAIuwC,GACpC3+D,KAAK6+D,MAAQA,EACb7+D,KAAK8+D,QAAUA,EACf9+D,KAAKouB,MAAQA,EA0KjB,OAlKAktC,EAAK35D,UAAU06D,QAAU,SAAU0C,GAI/B,IAFA,IACkBplD,EADdzK,EAAO6vD,aAAmB7jD,EAAOhL,KAAO6uD,EAAU,IAAI7jD,EAAOhL,KAAK6uD,GAClExtD,EAAQvR,KACwB,QAA5B2Z,EAAOzK,EAAKyB,aAAsB,CAEtCY,EAAQ,IAAI+pD,EAAK3hD,EAAMpI,EADPnK,EAAO4W,QAAQzM,EAAM6c,MAAMqE,SAAU9Y,IAAS,IAAIglD,GAElEzvD,EAAOA,EAAK2B,WAEhB,OAAOU,GAOX+pD,EAAK35D,UAAU2gB,SAAW,WACtB,OAAOtiB,KAAKouB,MAAMlnB,OAOtBo0D,EAAK35D,UAAU46D,SAAW,SAAUr1D,GAChCC,EAAOkC,YAAwB,IAAVnC,EAAuB,iCAC5ClH,KAAKouB,MAAMlnB,MAAQA,EACnBlH,KAAKg/D,kBAKT1D,EAAK35D,UAAUknC,MAAQ,WACnB7oC,KAAKouB,MAAMlnB,MAAQ,KACnBlH,KAAKouB,MAAMqE,YACXzyB,KAAKouB,MAAMwwC,WAAa,EACxB5+D,KAAKg/D,kBAKT1D,EAAK35D,UAAUywB,YAAc,WACzB,OAAOpyB,KAAKouB,MAAMwwC,WAAa,GAKnCtD,EAAK35D,UAAU+P,QAAU,WACrB,OAA2B,OAApB1R,KAAKsiB,aAAwBtiB,KAAKoyB,eAO7CkpC,EAAK35D,UAAUqW,aAAe,SAAUmB,GACpC,IAAIpZ,EAAQC,KACZoH,EAAO4F,QAAQhN,KAAKouB,MAAMqE,SAAU,SAAUlhB,EAAO2hB,GACjD/Z,EAAO,IAAImiD,EAAK/pD,EAAOxR,EAAOmzB,OAYtCooC,EAAK35D,UAAU88D,kBAAoB,SAAUtlD,EAAQ8lD,EAAaC,GAC1DD,IAAgBC,GAChB/lD,EAAOnZ,MACXA,KAAKgY,aAAa,SAAUzG,GACxBA,EAAMktD,kBAAkBtlD,GAAyB,EAAM+lD,KAEvDD,GAAeC,GACf/lD,EAAOnZ,OAUfs7D,EAAK35D,UAAU48D,gBAAkB,SAAUplD,EAAQ8lD,GAE/C,IADA,IAAI9qD,EAAO8qD,EAAcj/D,KAAOA,KAAKqR,SACrB,OAAT8C,GAAe,CAClB,GAAIgF,EAAOhF,GACP,OAAO,EAEXA,EAAOA,EAAK9C,SAEhB,OAAO,GASXiqD,EAAK35D,UAAUw9D,oCAAsC,SAAUhmD,GAC3DnZ,KAAKgY,aAAa,SAAUzG,GACC,OAArBA,EAAM+Q,WACNnJ,EAAO5H,GAEPA,EAAM4tD,oCAAoChmD,MAMtDmiD,EAAK35D,UAAUuN,KAAO,WAClB,OAAO,IAAIgM,EAAOhL,KAAsB,OAAjBlQ,KAAK8+D,QACtB9+D,KAAK6+D,MACL7+D,KAAK8+D,QAAQ5vD,OAAS,IAAMlP,KAAK6+D,QAK3CvD,EAAK35D,UAAU6B,KAAO,WAClB,OAAOxD,KAAK6+D,OAKhBvD,EAAK35D,UAAU0P,OAAS,WACpB,OAAOrR,KAAK8+D,SAOhBxD,EAAK35D,UAAUq9D,eAAiB,WACP,OAAjBh/D,KAAK8+D,SACL9+D,KAAK8+D,QAAQM,aAAap/D,KAAK6+D,MAAO7+D,OAS9Cs7D,EAAK35D,UAAUy9D,aAAe,SAAUzoD,EAAWpF,GAC/C,IAAI8tD,EAAa9tD,EAAMG,UACnB4tD,EAAcl4D,EAAOqL,SAASzS,KAAKouB,MAAMqE,SAAU9b,GACnD0oD,GAAcC,UACPt/D,KAAKouB,MAAMqE,SAAS9b,GAC3B3W,KAAKouB,MAAMwwC,aACX5+D,KAAKg/D,kBAECK,GAAeC,IACrBt/D,KAAKouB,MAAMqE,SAAS9b,GAAapF,EAAM6c,MACvCpuB,KAAKouB,MAAMwwC,aACX5+D,KAAKg/D,mBAGN1D,EAvLc,qCCvBzBv0D,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAA+uD,EAAAnwD,EAAA,KACAkwD,EAAAlwD,EAAA,KAQAmB,EAAAs4D,iBAAA,WACAtJ,EAAApX,oBAAA5D,gBACA+a,EAAA7c,sBAAA4B,cAEA9zC,EAAAu4D,gBAAA,WACAxJ,EAAA7c,sBAAA8B,iBAGAh0C,EAAAkvD,sBAAA,WACA,OAAAF,EAAApX,oBAAA,eAEA53C,EAAAw4D,yBAAA,SAAA7vC,EAAAziB,GACAyiB,EAAAR,KAAA3I,sBAAA4mB,uBAAAlgC,GAEAlG,EAAAomB,MAAA,SAAAuC,EAAAtC,GACAsC,EAAAR,KAAA/B,MAAAC,IAEArmB,EAAA4mB,sBAAA,SAAA+B,EAAA9B,GACA8B,EAAAR,KAAAvB,sBAAAC,IAEA7mB,EAAAgf,gBAAA,SAAA2J,GACA,OAAAA,EAAAR,KAAAnJ,iBAEAhf,EAAAy4D,oBAAA,SAAA9vC,EAAAziB,GACA,OAAAyiB,EAAAR,KAAAhF,qBAAAjd,sCClCApG,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAA04B,EAAA95B,EAAA,KACA6f,EAAA7f,EAAA,KACA+4B,EAAA/4B,EAAA,KACAymC,EAAAzmC,EAAA,KACAmB,EAAA04D,eAAAh6C,EAAA0B,qBAKA1B,EAAA0B,qBAAA1lB,UAAAi+D,aAAA,SAAA7uD,EAAAsX,GACAroB,KAAAuuC,YAAA,KAA2BvR,EAAAjsB,GAAgBsX,IAM3C1C,EAAA0B,qBAAA1lB,UAAAk+D,KAAA,SAAAp6D,EAAAq6D,GACA9/D,KAAAuuC,YAAA,QAA8BxoC,EAAAN,GAAUq6D,IAGxC74D,EAAA84D,mBAAAxzB,EAAAkG,WAKAxrC,EAAA+4D,WAAA,SAAAC,GACA,IAAAC,EAAAv6C,EAAA0B,qBAAA1lB,UAAAwpB,IAOA,OANAxF,EAAA0B,qBAAA1lB,UAAAwpB,IAAA,SAAApa,EAAAtL,EAAA06D,EAAAC,QACApkD,IAAAokD,IACAA,EAAAH,KAEAC,EAAAtlD,KAAA5a,KAAA+Q,EAAAtL,EAAA06D,EAAAC,IAEA,WACAz6C,EAAA0B,qBAAA1lB,UAAAwpB,IAAA+0C,IAMAj5D,EAAAo5D,iBAAAzgC,EAAAK,SAKAh5B,EAAA49B,gBAAA,SAAAzjC,GACA,OAAAA,EAAAyjC,mBAMA59B,EAAAq5D,QAAA,SAAAC,GACA,OAAAA,EAAAnxC,KAAA3I,sBAAAqmB,UAOA7lC,EAAA+e,gBAAA,SAAAA,GACA6Y,EAAArJ,YAAAG,cAAA3P,gBAAAA,sCC7EA,IAAAw6C,EAAA16D,EAAA,KAoDAmB,EAAAwwB,cAPA,WAEA,IAAA,IADAyB,KACAt2B,EAAA,EAAoBA,EAAA6F,UAAA3F,OAAuBF,IAC3Cs2B,EAAAt2B,EAAA,GAAA6F,UAAA7F,GAEA,OAAA49D,EAAA/oC,cAAA3uB,WAAA,EAAAowB,EAAAsnC,CAAAxgE,8DC7CIygE,EAAoB36D,EAAQ,IAC5B46D,EAAY56D,EAAQ,IACpB66D,EAAoB76D,EAAQ,IAC5B86D,EAAsB96D,EAAQ,IAC9B+6D,KA6DJ55D,EAAQwwB,cAhBR,WAEI,IAAK,IADDyB,KACKt2B,EAAK,EAAGA,EAAK6F,UAAU3F,OAAQF,IACpCs2B,EAAYt2B,EAAK,GAAK6F,UAAU7F,GAEpC,IAAIk+D,EAAU,KASd,MARmD,mBAAxC5nC,EAAYA,EAAYp2B,OAAS,KACxCg+D,EAAU5nC,EAAYjmB,OAIC,IAAvBimB,EAAYp2B,QAAgB49D,EAAU73D,QAAQqwB,EAAY,MAC1DA,EAAcA,EAAY,GAAG/nB,SAE1B,SAAUojB,GAAU,OAAOA,EAAO+I,KAAK1iB,KAAK,IAAI6lD,EAAkBM,iBAAiBxsC,GAAQ3qB,OAAOsvB,IAAe,IAAI8nC,EAAsBF,MAGtJ,IAAIE,EAAyB,WACzB,SAAAA,EAA+BF,GAC3B9gE,KAAK8gE,QAAUA,EAKnB,OAHAE,EAAsBr/D,UAAUiZ,KAAO,SAAUye,EAAY9E,GACzD,OAAOA,EAAO/yB,UAAU,IAAIy/D,EAAwB5nC,EAAYr5B,KAAK8gE,WAElEE,EAPiB,GAS5B/5D,EAAQ+5D,sBAAwBA,EAMhC,IAAIC,EAA2B,SAAUltD,GAErC,SAAAktD,EAAiCC,EAAaJ,GAC1C/sD,EAAO6G,KAAK5a,KAAMkhE,GAClBlhE,KAAK8gE,QAAUA,EACf9gE,KAAKmhE,OAAS,EACdnhE,KAAKioC,UACLjoC,KAAKk5B,eAqDT,OA3DAllB,EAAUitD,EAAyBltD,GAQnCktD,EAAwBt/D,UAAUy/D,MAAQ,SAAU5jC,GAChDx9B,KAAKioC,OAAOhjC,KAAK47D,GACjB7gE,KAAKk5B,YAAYj0B,KAAKu4B,IAE1ByjC,EAAwBt/D,UAAU0/D,UAAY,WAC1C,IAAInoC,EAAcl5B,KAAKk5B,YACnBvsB,EAAMusB,EAAYp2B,OACtB,GAAY,IAAR6J,EACA3M,KAAKkhE,YAAYhmC,eAEhB,CACDl7B,KAAKmhE,OAASx0D,EACd3M,KAAKshE,UAAY30D,EACjB,IAAK,IAAIhE,EAAI,EAAGA,EAAIgE,EAAKhE,IAAK,CAC1B,IAAI60B,EAAatE,EAAYvwB,GAC7B3I,KAAKyoC,IAAIm4B,EAAoBW,kBAAkBvhE,KAAMw9B,EAAYA,EAAY70B,OAIzFs4D,EAAwBt/D,UAAU6/D,eAAiB,SAAUlf,GAC9B,IAAtBtiD,KAAKmhE,QAAU,IAChBnhE,KAAKkhE,YAAYhmC,YAGzB+lC,EAAwBt/D,UAAU8/D,WAAa,SAAUC,EAAYC,EAAYC,EAAYC,EAAYC,GACrG,IAAI75B,EAASjoC,KAAKioC,OAEdq5B,EAAathE,KAAKshE,UADTr5B,EAAO25B,KAGHf,IAAS7gE,KAAKshE,UAAYthE,KAAKshE,UAD1C,EAENr5B,EAAO25B,GAAcD,EACH,IAAdL,IACIthE,KAAK8gE,QACL9gE,KAAK+hE,YAAY95B,GAGjBjoC,KAAKkhE,YAAYvnD,KAAKsuB,EAAO92B,WAIzC8vD,EAAwBt/D,UAAUogE,YAAc,SAAU95B,GACtD,IAAI5kB,EACJ,IACIA,EAASrjB,KAAK8gE,QAAQh4D,MAAM9I,KAAMioC,GAEtC,MAAOhN,GAEH,YADAj7B,KAAKkhE,YAAYr3D,MAAMoxB,GAG3Bj7B,KAAKkhE,YAAYvnD,KAAK0J,IAEnB49C,EA5DmB,CA6D5BN,EAAkBqB,iBACpB/6D,EAAQg6D,wBAA0BA,oCCpJlC,IAAAgB,EAAAn8D,EAAA,KACAo8D,EAAAp8D,EAAA,KA+CAmB,EAAA8wB,UAJA,SAAAoqC,EAAAC,GAEA,YADA,IAAAA,IAA+BA,EAAAH,EAAA3rC,OAC/B4rC,EAAAnqC,UAAAoqC,EAAAC,EAAAF,CAAAliE,yCC9CA,IAAAiiE,EAAAn8D,EAAA,KACAu8D,EAAAv8D,EAAA,KACAw8D,EAAAx8D,EAAA,KA+CAmB,EAAA8wB,UAJA,SAAAoqC,EAAAC,GAEA,YADA,IAAAA,IAA+BA,EAAAH,EAAA3rC,OAC/B+rC,EAAAjrC,MAAA,WAAsC,OAAAkrC,EAAAC,MAAAJ,EAAAC,6DC1ClCI,EAAa18D,EAAQ,KACrB28D,EAAgB38D,EAAQ,IACxB66D,EAAoB76D,EAAQ,IAC5B86D,EAAsB96D,EAAQ,IA8ClCmB,EAAQmwB,MALR,SAAesrC,GACX,OAAO,SAA+BnuC,GAClC,OAAOA,EAAO+I,KAAK,IAAIqlC,EAAcD,MAI7C,IAAIC,EAAiB,WACjB,SAAAA,EAAuBD,GACnB1iE,KAAK0iE,iBAAmBA,EAK5B,OAHAC,EAAchhE,UAAUiZ,KAAO,SAAUye,EAAY9E,GACjD,OAAOA,EAAO/yB,UAAU,IAAIohE,EAAgBvpC,EAAYr5B,KAAK0iE,oBAE1DC,EAPS,GAchBC,EAAmB,SAAU7uD,GAE7B,SAAA6uD,EAAyB1B,EAAawB,GAClC3uD,EAAO6G,KAAK5a,KAAMkhE,GAClBlhE,KAAK0iE,iBAAmBA,EACxB1iE,KAAK6iE,UAAW,EAwCpB,OA5CA7uD,EAAU4uD,EAAiB7uD,GAM3B6uD,EAAgBjhE,UAAUy/D,MAAQ,SAAUl6D,GAGxC,GAFAlH,KAAKkH,MAAQA,EACblH,KAAK6iE,UAAW,GACX7iE,KAAK8iE,UAAW,CACjB,IAAIX,EAAWK,EAAWO,SAAS/iE,KAAK0iE,iBAAzBF,CAA2Ct7D,GAC1D,GAAIi7D,IAAaM,EAAcO,YAC3BhjE,KAAKkhE,YAAYr3D,MAAM44D,EAAcO,YAAYx1D,OAEhD,CACD,IAAIy1D,EAAoBrC,EAAoBW,kBAAkBvhE,KAAMmiE,GAChEc,EAAkBC,OAClBljE,KAAKmjE,gBAGLnjE,KAAKyoC,IAAIzoC,KAAK8iE,UAAYG,MAK1CL,EAAgBjhE,UAAUwhE,cAAgB,WACtC,IAAej8D,EAANlH,KAAiBkH,MAAO27D,EAAxB7iE,KAAsC6iE,SAAUC,EAAhD9iE,KAA+D8iE,UACpEA,IACA9iE,KAAKyJ,OAAOq5D,GACZ9iE,KAAK8iE,UAAY,KACjBA,EAAUxoC,eAEVuoC,IACA7iE,KAAKkH,MAAQ,KACblH,KAAK6iE,UAAW,EAChB7iE,KAAKkhE,YAAYvnD,KAAKzS,KAG9B07D,EAAgBjhE,UAAU8/D,WAAa,SAAUC,EAAYC,EAAYC,EAAYC,GACjF7hE,KAAKmjE,iBAETP,EAAgBjhE,UAAU6/D,eAAiB,WACvCxhE,KAAKmjE,iBAEFP,EA7CW,CA8CpBjC,EAAkBqB,mDCnHpB,IAAAoB,EAAAt9D,EAAA,KACAmB,EAAAs7D,MAAAa,EAAAC,gBAAAviE,8DCIIwiE,EAAcx9D,EAAQ,KACtBy9D,EAAez9D,EAAQ,GACvBm8D,EAAUn8D,EAAQ,KAClB09D,EAAgB19D,EAAQ,KACxB29D,EAAW39D,EAAQ,KA+FvBmB,EAAQo8D,gBAzFe,SAAUtvD,GAE7B,SAAAsvD,EAAyBK,EAASC,EAAQvB,QACtB,IAAZsB,IAAsBA,EAAU,GACpC3vD,EAAO6G,KAAK5a,MACZA,KAAK2jE,QAAU,EACf3jE,KAAK0jE,QAAU,EACXJ,EAAYM,UAAUD,GACtB3jE,KAAK2jE,OAASl5D,OAAOk5D,GAAU,GAAK,GAAKl5D,OAAOk5D,GAE3CH,EAAcK,YAAYF,KAC/BvB,EAAYuB,GAEXH,EAAcK,YAAYzB,KAC3BA,EAAYH,EAAQ3rC,OAExBt2B,KAAKoiE,UAAYA,EACjBpiE,KAAK0jE,QAAUD,EAASK,OAAOJ,IACzBA,EAAU1jE,KAAKoiE,UAAUpxC,MAC3B0yC,EAoER,OAtFA1vD,EAAUqvD,EAAiBtvD,GA8D3BsvD,EAAgBviE,OAAS,SAAUijE,EAAcJ,EAAQvB,GAErD,YADqB,IAAjB2B,IAA2BA,EAAe,GACvC,IAAIV,EAAgBU,EAAcJ,EAAQvB,IAErDiB,EAAgBW,SAAW,SAAUC,GACjC,IAAIzrD,EAAQyrD,EAAMzrD,MAAOmrD,EAASM,EAAMN,OAAQtqC,EAAa4qC,EAAM5qC,WAGnE,GADAA,EAAW1f,KAAKnB,IACZ6gB,EAAW6pC,OAAf,CAGK,IAAgB,IAAZS,EACL,OAAOtqC,EAAW6B,WAEtB+oC,EAAMzrD,MAAQA,EAAQ,EARTxY,KASNkkE,SAASD,EAAON,KAE3BN,EAAgB1hE,UAAUwiE,WAAa,SAAU9qC,GAG7C,OADSr5B,KAA+DoiE,UACvD8B,SAASb,EAAgBW,SADjChkE,KAAuC0jE,SAE5ClrD,MAHQ,EAGMmrD,OAFT3jE,KAAkB2jE,OAEOtqC,WAAYA,KAG3CgqC,EAvFW,CAwFpBE,EAAajsC,8CCvGf,IAAAopC,EAAA56D,EAAA,IAQAmB,EAAA28D,UAPA,SAAA32D,GAKA,OAAAyzD,EAAA73D,QAAAoE,IAAAA,EAAAkzC,WAAAlzC,GAAA,GAAA,qCCHAhG,EAAA68D,OAHA,SAAA58D,GACA,OAAAA,aAAAkiB,OAAAy3B,OAAA35C","sourcesContent":["/**\r\n* @fileoverview This file is generated by the Angular template compiler.\r\n* Do not edit.\r\n* @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}\r\n* tslint:disable\r\n*/ \r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"../../../../../node_modules/ionic-angular/components/content/content.ngfactory\";\r\nimport * as i2 from \"ionic-angular/components/content/content\";\r\nimport * as i3 from \"ionic-angular/config/config\";\r\nimport * as i4 from \"ionic-angular/platform/platform\";\r\nimport * as i5 from \"ionic-angular/platform/dom-controller\";\r\nimport * as i6 from \"ionic-angular/components/app/app\";\r\nimport * as i7 from \"ionic-angular/platform/keyboard\";\r\nimport * as i8 from \"ionic-angular/navigation/view-controller\";\r\nimport * as i9 from \"ionic-angular/navigation/nav-controller\";\r\nimport * as i10 from \"ionic-angular/components/grid/grid\";\r\nimport * as i11 from \"ionic-angular/components/grid/row\";\r\nimport * as i12 from \"ionic-angular/components/grid/col\";\r\nimport * as i13 from \"../../../../../node_modules/ionic-angular/components/button/button.ngfactory\";\r\nimport * as i14 from \"ionic-angular/components/button/button\";\r\nimport * as i15 from \"./list-map1\";\r\nimport * as i16 from \"ionic-angular/navigation/nav-params\";\r\nimport * as i17 from \"ionic-angular/components/loading/loading-controller\";\r\nimport * as i18 from \"angularfire2/database-deprecated\";\r\nvar styles_ListMap1Page = [];\r\nvar RenderType_ListMap1Page = i0.ɵcrt({ encapsulation: 2, styles: styles_ListMap1Page, data: {} });\r\nexport { RenderType_ListMap1Page as RenderType_ListMap1Page };\r\nexport function View_ListMap1Page_0(_l) { return i0.ɵvid(0, [i0.ɵqud(402653184, 1, { mapElement: 0 }), (_l()(), i0.ɵted(-1, null, [\"\\n\"])), (_l()(), i0.ɵeld(2, 0, null, null, 29, \"ion-content\", [], [[2, \"statusbar-padding\", null], [2, \"has-refresher\", null]], null, null, i1.View_Content_0, i1.RenderType_Content)), i0.ɵdid(3, 4374528, null, 0, i2.Content, [i3.Config, i4.Platform, i5.DomController, i0.ElementRef, i0.Renderer, i6.App, i7.Keyboard, i0.NgZone, [2, i8.ViewController], [2, i9.NavController]], null, null), (_l()(), i0.ɵted(-1, 1, [\"\\n      \"])), (_l()(), i0.ɵted(-1, 1, [\"\\n  \"])), (_l()(), i0.ɵeld(6, 0, null, 1, 24, \"div\", [[\"id\", \"wrapper\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"\\n        \"])), (_l()(), i0.ɵted(-1, null, [\"\\n         \"])), (_l()(), i0.ɵeld(9, 0, [[1, 0], [\"map\", 1]], null, 0, \"div\", [[\"id\", \"map\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"\\n\\n        \"])), (_l()(), i0.ɵted(-1, null, [\"\\n        \"])), (_l()(), i0.ɵeld(12, 0, null, null, 17, \"div\", [[\"class\", \"map-bottom request-controls\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"\\n            \"])), (_l()(), i0.ɵeld(14, 0, null, null, 14, \"ion-grid\", [[\"class\", \"grid\"]], null, null, null, null, null)), i0.ɵdid(15, 16384, null, 0, i10.Grid, [], null, null), (_l()(), i0.ɵted(-1, null, [\"\\n                \"])), (_l()(), i0.ɵeld(17, 0, null, null, 10, \"ion-row\", [[\"class\", \"row\"]], null, null, null, null, null)), i0.ɵdid(18, 16384, null, 0, i11.Row, [], null, null), (_l()(), i0.ɵted(-1, null, [\"\\n                    \"])), (_l()(), i0.ɵeld(20, 0, null, null, 6, \"ion-col\", [[\"class\", \"col\"]], null, null, null, null, null)), i0.ɵdid(21, 16384, null, 0, i12.Col, [], null, null), (_l()(), i0.ɵted(-1, null, [\"\\n                    \"])), (_l()(), i0.ɵeld(23, 0, null, null, 2, \"button\", [[\"block\", \"\"], [\"color\", \"ios-pink\"], [\"ion-button\", \"\"], [\"large\", \"\"], [\"mode\", \"ios\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\r\n        var pd_0 = (_co.dismiss() !== false);\r\n        ad = (pd_0 && ad);\r\n    } return ad; }, i13.View_Button_0, i13.RenderType_Button)), i0.ɵdid(24, 1097728, null, 0, i14.Button, [[8, \"\"], i3.Config, i0.ElementRef, i0.Renderer], { color: [0, \"color\"], mode: [1, \"mode\"], large: [2, \"large\"], block: [3, \"block\"] }, null), (_l()(), i0.ɵted(-1, 0, [\"Close\"])), (_l()(), i0.ɵted(-1, null, [\"\\n                    \"])), (_l()(), i0.ɵted(-1, null, [\"\\n                \"])), (_l()(), i0.ɵted(-1, null, [\"\\n            \"])), (_l()(), i0.ɵted(-1, null, [\"\\n        \"])), (_l()(), i0.ɵted(-1, null, [\"\\n    \"])), (_l()(), i0.ɵted(-1, 1, [\"\\n\"])), (_l()(), i0.ɵted(-1, null, [\"\\n\\n\"]))], function (_ck, _v) { var currVal_2 = \"ios-pink\"; var currVal_3 = \"ios\"; var currVal_4 = \"\"; var currVal_5 = \"\"; _ck(_v, 24, 0, currVal_2, currVal_3, currVal_4, currVal_5); }, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 3).statusbarPadding; var currVal_1 = i0.ɵnov(_v, 3)._hasRefresher; _ck(_v, 2, 0, currVal_0, currVal_1); }); }\r\nexport function View_ListMap1Page_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"page-list-map1\", [], null, null, null, View_ListMap1Page_0, RenderType_ListMap1Page)), i0.ɵdid(1, 49152, null, 0, i15.ListMap1Page, [i9.NavController, i16.NavParams, i17.LoadingController, i8.ViewController, i18.AngularFireDatabase], null, null)], null, null); }\r\nvar ListMap1PageNgFactory = i0.ɵccf(\"page-list-map1\", i15.ListMap1Page, View_ListMap1Page_Host_0, {}, {}, []);\r\nexport { ListMap1PageNgFactory as ListMap1PageNgFactory };\r\n//# sourceMappingURL=list-map1.ngfactory.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/layout/app1/list-map1/list-map1.ngfactory.js","import { Component,ViewChild,ElementRef } from '@angular/core';\r\nimport { NavController, NavParams, LoadingController, ViewController } from 'ionic-angular';\r\nimport { AngularFireDatabase } from 'angularfire2/database-deprecated';\r\nimport 'rxjs/add/operator/map'; // you might need to import this, or not depends on your setup\r\ndeclare var google;\r\n\r\n\r\n@Component({\r\n  selector: 'page-list-map1',\r\n  templateUrl: 'list-map1.html'\r\n})\r\nexport class ListMap1Page {\r\n  @ViewChild('map') mapElement: ElementRef;\r\n  categoryId:any\r\n  items: any[] = [];\r\n\r\n  map: any;\r\n  markerSelected: boolean = false;\r\n  //******************** Map style  **************************//\r\n  //***** go to snazzymaps.com for more map style  ***********//\r\n  //**********************************************************//\r\n  mapStyle: any = [{\"featureType\":\"landscape.man_made\",\"elementType\":\"all\",\"stylers\":[{\"color\":\"#faf5ed\"},{\"lightness\":\"0\"},{\"gamma\":\"1\"}]},{\"featureType\":\"poi.park\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#bae5a6\"}]},{\"featureType\":\"road\",\"elementType\":\"all\",\"stylers\":[{\"weight\":\"1.00\"},{\"gamma\":\"1.8\"},{\"saturation\":\"0\"}]},{\"featureType\":\"road\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"hue\":\"#ffb200\"}]},{\"featureType\":\"road.arterial\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"lightness\":\"0\"},{\"gamma\":\"1\"}]},{\"featureType\":\"transit.station.airport\",\"elementType\":\"all\",\"stylers\":[{\"hue\":\"#b000ff\"},{\"saturation\":\"23\"},{\"lightness\":\"-4\"},{\"gamma\":\"0.80\"}]},{\"featureType\":\"water\",\"elementType\":\"all\",\"stylers\":[{\"color\":\"#a0daf2\"}]}];\r\n\r\n  infoWindows: any=[];\r\n\r\n  constructor(public navCtrl: NavController,public navParams: NavParams,public loadingCtrl: LoadingController ,public viewCtrl: ViewController,public afDB: AngularFireDatabase) {\r\n\r\n      let loadingPopup = this.loadingCtrl.create({\r\n        spinner: 'crescent',\r\n        content: ''\r\n      });\r\n      loadingPopup.present();\r\n\r\n      this.categoryId = this.navParams.get('categoryId');\r\n      this.afDB.list('/list', {query: {\r\n          orderByChild: \"categoryId\",\r\n          equalTo: parseInt(this.categoryId) \r\n      }}).subscribe(listItems => {\r\n          this.items = listItems;\r\n          this.displayGoogleMap();\r\n          loadingPopup.dismiss()\r\n      });\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n   \r\n  }\r\n\r\n\r\n  displayGoogleMap() {\r\n    let latLng = new google.maps.LatLng(13.801532791932946, 100.54677690766607);\r\n    let mapOptions = {\r\n        center: latLng,\r\n        zoom: 12,\r\n        styles: this.mapStyle,\r\n        mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n        disableDefaultUI: true\r\n    };\r\n    this.map = new google.maps.Map(this.mapElement.nativeElement, mapOptions);\r\n    this.addMarkersToMap()\r\n  }\r\n\r\n\r\n  addMarkersToMap() {\r\n    for(let items of this.items) {\r\n      var position = new google.maps.LatLng(items.lat, items.lng);\r\n      var mapMarker = new google.maps.Marker({\r\n            position: position,\r\n            animation: google.maps.Animation.DROP,\r\n            markerSelected : true,\r\n            title: items.name,\r\n            email: items.email,\r\n            web: items.web,\r\n            phone: items.phone,\r\n\r\n            //**** Custom Marker Symbols ****/\r\n            //icon:  'assets/red_pin72x96.png'\r\n            icon: {\r\n                    url: 'assets/red_pin72x96.png',\r\n                    //The size image file.\r\n                    size: new google.maps.Size(72, 96),\r\n                    // we want to render @ 30x30 logical px (@2x dppx or 'Retina')\r\n                    scaledSize: new google.maps.Size(40, 52), \r\n                    //The point on the image to measure the anchor from. 0, 0 is the top left.\r\n                    origin: new google.maps.Point(0, 0),\r\n                    //The x y coordinates of the anchor point on the marker. e.g. If your map marker was a drawing pin then the anchor would be the tip of the pin.\r\n                    anchor: new google.maps.Point(20, 40),\r\n                    labelOrigin: new google.maps.Point(20, 12)\r\n                },\r\n                anchorPoint: new google.maps.Point(0, -40)\r\n      });\r\n      mapMarker.setMap(this.map);\r\n      this.addInfoWindowToMarker(mapMarker);\r\n      this.map.setCenter(position);\r\n    }\r\n  \r\n  }\r\n\r\n\r\n\r\n  addInfoWindowToMarker(marker) {\r\n\r\n      var infoWindowContent = '<div id=\"iw-container\">' +               \r\n                                  '<div class=\"iw-content\">' +\r\n                                        '<div class=\"iw-subTitle\">'+marker.title+'</div>' +                                  \r\n                                        '<br><b>Phone:</b> '+marker.phone+'<br><b>E-mail:</b>'+marker.email+'<br><b>Website:</b> '+marker.web+'</p>'+\r\n                                  '</div>' +\r\n                                  //'<div id=\"do-something-button\">button</div>' +\r\n                              '</div>';    \r\n\r\n      var infoWindow = new google.maps.InfoWindow();\r\n          // infoWindow.setOptions({\r\n          //     disableAutoPan:false\r\n          // }); \r\n          infoWindow.setContent(infoWindowContent);\r\n\r\n          marker.addListener('click', () => {\r\n                this.closeAllInfoWindows();\r\n                infoWindow.open(this.map, marker);\r\n                // add listener that will capture the click event of the infoWindow\r\n                // google.maps.event.addListener(infoWindow, 'domready', () => {\r\n                //   document.getElementById('do-something-button').addEventListener('click', () => {\r\n                //      this.doSomething();\r\n                //   });\r\n                // }); \r\n\r\n          });\r\n          this.infoWindows.push(infoWindow);\r\n  }\r\n\r\n  doSomething(){\r\n    console.log(\"doSomething\");\r\n  }\r\n\r\n  closeAllInfoWindows() {\r\n      for(let window of this.infoWindows) { \r\n        window.close();\r\n      }\r\n  }\r\n \r\n\r\n  dismiss() {\r\n   this.viewCtrl.dismiss();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/layout/app1/list-map1/list-map1.ts","import { NgModule } from '@angular/core';\r\nimport { ListMap1Page } from './list-map1';\r\nimport { IonicPageModule } from 'ionic-angular';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ListMap1Page,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(ListMap1Page),\r\n  ],\r\n  exports: [\r\n    ListMap1Page\r\n  ]\r\n})\r\nexport class ListMap1PageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/layout/app1/list-map1/list-map1.module.ts","/**\r\n* @fileoverview This file is generated by the Angular template compiler.\r\n* Do not edit.\r\n* @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}\r\n* tslint:disable\r\n*/ \r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"./list-map1.module\";\r\nimport * as i2 from \"../../../../../node_modules/ionic-angular/components/action-sheet/action-sheet-component.ngfactory\";\r\nimport * as i3 from \"../../../../../node_modules/ionic-angular/components/alert/alert-component.ngfactory\";\r\nimport * as i4 from \"../../../../../node_modules/ionic-angular/components/app/app-root.ngfactory\";\r\nimport * as i5 from \"../../../../../node_modules/ionic-angular/components/loading/loading-component.ngfactory\";\r\nimport * as i6 from \"../../../../../node_modules/ionic-angular/components/modal/modal-component.ngfactory\";\r\nimport * as i7 from \"../../../../../node_modules/ionic-angular/components/picker/picker-component.ngfactory\";\r\nimport * as i8 from \"../../../../../node_modules/ionic-angular/components/popover/popover-component.ngfactory\";\r\nimport * as i9 from \"../../../../../node_modules/ionic-angular/components/select/select-popover-component.ngfactory\";\r\nimport * as i10 from \"../../../../../node_modules/ionic-angular/components/toast/toast-component.ngfactory\";\r\nimport * as i11 from \"./list-map1.ngfactory\";\r\nimport * as i12 from \"@angular/common\";\r\nimport * as i13 from \"@angular/forms\";\r\nimport * as i14 from \"ionic-angular/module\";\r\nimport * as i15 from \"ionic-angular/util/module-loader\";\r\nimport * as i16 from \"./list-map1\";\r\nvar ListMap1PageModuleNgFactory = i0.ɵcmf(i1.ListMap1PageModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [i2.ActionSheetCmpNgFactory, i3.AlertCmpNgFactory, i4.IonicAppNgFactory, i5.LoadingCmpNgFactory, i6.ModalCmpNgFactory, i7.PickerCmpNgFactory, i8.PopoverCmpNgFactory, i9.SelectPopoverNgFactory, i10.ToastCmpNgFactory, i11.ListMap1PageNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i12.NgLocalization, i12.NgLocaleLocalization, [i0.LOCALE_ID, [2, i12.ɵa]]), i0.ɵmpd(4608, i13.ɵi, i13.ɵi, []), i0.ɵmpd(4608, i13.FormBuilder, i13.FormBuilder, []), i0.ɵmpd(512, i12.CommonModule, i12.CommonModule, []), i0.ɵmpd(512, i13.ɵba, i13.ɵba, []), i0.ɵmpd(512, i13.FormsModule, i13.FormsModule, []), i0.ɵmpd(512, i13.ReactiveFormsModule, i13.ReactiveFormsModule, []), i0.ɵmpd(512, i14.IonicModule, i14.IonicModule, []), i0.ɵmpd(512, i14.IonicPageModule, i14.IonicPageModule, []), i0.ɵmpd(512, i1.ListMap1PageModule, i1.ListMap1PageModule, []), i0.ɵmpd(256, i15.LAZY_LOADED_TOKEN, i16.ListMap1Page, [])]); });\r\nexport { ListMap1PageModuleNgFactory as ListMap1PageModuleNgFactory };\r\n//# sourceMappingURL=list-map1.module.ngfactory.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/layout/app1/list-map1/list-map1.module.ngfactory.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"@firebase/util\");\nvar util_3 = require(\"@firebase/util\");\nvar util_4 = require(\"@firebase/util\");\nvar util_5 = require(\"@firebase/util\");\nvar util_6 = require(\"@firebase/util\");\nvar storage_1 = require(\"../storage/storage\");\nvar util_7 = require(\"@firebase/util\");\n/**\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\n * @type {function(): number} Generated ID.\n */\nexports.LUIDGenerator = (function () {\n    var id = 1;\n    return function () {\n        return id++;\n    };\n})();\n/**\n * Sha1 hash of the input string\n * @param {!string} str The string to hash\n * @return {!string} The resulting hash\n */\nexports.sha1 = function (str) {\n    var utf8Bytes = util_5.stringToByteArray(str);\n    var sha1 = new util_4.Sha1();\n    sha1.update(utf8Bytes);\n    var sha1Bytes = sha1.digest();\n    return util_3.base64.encodeByteArray(sha1Bytes);\n};\n/**\n * @param {...*} var_args\n * @return {string}\n * @private\n */\nvar buildLogMessage_ = function () {\n    var var_args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        var_args[_i] = arguments[_i];\n    }\n    var message = '';\n    for (var i = 0; i < var_args.length; i++) {\n        if (Array.isArray(var_args[i]) ||\n            (var_args[i] &&\n                typeof var_args[i] === 'object' &&\n                typeof var_args[i].length === 'number')) {\n            message += buildLogMessage_.apply(null, var_args[i]);\n        }\n        else if (typeof var_args[i] === 'object') {\n            message += util_6.stringify(var_args[i]);\n        }\n        else {\n            message += var_args[i];\n        }\n        message += ' ';\n    }\n    return message;\n};\n/**\n * Use this for all debug messages in Firebase.\n * @type {?function(string)}\n */\nexports.logger = null;\n/**\n * Flag to check for log availability on first log message\n * @type {boolean}\n * @private\n */\nvar firstLog_ = true;\n/**\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\n */\nexports.enableLogging = function (logger_, persistent) {\n    util_1.assert(!persistent || (logger_ === true || logger_ === false), \"Can't turn on custom loggers persistently.\");\n    if (logger_ === true) {\n        if (typeof console !== 'undefined') {\n            if (typeof console.log === 'function') {\n                exports.logger = console.log.bind(console);\n            }\n            else if (typeof console.log === 'object') {\n                // IE does this.\n                exports.logger = function (message) {\n                    console.log(message);\n                };\n            }\n        }\n        if (persistent)\n            storage_1.SessionStorage.set('logging_enabled', true);\n    }\n    else if (typeof logger_ === 'function') {\n        exports.logger = logger_;\n    }\n    else {\n        exports.logger = null;\n        storage_1.SessionStorage.remove('logging_enabled');\n    }\n};\n/**\n *\n * @param {...(string|Arguments)} var_args\n */\nexports.log = function () {\n    var var_args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        var_args[_i] = arguments[_i];\n    }\n    if (firstLog_ === true) {\n        firstLog_ = false;\n        if (exports.logger === null && storage_1.SessionStorage.get('logging_enabled') === true)\n            exports.enableLogging(true);\n    }\n    if (exports.logger) {\n        var message = buildLogMessage_.apply(null, var_args);\n        exports.logger(message);\n    }\n};\n/**\n * @param {!string} prefix\n * @return {function(...[*])}\n */\nexports.logWrapper = function (prefix) {\n    return function () {\n        var var_args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            var_args[_i] = arguments[_i];\n        }\n        exports.log.apply(void 0, [prefix].concat(var_args));\n    };\n};\n/**\n * @param {...string} var_args\n */\nexports.error = function () {\n    var var_args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        var_args[_i] = arguments[_i];\n    }\n    if (typeof console !== 'undefined') {\n        var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, var_args);\n        if (typeof console.error !== 'undefined') {\n            console.error(message);\n        }\n        else {\n            console.log(message);\n        }\n    }\n};\n/**\n * @param {...string} var_args\n */\nexports.fatal = function () {\n    var var_args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        var_args[_i] = arguments[_i];\n    }\n    var message = buildLogMessage_.apply(void 0, var_args);\n    throw new Error('FIREBASE FATAL ERROR: ' + message);\n};\n/**\n * @param {...*} var_args\n */\nexports.warn = function () {\n    var var_args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        var_args[_i] = arguments[_i];\n    }\n    if (typeof console !== 'undefined') {\n        var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, var_args);\n        if (typeof console.warn !== 'undefined') {\n            console.warn(message);\n        }\n        else {\n            console.log(message);\n        }\n    }\n};\n/**\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\n * does not use https.\n */\nexports.warnIfPageIsSecure = function () {\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\n    if (typeof window !== 'undefined' &&\n        window.location &&\n        window.location.protocol &&\n        window.location.protocol.indexOf('https:') !== -1) {\n        exports.warn('Insecure Firebase access from a secure page. ' +\n            'Please use https in calls to new Firebase().');\n    }\n};\n/**\n * @param {!String} methodName\n */\nexports.warnAboutUnsupportedMethod = function (methodName) {\n    exports.warn(methodName +\n        ' is unsupported and will likely change soon.  ' +\n        'Please do not use.');\n};\n/**\n * Returns true if data is NaN, or +/- Infinity.\n * @param {*} data\n * @return {boolean}\n */\nexports.isInvalidJSONNumber = function (data) {\n    return (typeof data === 'number' &&\n        (data != data || // NaN\n            data == Number.POSITIVE_INFINITY ||\n            data == Number.NEGATIVE_INFINITY));\n};\n/**\n * @param {function()} fn\n */\nexports.executeWhenDOMReady = function (fn) {\n    if (util_7.isNodeSdk() || document.readyState === 'complete') {\n        fn();\n    }\n    else {\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n        // fire before onload), but fall back to onload.\n        var called_1 = false;\n        var wrappedFn_1 = function () {\n            if (!document.body) {\n                setTimeout(wrappedFn_1, Math.floor(10));\n                return;\n            }\n            if (!called_1) {\n                called_1 = true;\n                fn();\n            }\n        };\n        if (document.addEventListener) {\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\n            // fallback to onload.\n            window.addEventListener('load', wrappedFn_1, false);\n        }\n        else if (document.attachEvent) {\n            // IE.\n            document.attachEvent('onreadystatechange', function () {\n                if (document.readyState === 'complete')\n                    wrappedFn_1();\n            });\n            // fallback to onload.\n            window.attachEvent('onload', wrappedFn_1);\n            // jQuery has an extra hack for IE that we could employ (based on\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n            // I'm hoping we don't need it.\n        }\n    }\n};\n/**\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\n * @type {!string}\n */\nexports.MIN_NAME = '[MIN_NAME]';\n/**\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\n * @type {!string}\n */\nexports.MAX_NAME = '[MAX_NAME]';\n/**\n * Compares valid Firebase key names, plus min and max name\n * @param {!string} a\n * @param {!string} b\n * @return {!number}\n */\nexports.nameCompare = function (a, b) {\n    if (a === b) {\n        return 0;\n    }\n    else if (a === exports.MIN_NAME || b === exports.MAX_NAME) {\n        return -1;\n    }\n    else if (b === exports.MIN_NAME || a === exports.MAX_NAME) {\n        return 1;\n    }\n    else {\n        var aAsInt = exports.tryParseInt(a), bAsInt = exports.tryParseInt(b);\n        if (aAsInt !== null) {\n            if (bAsInt !== null) {\n                return aAsInt - bAsInt == 0 ? a.length - b.length : aAsInt - bAsInt;\n            }\n            else {\n                return -1;\n            }\n        }\n        else if (bAsInt !== null) {\n            return 1;\n        }\n        else {\n            return a < b ? -1 : 1;\n        }\n    }\n};\n/**\n * @param {!string} a\n * @param {!string} b\n * @return {!number} comparison result.\n */\nexports.stringCompare = function (a, b) {\n    if (a === b) {\n        return 0;\n    }\n    else if (a < b) {\n        return -1;\n    }\n    else {\n        return 1;\n    }\n};\n/**\n * @param {string} key\n * @param {Object} obj\n * @return {*}\n */\nexports.requireKey = function (key, obj) {\n    if (obj && key in obj) {\n        return obj[key];\n    }\n    else {\n        throw new Error('Missing required key (' + key + ') in object: ' + util_6.stringify(obj));\n    }\n};\n/**\n * @param {*} obj\n * @return {string}\n */\nexports.ObjectToUniqueKey = function (obj) {\n    if (typeof obj !== 'object' || obj === null)\n        return util_6.stringify(obj);\n    var keys = [];\n    for (var k in obj) {\n        keys.push(k);\n    }\n    // Export as json, but with the keys sorted.\n    keys.sort();\n    var key = '{';\n    for (var i = 0; i < keys.length; i++) {\n        if (i !== 0)\n            key += ',';\n        key += util_6.stringify(keys[i]);\n        key += ':';\n        key += exports.ObjectToUniqueKey(obj[keys[i]]);\n    }\n    key += '}';\n    return key;\n};\n/**\n * Splits a string into a number of smaller segments of maximum size\n * @param {!string} str The string\n * @param {!number} segsize The maximum number of chars in the string.\n * @return {Array.<string>} The string, split into appropriately-sized chunks\n */\nexports.splitStringBySize = function (str, segsize) {\n    var len = str.length;\n    if (len <= segsize) {\n        return [str];\n    }\n    var dataSegs = [];\n    for (var c = 0; c < len; c += segsize) {\n        if (c + segsize > len) {\n            dataSegs.push(str.substring(c, len));\n        }\n        else {\n            dataSegs.push(str.substring(c, c + segsize));\n        }\n    }\n    return dataSegs;\n};\n/**\n * Apply a function to each (key, value) pair in an object or\n * apply a function to each (index, value) pair in an array\n * @param {!(Object|Array)} obj The object or array to iterate over\n * @param {function(?, ?)} fn The function to apply\n */\nexports.each = function (obj, fn) {\n    if (Array.isArray(obj)) {\n        for (var i = 0; i < obj.length; ++i) {\n            fn(i, obj[i]);\n        }\n    }\n    else {\n        /**\n         * in the conversion of code we removed the goog.object.forEach\n         * function which did a value,key callback. We standardized on\n         * a single impl that does a key, value callback. So we invert\n         * to not have to touch the `each` code points\n         */\n        util_2.forEach(obj, function (key, val) { return fn(val, key); });\n    }\n};\n/**\n * Like goog.bind, but doesn't bother to create a closure if opt_context is null/undefined.\n * @param {function(*)} callback Callback function.\n * @param {?Object=} context Optional context to bind to.\n * @return {function(*)}\n */\nexports.bindCallback = function (callback, context) {\n    return context ? callback.bind(context) : callback;\n};\n/**\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\n * I made one modification at the end and removed the NaN / Infinity\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\n * @param {!number} v A double\n * @return {string}\n */\nexports.doubleToIEEE754String = function (v) {\n    util_1.assert(!exports.isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n    var ebits = 11, fbits = 52;\n    var bias = (1 << (ebits - 1)) - 1, s, e, f, ln, i, bits, str;\n    // Compute sign, exponent, fraction\n    // Skip NaN / Infinity handling --MJL.\n    if (v === 0) {\n        e = 0;\n        f = 0;\n        s = 1 / v === -Infinity ? 1 : 0;\n    }\n    else {\n        s = v < 0;\n        v = Math.abs(v);\n        if (v >= Math.pow(2, 1 - bias)) {\n            // Normalized\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n            e = ln + bias;\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n        }\n        else {\n            // Denormalized\n            e = 0;\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n        }\n    }\n    // Pack sign, exponent, fraction\n    bits = [];\n    for (i = fbits; i; i -= 1) {\n        bits.push(f % 2 ? 1 : 0);\n        f = Math.floor(f / 2);\n    }\n    for (i = ebits; i; i -= 1) {\n        bits.push(e % 2 ? 1 : 0);\n        e = Math.floor(e / 2);\n    }\n    bits.push(s ? 1 : 0);\n    bits.reverse();\n    str = bits.join('');\n    // Return the data as a hex string. --MJL\n    var hexByteString = '';\n    for (i = 0; i < 64; i += 8) {\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n        if (hexByte.length === 1)\n            hexByte = '0' + hexByte;\n        hexByteString = hexByteString + hexByte;\n    }\n    return hexByteString.toLowerCase();\n};\n/**\n * Used to detect if we're in a Chrome content script (which executes in an\n * isolated environment where long-polling doesn't work).\n * @return {boolean}\n */\nexports.isChromeExtensionContentScript = function () {\n    return !!(typeof window === 'object' &&\n        window['chrome'] &&\n        window['chrome']['extension'] &&\n        !/^chrome/.test(window.location.href));\n};\n/**\n * Used to detect if we're in a Windows 8 Store app.\n * @return {boolean}\n */\nexports.isWindowsStoreApp = function () {\n    // Check for the presence of a couple WinRT globals\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n/**\n * Converts a server error code to a Javascript Error\n * @param {!string} code\n * @param {!Query} query\n * @return {Error}\n */\nexports.errorForServerCode = function (code, query) {\n    var reason = 'Unknown Error';\n    if (code === 'too_big') {\n        reason =\n            'The data requested exceeds the maximum size ' +\n                'that can be accessed with a single request.';\n    }\n    else if (code == 'permission_denied') {\n        reason = \"Client doesn't have permission to access the desired data.\";\n    }\n    else if (code == 'unavailable') {\n        reason = 'The service is unavailable';\n    }\n    var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason);\n    error.code = code.toUpperCase();\n    return error;\n};\n/**\n * Used to test for integer-looking strings\n * @type {RegExp}\n * @private\n */\nexports.INTEGER_REGEXP_ = new RegExp('^-?\\\\d{1,10}$');\n/**\n * If the string contains a 32-bit integer, return it.  Else return null.\n * @param {!string} str\n * @return {?number}\n */\nexports.tryParseInt = function (str) {\n    if (exports.INTEGER_REGEXP_.test(str)) {\n        var intVal = Number(str);\n        if (intVal >= -2147483648 && intVal <= 2147483647) {\n            return intVal;\n        }\n    }\n    return null;\n};\n/**\n * Helper to run some code but catch any exceptions and re-throw them later.\n * Useful for preventing user callbacks from breaking internal code.\n *\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\n * convenient (we don't have to try to figure out when is a safe point to\n * re-throw it), and the behavior seems reasonable:\n *\n * * If you aren't pausing on exceptions, you get an error in the console with\n *   the correct stack trace.\n * * If you're pausing on all exceptions, the debugger will pause on your\n *   exception and then again when we rethrow it.\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\n *   on us re-throwing it.\n *\n * @param {!function()} fn The code to guard.\n */\nexports.exceptionGuard = function (fn) {\n    try {\n        fn();\n    }\n    catch (e) {\n        // Re-throw exception when it's safe.\n        setTimeout(function () {\n            // It used to be that \"throw e\" would result in a good console error with\n            // relevant context, but as of Chrome 39, you just get the firebase.js\n            // file/line number where we re-throw it, which is useless. So we log\n            // e.stack explicitly.\n            var stack = e.stack || '';\n            exports.warn('Exception was thrown by user callback.', stack);\n            throw e;\n        }, Math.floor(0));\n    }\n};\n/**\n * Helper function to safely call opt_callback with the specified arguments.  It:\n * 1. Turns into a no-op if opt_callback is null or undefined.\n * 2. Wraps the call inside exceptionGuard to prevent exceptions from breaking our state.\n *\n * @param {?Function=} callback Optional onComplete callback.\n * @param {...*} var_args Arbitrary args to be passed to opt_onComplete\n */\nexports.callUserCallback = function (callback) {\n    var var_args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        var_args[_i - 1] = arguments[_i];\n    }\n    if (typeof callback === 'function') {\n        exports.exceptionGuard(function () {\n            callback.apply(void 0, var_args);\n        });\n    }\n};\n/**\n * @return {boolean} true if we think we're currently being crawled.\n */\nexports.beingCrawled = function () {\n    var userAgent = (typeof window === 'object' &&\n        window['navigator'] &&\n        window['navigator']['userAgent']) ||\n        '';\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n    // believe to support JavaScript/AJAX rendering.\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\n};\n/**\n * Export a property of an object using a getter function.\n *\n * @param {!Object} object\n * @param {string} name\n * @param {!function(): *} fnGet\n */\nexports.exportPropGetter = function (object, name, fnGet) {\n    Object.defineProperty(object, name, { get: fnGet });\n};\n/**\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\n *\n * It is removed with clearTimeout() as normal.\n *\n * @param {Function} fn Function to run.\n * @param {number} time Milliseconds to wait before running.\n * @return {number|Object} The setTimeout() return value.\n */\nexports.setTimeoutNonBlocking = function (fn, time) {\n    var timeout = setTimeout(fn, time);\n    if (typeof timeout === 'object' && timeout['unref']) {\n        timeout['unref']();\n    }\n    return timeout;\n};\n\n//# sourceMappingURL=util.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/util/util.js\n// module id = 347\n// module chunks = 0 1","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"./util\");\nvar util_2 = require(\"@firebase/util\");\n/**\n * An immutable object representing a parsed path.  It's immutable so that you\n * can pass them around to other functions without worrying about them changing\n * it.\n */\nvar Path = /** @class */ (function () {\n    /**\n     * @param {string|Array.<string>} pathOrString Path string to parse,\n     *      or another path, or the raw tokens array\n     * @param {number=} pieceNum\n     */\n    function Path(pathOrString, pieceNum) {\n        if (pieceNum === void 0) {\n            this.pieces_ = pathOrString.split('/');\n            // Remove empty pieces.\n            var copyTo = 0;\n            for (var i = 0; i < this.pieces_.length; i++) {\n                if (this.pieces_[i].length > 0) {\n                    this.pieces_[copyTo] = this.pieces_[i];\n                    copyTo++;\n                }\n            }\n            this.pieces_.length = copyTo;\n            this.pieceNum_ = 0;\n        }\n        else {\n            this.pieces_ = pathOrString;\n            this.pieceNum_ = pieceNum;\n        }\n    }\n    Object.defineProperty(Path, \"Empty\", {\n        /**\n         * Singleton to represent an empty path\n         *\n         * @const\n         */\n        get: function () {\n            return new Path('');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Path.prototype.getFront = function () {\n        if (this.pieceNum_ >= this.pieces_.length)\n            return null;\n        return this.pieces_[this.pieceNum_];\n    };\n    /**\n     * @return {number} The number of segments in this path\n     */\n    Path.prototype.getLength = function () {\n        return this.pieces_.length - this.pieceNum_;\n    };\n    /**\n     * @return {!Path}\n     */\n    Path.prototype.popFront = function () {\n        var pieceNum = this.pieceNum_;\n        if (pieceNum < this.pieces_.length) {\n            pieceNum++;\n        }\n        return new Path(this.pieces_, pieceNum);\n    };\n    /**\n     * @return {?string}\n     */\n    Path.prototype.getBack = function () {\n        if (this.pieceNum_ < this.pieces_.length)\n            return this.pieces_[this.pieces_.length - 1];\n        return null;\n    };\n    Path.prototype.toString = function () {\n        var pathString = '';\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n            if (this.pieces_[i] !== '')\n                pathString += '/' + this.pieces_[i];\n        }\n        return pathString || '/';\n    };\n    Path.prototype.toUrlEncodedString = function () {\n        var pathString = '';\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n            if (this.pieces_[i] !== '')\n                pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\n        }\n        return pathString || '/';\n    };\n    /**\n     * Shallow copy of the parts of the path.\n     *\n     * @param {number=} begin\n     * @return {!Array<string>}\n     */\n    Path.prototype.slice = function (begin) {\n        if (begin === void 0) { begin = 0; }\n        return this.pieces_.slice(this.pieceNum_ + begin);\n    };\n    /**\n     * @return {?Path}\n     */\n    Path.prototype.parent = function () {\n        if (this.pieceNum_ >= this.pieces_.length)\n            return null;\n        var pieces = [];\n        for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++)\n            pieces.push(this.pieces_[i]);\n        return new Path(pieces, 0);\n    };\n    /**\n     * @param {string|!Path} childPathObj\n     * @return {!Path}\n     */\n    Path.prototype.child = function (childPathObj) {\n        var pieces = [];\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++)\n            pieces.push(this.pieces_[i]);\n        if (childPathObj instanceof Path) {\n            for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n                pieces.push(childPathObj.pieces_[i]);\n            }\n        }\n        else {\n            var childPieces = childPathObj.split('/');\n            for (var i = 0; i < childPieces.length; i++) {\n                if (childPieces[i].length > 0)\n                    pieces.push(childPieces[i]);\n            }\n        }\n        return new Path(pieces, 0);\n    };\n    /**\n     * @return {boolean} True if there are no segments in this path\n     */\n    Path.prototype.isEmpty = function () {\n        return this.pieceNum_ >= this.pieces_.length;\n    };\n    /**\n     * @param {!Path} outerPath\n     * @param {!Path} innerPath\n     * @return {!Path} The path from outerPath to innerPath\n     */\n    Path.relativePath = function (outerPath, innerPath) {\n        var outer = outerPath.getFront(), inner = innerPath.getFront();\n        if (outer === null) {\n            return innerPath;\n        }\n        else if (outer === inner) {\n            return Path.relativePath(outerPath.popFront(), innerPath.popFront());\n        }\n        else {\n            throw new Error('INTERNAL ERROR: innerPath (' +\n                innerPath +\n                ') is not within ' +\n                'outerPath (' +\n                outerPath +\n                ')');\n        }\n    };\n    /**\n     * @param {!Path} left\n     * @param {!Path} right\n     * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\n     */\n    Path.comparePaths = function (left, right) {\n        var leftKeys = left.slice();\n        var rightKeys = right.slice();\n        for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n            var cmp = util_1.nameCompare(leftKeys[i], rightKeys[i]);\n            if (cmp !== 0)\n                return cmp;\n        }\n        if (leftKeys.length === rightKeys.length)\n            return 0;\n        return leftKeys.length < rightKeys.length ? -1 : 1;\n    };\n    /**\n     *\n     * @param {Path} other\n     * @return {boolean} true if paths are the same.\n     */\n    Path.prototype.equals = function (other) {\n        if (this.getLength() !== other.getLength()) {\n            return false;\n        }\n        for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {\n            if (this.pieces_[i] !== other.pieces_[j]) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     *\n     * @param {!Path} other\n     * @return {boolean} True if this path is a parent (or the same as) other\n     */\n    Path.prototype.contains = function (other) {\n        var i = this.pieceNum_;\n        var j = other.pieceNum_;\n        if (this.getLength() > other.getLength()) {\n            return false;\n        }\n        while (i < this.pieces_.length) {\n            if (this.pieces_[i] !== other.pieces_[j]) {\n                return false;\n            }\n            ++i;\n            ++j;\n        }\n        return true;\n    };\n    return Path;\n}()); // end Path\nexports.Path = Path;\n/**\n * Dynamic (mutable) path used to count path lengths.\n *\n * This class is used to efficiently check paths for valid\n * length (in UTF8 bytes) and depth (used in path validation).\n *\n * Throws Error exception if path is ever invalid.\n *\n * The definition of a path always begins with '/'.\n */\nvar ValidationPath = /** @class */ (function () {\n    /**\n     * @param {!Path} path Initial Path.\n     * @param {string} errorPrefix_ Prefix for any error messages.\n     */\n    function ValidationPath(path, errorPrefix_) {\n        this.errorPrefix_ = errorPrefix_;\n        /** @type {!Array<string>} */\n        this.parts_ = path.slice();\n        /** @type {number} Initialize to number of '/' chars needed in path. */\n        this.byteLength_ = Math.max(1, this.parts_.length);\n        for (var i = 0; i < this.parts_.length; i++) {\n            this.byteLength_ += util_2.stringLength(this.parts_[i]);\n        }\n        this.checkValid_();\n    }\n    Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\n        /** @const {number} Maximum key depth. */\n        get: function () {\n            return 32;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\n        /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\n        get: function () {\n            return 768;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @param {string} child */\n    ValidationPath.prototype.push = function (child) {\n        // Count the needed '/'\n        if (this.parts_.length > 0) {\n            this.byteLength_ += 1;\n        }\n        this.parts_.push(child);\n        this.byteLength_ += util_2.stringLength(child);\n        this.checkValid_();\n    };\n    ValidationPath.prototype.pop = function () {\n        var last = this.parts_.pop();\n        this.byteLength_ -= util_2.stringLength(last);\n        // Un-count the previous '/'\n        if (this.parts_.length > 0) {\n            this.byteLength_ -= 1;\n        }\n    };\n    ValidationPath.prototype.checkValid_ = function () {\n        if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\n            throw new Error(this.errorPrefix_ +\n                'has a key path longer than ' +\n                ValidationPath.MAX_PATH_LENGTH_BYTES +\n                ' bytes (' +\n                this.byteLength_ +\n                ').');\n        }\n        if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\n            throw new Error(this.errorPrefix_ +\n                'path specified exceeds the maximum depth that can be written (' +\n                ValidationPath.MAX_PATH_DEPTH +\n                ') or object contains a cycle ' +\n                this.toErrorString());\n        }\n    };\n    /**\n     * String for use in error messages - uses '.' notation for path.\n     *\n     * @return {string}\n     */\n    ValidationPath.prototype.toErrorString = function () {\n        if (this.parts_.length == 0) {\n            return '';\n        }\n        return \"in property '\" + this.parts_.join('.') + \"'\";\n    };\n    return ValidationPath;\n}());\nexports.ValidationPath = ValidationPath;\n\n//# sourceMappingURL=Path.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/util/Path.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Index_1 = require(\"./Index\");\nvar util_1 = require(\"../../util/util\");\nvar Node_1 = require(\"../Node\");\nvar LeafNode_1 = require(\"../LeafNode\");\nvar nodeFromJSON;\nvar MAX_NODE;\nfunction setNodeFromJSON(val) {\n    nodeFromJSON = val;\n}\nexports.setNodeFromJSON = setNodeFromJSON;\nfunction setMaxNode(val) {\n    MAX_NODE = val;\n}\nexports.setMaxNode = setMaxNode;\n/**\n * @constructor\n * @extends {Index}\n * @private\n */\nvar PriorityIndex = /** @class */ (function (_super) {\n    tslib_1.__extends(PriorityIndex, _super);\n    function PriorityIndex() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PriorityIndex.prototype.compare = function (a, b) {\n        var aPriority = a.node.getPriority();\n        var bPriority = b.node.getPriority();\n        var indexCmp = aPriority.compareTo(bPriority);\n        if (indexCmp === 0) {\n            return util_1.nameCompare(a.name, b.name);\n        }\n        else {\n            return indexCmp;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PriorityIndex.prototype.isDefinedOn = function (node) {\n        return !node.getPriority().isEmpty();\n    };\n    /**\n     * @inheritDoc\n     */\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n        return !oldNode.getPriority().equals(newNode.getPriority());\n    };\n    /**\n     * @inheritDoc\n     */\n    PriorityIndex.prototype.minPost = function () {\n        return Node_1.NamedNode.MIN;\n    };\n    /**\n     * @inheritDoc\n     */\n    PriorityIndex.prototype.maxPost = function () {\n        return new Node_1.NamedNode(util_1.MAX_NAME, new LeafNode_1.LeafNode('[PRIORITY-POST]', MAX_NODE));\n    };\n    /**\n     * @param {*} indexValue\n     * @param {string} name\n     * @return {!NamedNode}\n     */\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\n        var priorityNode = nodeFromJSON(indexValue);\n        return new Node_1.NamedNode(name, new LeafNode_1.LeafNode('[PRIORITY-POST]', priorityNode));\n    };\n    /**\n     * @return {!string} String representation for inclusion in a query spec\n     */\n    PriorityIndex.prototype.toString = function () {\n        return '.priority';\n    };\n    return PriorityIndex;\n}(Index_1.Index));\nexports.PriorityIndex = PriorityIndex;\nexports.PRIORITY_INDEX = new PriorityIndex();\n\n//# sourceMappingURL=PriorityIndex.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/snap/indexes/PriorityIndex.js\n// module id = 351\n// module chunks = 0 1","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"../util/util\");\nvar SortedMap_1 = require(\"../util/SortedMap\");\nvar Node_1 = require(\"./Node\");\nvar snap_1 = require(\"./snap\");\nvar PriorityIndex_1 = require(\"./indexes/PriorityIndex\");\nvar KeyIndex_1 = require(\"./indexes/KeyIndex\");\nvar IndexMap_1 = require(\"./IndexMap\");\nvar LeafNode_1 = require(\"./LeafNode\");\nvar comparators_1 = require(\"./comparators\");\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\nvar EMPTY_NODE;\n/**\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\n * (i.e. nodes with children).  It implements Node and stores the\n * list of children in the children property, sorted by child name.\n *\n * @constructor\n * @implements {Node}\n */\nvar ChildrenNode = /** @class */ (function () {\n    /**\n     *\n     * @param {!SortedMap.<string, !Node>} children_ List of children\n     * of this node..\n     * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\n     * @param {!IndexMap} indexMap_\n     */\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\n        this.children_ = children_;\n        this.priorityNode_ = priorityNode_;\n        this.indexMap_ = indexMap_;\n        this.lazyHash_ = null;\n        /**\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\n         * class instead of an empty ChildrenNode.\n         */\n        if (this.priorityNode_) {\n            snap_1.validatePriorityNode(this.priorityNode_);\n        }\n        if (this.children_.isEmpty()) {\n            util_1.assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\n        }\n    }\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\n        get: function () {\n            return (EMPTY_NODE ||\n                (EMPTY_NODE = new ChildrenNode(new SortedMap_1.SortedMap(comparators_1.NAME_COMPARATOR), null, IndexMap_1.IndexMap.Default)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @inheritDoc */\n    ChildrenNode.prototype.isLeafNode = function () {\n        return false;\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.getPriority = function () {\n        return this.priorityNode_ || EMPTY_NODE;\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\n        if (this.children_.isEmpty()) {\n            // Don't allow priorities on empty nodes\n            return this;\n        }\n        else {\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n        }\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\n        // Hack to treat priority as a regular child\n        if (childName === '.priority') {\n            return this.getPriority();\n        }\n        else {\n            var child = this.children_.get(childName);\n            return child === null ? EMPTY_NODE : child;\n        }\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.getChild = function (path) {\n        var front = path.getFront();\n        if (front === null)\n            return this;\n        return this.getImmediateChild(front).getChild(path.popFront());\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.hasChild = function (childName) {\n        return this.children_.get(childName) !== null;\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n        util_1.assert(newChildNode, 'We should always be passing snapshot nodes');\n        if (childName === '.priority') {\n            return this.updatePriority(newChildNode);\n        }\n        else {\n            var namedNode = new Node_1.NamedNode(childName, newChildNode);\n            var newChildren = void 0, newIndexMap = void 0, newPriority = void 0;\n            if (newChildNode.isEmpty()) {\n                newChildren = this.children_.remove(childName);\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\n            }\n            else {\n                newChildren = this.children_.insert(childName, newChildNode);\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n            }\n            newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\n        }\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\n        var front = path.getFront();\n        if (front === null) {\n            return newChildNode;\n        }\n        else {\n            util_1.assert(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\n            var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);\n            return this.updateImmediateChild(front, newImmediateChild);\n        }\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.isEmpty = function () {\n        return this.children_.isEmpty();\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.numChildren = function () {\n        return this.children_.count();\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.val = function (exportFormat) {\n        if (this.isEmpty())\n            return null;\n        var obj = {};\n        var numKeys = 0, maxKey = 0, allIntegerKeys = true;\n        this.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (key, childNode) {\n            obj[key] = childNode.val(exportFormat);\n            numKeys++;\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n                maxKey = Math.max(maxKey, Number(key));\n            }\n            else {\n                allIntegerKeys = false;\n            }\n        });\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n            // convert to array.\n            var array = [];\n            for (var key in obj)\n                array[key] = obj[key];\n            return array;\n        }\n        else {\n            if (exportFormat && !this.getPriority().isEmpty()) {\n                obj['.priority'] = this.getPriority().val();\n            }\n            return obj;\n        }\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.hash = function () {\n        if (this.lazyHash_ === null) {\n            var toHash_1 = '';\n            if (!this.getPriority().isEmpty())\n                toHash_1 +=\n                    'priority:' +\n                        snap_1.priorityHashText(this.getPriority().val()) +\n                        ':';\n            this.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (key, childNode) {\n                var childHash = childNode.hash();\n                if (childHash !== '')\n                    toHash_1 += ':' + key + ':' + childHash;\n            });\n            this.lazyHash_ = toHash_1 === '' ? '' : util_2.sha1(toHash_1);\n        }\n        return this.lazyHash_;\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\n        var idx = this.resolveIndex_(index);\n        if (idx) {\n            var predecessor = idx.getPredecessorKey(new Node_1.NamedNode(childName, childNode));\n            return predecessor ? predecessor.name : null;\n        }\n        else {\n            return this.children_.getPredecessorKey(childName);\n        }\n    };\n    /**\n     * @param {!Index} indexDefinition\n     * @return {?string}\n     */\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\n        var idx = this.resolveIndex_(indexDefinition);\n        if (idx) {\n            var minKey = idx.minKey();\n            return minKey && minKey.name;\n        }\n        else {\n            return this.children_.minKey();\n        }\n    };\n    /**\n     * @param {!Index} indexDefinition\n     * @return {?NamedNode}\n     */\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\n        var minKey = this.getFirstChildName(indexDefinition);\n        if (minKey) {\n            return new Node_1.NamedNode(minKey, this.children_.get(minKey));\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Given an index, return the key name of the largest value we have, according to that index\n     * @param {!Index} indexDefinition\n     * @return {?string}\n     */\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\n        var idx = this.resolveIndex_(indexDefinition);\n        if (idx) {\n            var maxKey = idx.maxKey();\n            return maxKey && maxKey.name;\n        }\n        else {\n            return this.children_.maxKey();\n        }\n    };\n    /**\n     * @param {!Index} indexDefinition\n     * @return {?NamedNode}\n     */\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\n        var maxKey = this.getLastChildName(indexDefinition);\n        if (maxKey) {\n            return new Node_1.NamedNode(maxKey, this.children_.get(maxKey));\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildrenNode.prototype.forEachChild = function (index, action) {\n        var idx = this.resolveIndex_(index);\n        if (idx) {\n            return idx.inorderTraversal(function (wrappedNode) {\n                return action(wrappedNode.name, wrappedNode.node);\n            });\n        }\n        else {\n            return this.children_.inorderTraversal(action);\n        }\n    };\n    /**\n     * @param {!Index} indexDefinition\n     * @return {SortedMapIterator}\n     */\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n    };\n    /**\n     *\n     * @param {!NamedNode} startPost\n     * @param {!Index} indexDefinition\n     * @return {!SortedMapIterator}\n     */\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\n        var idx = this.resolveIndex_(indexDefinition);\n        if (idx) {\n            return idx.getIteratorFrom(startPost, function (key) { return key; });\n        }\n        else {\n            var iterator = this.children_.getIteratorFrom(startPost.name, Node_1.NamedNode.Wrap);\n            var next = iterator.peek();\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\n                iterator.getNext();\n                next = iterator.peek();\n            }\n            return iterator;\n        }\n    };\n    /**\n     * @param {!Index} indexDefinition\n     * @return {!SortedMapIterator}\n     */\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\n    };\n    /**\n     * @param {!NamedNode} endPost\n     * @param {!Index} indexDefinition\n     * @return {!SortedMapIterator}\n     */\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\n        var idx = this.resolveIndex_(indexDefinition);\n        if (idx) {\n            return idx.getReverseIteratorFrom(endPost, function (key) {\n                return key;\n            });\n        }\n        else {\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, Node_1.NamedNode.Wrap);\n            var next = iterator.peek();\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\n                iterator.getNext();\n                next = iterator.peek();\n            }\n            return iterator;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildrenNode.prototype.compareTo = function (other) {\n        if (this.isEmpty()) {\n            if (other.isEmpty()) {\n                return 0;\n            }\n            else {\n                return -1;\n            }\n        }\n        else if (other.isLeafNode() || other.isEmpty()) {\n            return 1;\n        }\n        else if (other === exports.MAX_NODE) {\n            return -1;\n        }\n        else {\n            // Must be another node with children.\n            return 0;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\n        if (indexDefinition === KeyIndex_1.KEY_INDEX ||\n            this.indexMap_.hasIndex(indexDefinition)) {\n            return this;\n        }\n        else {\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildrenNode.prototype.isIndexed = function (index) {\n        return index === KeyIndex_1.KEY_INDEX || this.indexMap_.hasIndex(index);\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildrenNode.prototype.equals = function (other) {\n        if (other === this) {\n            return true;\n        }\n        else if (other.isLeafNode()) {\n            return false;\n        }\n        else {\n            var otherChildrenNode = other;\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n                return false;\n            }\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\n                var thisIter = this.getIterator(PriorityIndex_1.PRIORITY_INDEX);\n                var otherIter = otherChildrenNode.getIterator(PriorityIndex_1.PRIORITY_INDEX);\n                var thisCurrent = thisIter.getNext();\n                var otherCurrent = otherIter.getNext();\n                while (thisCurrent && otherCurrent) {\n                    if (thisCurrent.name !== otherCurrent.name ||\n                        !thisCurrent.node.equals(otherCurrent.node)) {\n                        return false;\n                    }\n                    thisCurrent = thisIter.getNext();\n                    otherCurrent = otherIter.getNext();\n                }\n                return thisCurrent === null && otherCurrent === null;\n            }\n            else {\n                return false;\n            }\n        }\n    };\n    /**\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\n     * instead.\n     *\n     * @private\n     * @param {!Index} indexDefinition\n     * @return {?SortedMap.<NamedNode, Node>}\n     */\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\n        if (indexDefinition === KeyIndex_1.KEY_INDEX) {\n            return null;\n        }\n        else {\n            return this.indexMap_.get(indexDefinition.toString());\n        }\n    };\n    /**\n     * @private\n     * @type {RegExp}\n     */\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n    return ChildrenNode;\n}());\nexports.ChildrenNode = ChildrenNode;\n/**\n * @constructor\n * @extends {ChildrenNode}\n * @private\n */\nvar MaxNode = /** @class */ (function (_super) {\n    tslib_1.__extends(MaxNode, _super);\n    function MaxNode() {\n        return _super.call(this, new SortedMap_1.SortedMap(comparators_1.NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap_1.IndexMap.Default) || this;\n    }\n    MaxNode.prototype.compareTo = function (other) {\n        if (other === this) {\n            return 0;\n        }\n        else {\n            return 1;\n        }\n    };\n    MaxNode.prototype.equals = function (other) {\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\n        return other === this;\n    };\n    MaxNode.prototype.getPriority = function () {\n        return this;\n    };\n    MaxNode.prototype.getImmediateChild = function (childName) {\n        return ChildrenNode.EMPTY_NODE;\n    };\n    MaxNode.prototype.isEmpty = function () {\n        return false;\n    };\n    return MaxNode;\n}(ChildrenNode));\nexports.MaxNode = MaxNode;\n/**\n * Marker that will sort higher than any other snapshot.\n * @type {!MAX_NODE}\n * @const\n */\nexports.MAX_NODE = new MaxNode();\nObject.defineProperties(Node_1.NamedNode, {\n    MIN: {\n        value: new Node_1.NamedNode(util_2.MIN_NAME, ChildrenNode.EMPTY_NODE)\n    },\n    MAX: {\n        value: new Node_1.NamedNode(util_2.MAX_NAME, exports.MAX_NODE)\n    }\n});\n/**\n * Reference Extensions\n */\nKeyIndex_1.KeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode_1.LeafNode.__childrenNodeConstructor = ChildrenNode;\nsnap_1.setMaxNode(exports.MAX_NODE);\nPriorityIndex_1.setMaxNode(exports.MAX_NODE);\n\n//# sourceMappingURL=ChildrenNode.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/snap/ChildrenNode.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n *\n * @param {!string} name\n * @param {!Node} node\n * @constructor\n * @struct\n */\nvar NamedNode = /** @class */ (function () {\n    function NamedNode(name, node) {\n        this.name = name;\n        this.node = node;\n    }\n    /**\n     *\n     * @param {!string} name\n     * @param {!Node} node\n     * @return {NamedNode}\n     */\n    NamedNode.Wrap = function (name, node) {\n        return new NamedNode(name, node);\n    };\n    return NamedNode;\n}());\nexports.NamedNode = NamedNode;\n\n//# sourceMappingURL=Node.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/snap/Node.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Path_1 = require(\"./Path\");\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"./util\");\nvar util_3 = require(\"@firebase/util\");\nvar util_4 = require(\"@firebase/util\");\n/**\n * True for invalid Firebase keys\n * @type {RegExp}\n * @private\n */\nexports.INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n/**\n * True for invalid Firebase paths.\n * Allows '/' in paths.\n * @type {RegExp}\n * @private\n */\nexports.INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n/**\n * Maximum number of characters to allow in leaf value\n * @type {number}\n * @private\n */\nexports.MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n/**\n * @param {*} key\n * @return {boolean}\n */\nexports.isValidKey = function (key) {\n    return (typeof key === 'string' && key.length !== 0 && !exports.INVALID_KEY_REGEX_.test(key));\n};\n/**\n * @param {string} pathString\n * @return {boolean}\n */\nexports.isValidPathString = function (pathString) {\n    return (typeof pathString === 'string' &&\n        pathString.length !== 0 &&\n        !exports.INVALID_PATH_REGEX_.test(pathString));\n};\n/**\n * @param {string} pathString\n * @return {boolean}\n */\nexports.isValidRootPathString = function (pathString) {\n    if (pathString) {\n        // Allow '/.info/' at the beginning.\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n    }\n    return exports.isValidPathString(pathString);\n};\n/**\n * @param {*} priority\n * @return {boolean}\n */\nexports.isValidPriority = function (priority) {\n    return (priority === null ||\n        typeof priority === 'string' ||\n        (typeof priority === 'number' && !util_2.isInvalidJSONNumber(priority)) ||\n        (priority && typeof priority === 'object' && util_1.contains(priority, '.sv')));\n};\n/**\n * Pre-validate a datum passed as an argument to Firebase function.\n *\n * @param {string} fnName\n * @param {number} argumentNumber\n * @param {*} data\n * @param {!Path} path\n * @param {boolean} optional\n */\nexports.validateFirebaseDataArg = function (fnName, argumentNumber, data, path, optional) {\n    if (optional && data === undefined)\n        return;\n    exports.validateFirebaseData(util_3.errorPrefix(fnName, argumentNumber, optional), data, path);\n};\n/**\n * Validate a data object client-side before sending to server.\n *\n * @param {string} errorPrefix\n * @param {*} data\n * @param {!Path|!ValidationPath} path_\n */\nexports.validateFirebaseData = function (errorPrefix, data, path_) {\n    var path = path_ instanceof Path_1.Path ? new Path_1.ValidationPath(path_, errorPrefix) : path_;\n    if (data === undefined) {\n        throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\n    }\n    if (typeof data === 'function') {\n        throw new Error(errorPrefix +\n            'contains a function ' +\n            path.toErrorString() +\n            ' with contents = ' +\n            data.toString());\n    }\n    if (util_2.isInvalidJSONNumber(data)) {\n        throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\n    }\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\n    if (typeof data === 'string' &&\n        data.length > exports.MAX_LEAF_SIZE_ / 3 &&\n        util_4.stringLength(data) > exports.MAX_LEAF_SIZE_) {\n        throw new Error(errorPrefix +\n            'contains a string greater than ' +\n            exports.MAX_LEAF_SIZE_ +\n            ' utf8 bytes ' +\n            path.toErrorString() +\n            \" ('\" +\n            data.substring(0, 50) +\n            \"...')\");\n    }\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n    // to save extra walking of large objects.\n    if (data && typeof data === 'object') {\n        var hasDotValue_1 = false, hasActualChild_1 = false;\n        util_1.forEach(data, function (key, value) {\n            if (key === '.value') {\n                hasDotValue_1 = true;\n            }\n            else if (key !== '.priority' && key !== '.sv') {\n                hasActualChild_1 = true;\n                if (!exports.isValidKey(key)) {\n                    throw new Error(errorPrefix +\n                        ' contains an invalid key (' +\n                        key +\n                        ') ' +\n                        path.toErrorString() +\n                        '.  Keys must be non-empty strings ' +\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n                }\n            }\n            path.push(key);\n            exports.validateFirebaseData(errorPrefix, value, path);\n            path.pop();\n        });\n        if (hasDotValue_1 && hasActualChild_1) {\n            throw new Error(errorPrefix +\n                ' contains \".value\" child ' +\n                path.toErrorString() +\n                ' in addition to actual children.');\n        }\n    }\n};\n/**\n * Pre-validate paths passed in the firebase function.\n *\n * @param {string} errorPrefix\n * @param {Array<!Path>} mergePaths\n */\nexports.validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\n    var i, curPath;\n    for (i = 0; i < mergePaths.length; i++) {\n        curPath = mergePaths[i];\n        var keys = curPath.slice();\n        for (var j = 0; j < keys.length; j++) {\n            if (keys[j] === '.priority' && j === keys.length - 1) {\n                // .priority is OK\n            }\n            else if (!exports.isValidKey(keys[j])) {\n                throw new Error(errorPrefix +\n                    'contains an invalid key (' +\n                    keys[j] +\n                    ') in path ' +\n                    curPath.toString() +\n                    '. Keys must be non-empty strings ' +\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n            }\n        }\n    }\n    // Check that update keys are not descendants of each other.\n    // We rely on the property that sorting guarantees that ancestors come\n    // right before descendants.\n    mergePaths.sort(Path_1.Path.comparePaths);\n    var prevPath = null;\n    for (i = 0; i < mergePaths.length; i++) {\n        curPath = mergePaths[i];\n        if (prevPath !== null && prevPath.contains(curPath)) {\n            throw new Error(errorPrefix +\n                'contains a path ' +\n                prevPath.toString() +\n                ' that is ancestor of another path ' +\n                curPath.toString());\n        }\n        prevPath = curPath;\n    }\n};\n/**\n * pre-validate an object passed as an argument to firebase function (\n * must be an object - e.g. for firebase.update()).\n *\n * @param {string} fnName\n * @param {number} argumentNumber\n * @param {*} data\n * @param {!Path} path\n * @param {boolean} optional\n */\nexports.validateFirebaseMergeDataArg = function (fnName, argumentNumber, data, path, optional) {\n    if (optional && data === undefined)\n        return;\n    var errorPrefix = util_3.errorPrefix(fnName, argumentNumber, optional);\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\n        throw new Error(errorPrefix + ' must be an object containing the children to replace.');\n    }\n    var mergePaths = [];\n    util_1.forEach(data, function (key, value) {\n        var curPath = new Path_1.Path(key);\n        exports.validateFirebaseData(errorPrefix, value, path.child(curPath));\n        if (curPath.getBack() === '.priority') {\n            if (!exports.isValidPriority(value)) {\n                throw new Error(errorPrefix +\n                    \"contains an invalid value for '\" +\n                    curPath.toString() +\n                    \"', which must be a valid \" +\n                    'Firebase priority (a string, finite number, server value, or null).');\n            }\n        }\n        mergePaths.push(curPath);\n    });\n    exports.validateFirebaseMergePaths(errorPrefix, mergePaths);\n};\nexports.validatePriority = function (fnName, argumentNumber, priority, optional) {\n    if (optional && priority === undefined)\n        return;\n    if (util_2.isInvalidJSONNumber(priority))\n        throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +\n            'is ' +\n            priority.toString() +\n            ', but must be a valid Firebase priority (a string, finite number, ' +\n            'server value, or null).');\n    // Special case to allow importing data with a .sv.\n    if (!exports.isValidPriority(priority))\n        throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +\n            'must be a valid Firebase priority ' +\n            '(a string, finite number, server value, or null).');\n};\nexports.validateEventType = function (fnName, argumentNumber, eventType, optional) {\n    if (optional && eventType === undefined)\n        return;\n    switch (eventType) {\n        case 'value':\n        case 'child_added':\n        case 'child_removed':\n        case 'child_changed':\n        case 'child_moved':\n            break;\n        default:\n            throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\n                '\"child_changed\", or \"child_moved\".');\n    }\n};\nexports.validateKey = function (fnName, argumentNumber, key, optional) {\n    if (optional && key === undefined)\n        return;\n    if (!exports.isValidKey(key))\n        throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +\n            'was an invalid key = \"' +\n            key +\n            '\".  Firebase keys must be non-empty strings and ' +\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\n};\nexports.validatePathString = function (fnName, argumentNumber, pathString, optional) {\n    if (optional && pathString === undefined)\n        return;\n    if (!exports.isValidPathString(pathString))\n        throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +\n            'was an invalid path = \"' +\n            pathString +\n            '\". Paths must be non-empty strings and ' +\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\n};\nexports.validateRootPathString = function (fnName, argumentNumber, pathString, optional) {\n    if (pathString) {\n        // Allow '/.info/' at the beginning.\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n    }\n    exports.validatePathString(fnName, argumentNumber, pathString, optional);\n};\nexports.validateWritablePath = function (fnName, path) {\n    if (path.getFront() === '.info') {\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n    }\n};\nexports.validateUrl = function (fnName, argumentNumber, parsedUrl) {\n    // TODO = Validate server better.\n    var pathString = parsedUrl.path.toString();\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\n        parsedUrl.repoInfo.host.length === 0 ||\n        (!exports.isValidKey(parsedUrl.repoInfo.namespace) &&\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\n        (pathString.length !== 0 && !exports.isValidRootPathString(pathString))) {\n        throw new Error(util_3.errorPrefix(fnName, argumentNumber, false) +\n            'must be a valid firebase URL and ' +\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\n    }\n};\nexports.validateCredential = function (fnName, argumentNumber, cred, optional) {\n    if (optional && cred === undefined)\n        return;\n    if (!(typeof cred === 'string'))\n        throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +\n            'must be a valid credential (a string).');\n};\nexports.validateBoolean = function (fnName, argumentNumber, bool, optional) {\n    if (optional && bool === undefined)\n        return;\n    if (typeof bool !== 'boolean')\n        throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\n};\nexports.validateString = function (fnName, argumentNumber, string, optional) {\n    if (optional && string === undefined)\n        return;\n    if (!(typeof string === 'string')) {\n        throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +\n            'must be a valid string.');\n    }\n};\nexports.validateObject = function (fnName, argumentNumber, obj, optional) {\n    if (optional && obj === undefined)\n        return;\n    if (!(obj && typeof obj === 'object') || obj === null) {\n        throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +\n            'must be a valid object.');\n    }\n};\nexports.validateObjectContainsKey = function (fnName, argumentNumber, obj, key, optional, opt_type) {\n    var objectContainsKey = obj && typeof obj === 'object' && util_1.contains(obj, key);\n    if (!objectContainsKey) {\n        if (optional) {\n            return;\n        }\n        else {\n            throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +\n                'must contain the key \"' +\n                key +\n                '\"');\n        }\n    }\n    if (opt_type) {\n        var val = util_1.safeGet(obj, key);\n        if ((opt_type === 'number' && !(typeof val === 'number')) ||\n            (opt_type === 'string' && !(typeof val === 'string')) ||\n            (opt_type === 'boolean' && !(typeof val === 'boolean')) ||\n            (opt_type === 'function' && !(typeof val === 'function')) ||\n            (opt_type === 'object' && !(typeof val === 'object') && val)) {\n            if (optional) {\n                throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +\n                    'contains invalid value for key \"' +\n                    key +\n                    '\" (must be of type \"' +\n                    opt_type +\n                    '\")');\n            }\n            else {\n                throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +\n                    'must contain the key \"' +\n                    key +\n                    '\" with type \"' +\n                    opt_type +\n                    '\"');\n            }\n        }\n    }\n};\n\n//# sourceMappingURL=validation.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/util/validation.js\n// module id = 359\n// module chunks = 0 1","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\n/**\n *\n * @enum\n */\nvar OperationType;\n(function (OperationType) {\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\n})(OperationType = exports.OperationType || (exports.OperationType = {}));\n/**\n * @param {boolean} fromUser\n * @param {boolean} fromServer\n * @param {?string} queryId\n * @param {boolean} tagged\n * @constructor\n */\nvar OperationSource = /** @class */ (function () {\n    function OperationSource(fromUser, fromServer, queryId, tagged) {\n        this.fromUser = fromUser;\n        this.fromServer = fromServer;\n        this.queryId = queryId;\n        this.tagged = tagged;\n        util_1.assert(!tagged || fromServer, 'Tagged queries must be from server.');\n    }\n    /**\n     * @const\n     * @type {!OperationSource}\n     */\n    OperationSource.User = new OperationSource(\n    /*fromUser=*/ true, false, null, \n    /*tagged=*/ false);\n    /**\n     * @const\n     * @type {!OperationSource}\n     */\n    OperationSource.Server = new OperationSource(false, \n    /*fromServer=*/ true, null, \n    /*tagged=*/ false);\n    /**\n     * @param {string} queryId\n     * @return {!OperationSource}\n     */\n    OperationSource.forServerTaggedQuery = function (queryId) {\n        return new OperationSource(false, \n        /*fromServer=*/ true, queryId, \n        /*tagged=*/ true);\n    };\n    return OperationSource;\n}());\nexports.OperationSource = OperationSource;\n\n//# sourceMappingURL=Operation.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/operation/Operation.js","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule.exports = require('@firebase/database');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/firebase/database/index.js\n// module id = 362\n// module chunks = 0 1","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @constructor\n * @struct\n * @param {!string} type The event type\n * @param {!Node} snapshotNode The data\n * @param {string=} childName The name for this child, if it's a child event\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\n * @param {string=} prevName The name for the previous child, if applicable\n */\nvar Change = /** @class */ (function () {\n    function Change(type, snapshotNode, childName, oldSnap, prevName) {\n        this.type = type;\n        this.snapshotNode = snapshotNode;\n        this.childName = childName;\n        this.oldSnap = oldSnap;\n        this.prevName = prevName;\n    }\n    /**\n     * @param {!Node} snapshot\n     * @return {!Change}\n     */\n    Change.valueChange = function (snapshot) {\n        return new Change(Change.VALUE, snapshot);\n    };\n    /**\n     * @param {string} childKey\n     * @param {!Node} snapshot\n     * @return {!Change}\n     */\n    Change.childAddedChange = function (childKey, snapshot) {\n        return new Change(Change.CHILD_ADDED, snapshot, childKey);\n    };\n    /**\n     * @param {string} childKey\n     * @param {!Node} snapshot\n     * @return {!Change}\n     */\n    Change.childRemovedChange = function (childKey, snapshot) {\n        return new Change(Change.CHILD_REMOVED, snapshot, childKey);\n    };\n    /**\n     * @param {string} childKey\n     * @param {!Node} newSnapshot\n     * @param {!Node} oldSnapshot\n     * @return {!Change}\n     */\n    Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {\n        return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\n    };\n    /**\n     * @param {string} childKey\n     * @param {!Node} snapshot\n     * @return {!Change}\n     */\n    Change.childMovedChange = function (childKey, snapshot) {\n        return new Change(Change.CHILD_MOVED, snapshot, childKey);\n    };\n    //event types\n    /** Event type for a child added */\n    Change.CHILD_ADDED = 'child_added';\n    /** Event type for a child removed */\n    Change.CHILD_REMOVED = 'child_removed';\n    /** Event type for a child changed */\n    Change.CHILD_CHANGED = 'child_changed';\n    /** Event type for a child moved */\n    Change.CHILD_MOVED = 'child_moved';\n    /** Event type for a value change */\n    Change.VALUE = 'value';\n    return Change;\n}());\nexports.Change = Change;\n\n//# sourceMappingURL=Change.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/view/Change.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Index_1 = require(\"./Index\");\nvar Node_1 = require(\"../Node\");\nvar util_1 = require(\"../../util/util\");\nvar util_2 = require(\"@firebase/util\");\nvar __EMPTY_NODE;\nvar KeyIndex = /** @class */ (function (_super) {\n    tslib_1.__extends(KeyIndex, _super);\n    function KeyIndex() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\n        get: function () {\n            return __EMPTY_NODE;\n        },\n        set: function (val) {\n            __EMPTY_NODE = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    KeyIndex.prototype.compare = function (a, b) {\n        return util_1.nameCompare(a.name, b.name);\n    };\n    /**\n     * @inheritDoc\n     */\n    KeyIndex.prototype.isDefinedOn = function (node) {\n        // We could probably return true here (since every node has a key), but it's never called\n        // so just leaving unimplemented for now.\n        throw util_2.assertionError('KeyIndex.isDefinedOn not expected to be called.');\n    };\n    /**\n     * @inheritDoc\n     */\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n        return false; // The key for a node never changes.\n    };\n    /**\n     * @inheritDoc\n     */\n    KeyIndex.prototype.minPost = function () {\n        return Node_1.NamedNode.MIN;\n    };\n    /**\n     * @inheritDoc\n     */\n    KeyIndex.prototype.maxPost = function () {\n        // TODO: This should really be created once and cached in a static property, but\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n        return new Node_1.NamedNode(util_1.MAX_NAME, __EMPTY_NODE);\n    };\n    /**\n     * @param {*} indexValue\n     * @param {string} name\n     * @return {!NamedNode}\n     */\n    KeyIndex.prototype.makePost = function (indexValue, name) {\n        util_2.assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n        return new Node_1.NamedNode(indexValue, __EMPTY_NODE);\n    };\n    /**\n     * @return {!string} String representation for inclusion in a query spec\n     */\n    KeyIndex.prototype.toString = function () {\n        return '.key';\n    };\n    return KeyIndex;\n}(Index_1.Index));\nexports.KeyIndex = KeyIndex;\nexports.KEY_INDEX = new KeyIndex();\n\n//# sourceMappingURL=KeyIndex.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/snap/indexes/KeyIndex.js\n// module id = 365\n// module chunks = 0 1","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ChildrenNode_1 = require(\"./ChildrenNode\");\nvar LeafNode_1 = require(\"./LeafNode\");\nvar Node_1 = require(\"./Node\");\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"@firebase/util\");\nvar childSet_1 = require(\"./childSet\");\nvar comparators_1 = require(\"./comparators\");\nvar IndexMap_1 = require(\"./IndexMap\");\nvar PriorityIndex_1 = require(\"./indexes/PriorityIndex\");\nvar USE_HINZE = true;\n/**\n * Constructs a snapshot node representing the passed JSON and returns it.\n * @param {*} json JSON to create a node for.\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\n * passed JSON contains a .priority property.\n * @return {!Node}\n */\nfunction nodeFromJSON(json, priority) {\n    if (priority === void 0) { priority = null; }\n    if (json === null) {\n        return ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n    }\n    if (typeof json === 'object' && '.priority' in json) {\n        priority = json['.priority'];\n    }\n    util_2.assert(priority === null ||\n        typeof priority === 'string' ||\n        typeof priority === 'number' ||\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n        json = json['.value'];\n    }\n    // Valid leaf nodes include non-objects or server-value wrapper objects\n    if (typeof json !== 'object' || '.sv' in json) {\n        var jsonLeaf = json;\n        return new LeafNode_1.LeafNode(jsonLeaf, nodeFromJSON(priority));\n    }\n    if (!(json instanceof Array) && USE_HINZE) {\n        var children_1 = [];\n        var childrenHavePriority_1 = false;\n        var hinzeJsonObj_1 = json;\n        util_1.forEach(hinzeJsonObj_1, function (key, child) {\n            if (typeof key !== 'string' || key.substring(0, 1) !== '.') {\n                // Ignore metadata nodes\n                var childNode = nodeFromJSON(hinzeJsonObj_1[key]);\n                if (!childNode.isEmpty()) {\n                    childrenHavePriority_1 =\n                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();\n                    children_1.push(new Node_1.NamedNode(key, childNode));\n                }\n            }\n        });\n        if (children_1.length == 0) {\n            return ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n        }\n        var childSet = childSet_1.buildChildSet(children_1, comparators_1.NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, comparators_1.NAME_COMPARATOR);\n        if (childrenHavePriority_1) {\n            var sortedChildSet = childSet_1.buildChildSet(children_1, PriorityIndex_1.PRIORITY_INDEX.getCompare());\n            return new ChildrenNode_1.ChildrenNode(childSet, nodeFromJSON(priority), new IndexMap_1.IndexMap({ '.priority': sortedChildSet }, { '.priority': PriorityIndex_1.PRIORITY_INDEX }));\n        }\n        else {\n            return new ChildrenNode_1.ChildrenNode(childSet, nodeFromJSON(priority), IndexMap_1.IndexMap.Default);\n        }\n    }\n    else {\n        var node_1 = ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n        var jsonObj_1 = json;\n        util_1.forEach(jsonObj_1, function (key, childData) {\n            if (util_1.contains(jsonObj_1, key)) {\n                if (key.substring(0, 1) !== '.') {\n                    // ignore metadata nodes.\n                    var childNode = nodeFromJSON(childData);\n                    if (childNode.isLeafNode() || !childNode.isEmpty())\n                        node_1 = node_1.updateImmediateChild(key, childNode);\n                }\n            }\n        });\n        return node_1.updatePriority(nodeFromJSON(priority));\n    }\n}\nexports.nodeFromJSON = nodeFromJSON;\nPriorityIndex_1.setNodeFromJSON(nodeFromJSON);\n\n//# sourceMappingURL=nodeFromJSON.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/snap/nodeFromJSON.js\n// module id = 366\n// module chunks = 0 1","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DOMStorageWrapper_1 = require(\"./DOMStorageWrapper\");\nvar MemoryStorage_1 = require(\"./MemoryStorage\");\n/**\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\n * to reflect this type\n *\n * @param {string} domStorageName Name of the underlying storage object\n *   (e.g. 'localStorage' or 'sessionStorage').\n * @return {?} Turning off type information until a common interface is defined.\n */\nvar createStoragefor = function (domStorageName) {\n    try {\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n        // so it must be inside the try/catch.\n        if (typeof window !== 'undefined' &&\n            typeof window[domStorageName] !== 'undefined') {\n            // Need to test cache. Just because it's here doesn't mean it works\n            var domStorage = window[domStorageName];\n            domStorage.setItem('firebase:sentinel', 'cache');\n            domStorage.removeItem('firebase:sentinel');\n            return new DOMStorageWrapper_1.DOMStorageWrapper(domStorage);\n        }\n    }\n    catch (e) { }\n    // Failed to create wrapper.  Just return in-memory storage.\n    // TODO: log?\n    return new MemoryStorage_1.MemoryStorage();\n};\n/** A storage object that lasts across sessions */\nexports.PersistentStorage = createStoragefor('localStorage');\n/** A storage object that only lasts one session */\nexports.SessionStorage = createStoragefor('sessionStorage');\n\n//# sourceMappingURL=storage.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/storage/storage.js\n// module id = 370\n// module chunks = 0 1","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROTOCOL_VERSION = '5';\nexports.VERSION_PARAM = 'v';\nexports.TRANSPORT_SESSION_PARAM = 's';\nexports.REFERER_PARAM = 'r';\nexports.FORGE_REF = 'f';\nexports.FORGE_DOMAIN = 'firebaseio.com';\nexports.LAST_SESSION_PARAM = 'ls';\nexports.WEBSOCKET = 'websocket';\nexports.LONG_POLLING = 'long_polling';\n\n//# sourceMappingURL=Constants.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/realtime/Constants.js\n// module id = 371\n// module chunks = 0 1","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Node_1 = require(\"../Node\");\nvar util_1 = require(\"../../util/util\");\n/**\n *\n * @constructor\n */\nvar Index = /** @class */ (function () {\n    function Index() {\n    }\n    /**\n     * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\n     * this index\n     */\n    Index.prototype.getCompare = function () {\n        return this.compare.bind(this);\n    };\n    /**\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\n     *\n     * @param {!Node} oldNode\n     * @param {!Node} newNode\n     * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\n     */\n    Index.prototype.indexedValueChanged = function (oldNode, newNode) {\n        var oldWrapped = new Node_1.NamedNode(util_1.MIN_NAME, oldNode);\n        var newWrapped = new Node_1.NamedNode(util_1.MIN_NAME, newNode);\n        return this.compare(oldWrapped, newWrapped) !== 0;\n    };\n    /**\n     * @return {!NamedNode} a node wrapper that will sort equal to or less than\n     * any other node wrapper, using this index\n     */\n    Index.prototype.minPost = function () {\n        return Node_1.NamedNode.MIN;\n    };\n    return Index;\n}());\nexports.Index = Index;\n\n//# sourceMappingURL=Index.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/snap/indexes/Index.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"../util/util\");\nvar snap_1 = require(\"./snap\");\nvar __childrenNodeConstructor;\n/**\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\n * implements Node and stores the value of the node (a string,\n * number, or boolean) accessible via getValue().\n */\nvar LeafNode = /** @class */ (function () {\n    /**\n     * @implements {Node}\n     * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\n     *                                         The object type is possible in the event of a deferred value\n     * @param {!Node=} priorityNode_ The priority of this node.\n     */\n    function LeafNode(value_, priorityNode_) {\n        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }\n        this.value_ = value_;\n        this.priorityNode_ = priorityNode_;\n        this.lazyHash_ = null;\n        util_1.assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\n        snap_1.validatePriorityNode(this.priorityNode_);\n    }\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\n        get: function () {\n            return __childrenNodeConstructor;\n        },\n        set: function (val) {\n            __childrenNodeConstructor = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @inheritDoc */\n    LeafNode.prototype.isLeafNode = function () {\n        return true;\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.getPriority = function () {\n        return this.priorityNode_;\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\n        return new LeafNode(this.value_, newPriorityNode);\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.getImmediateChild = function (childName) {\n        // Hack to treat priority as a regular child\n        if (childName === '.priority') {\n            return this.priorityNode_;\n        }\n        else {\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n        }\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.getChild = function (path) {\n        if (path.isEmpty()) {\n            return this;\n        }\n        else if (path.getFront() === '.priority') {\n            return this.priorityNode_;\n        }\n        else {\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    LeafNode.prototype.hasChild = function () {\n        return false;\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\n        return null;\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n        if (childName === '.priority') {\n            return this.updatePriority(newChildNode);\n        }\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\n            return this;\n        }\n        else {\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\n        }\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\n        var front = path.getFront();\n        if (front === null) {\n            return newChildNode;\n        }\n        else if (newChildNode.isEmpty() && front !== '.priority') {\n            return this;\n        }\n        else {\n            util_1.assert(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));\n        }\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.isEmpty = function () {\n        return false;\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.numChildren = function () {\n        return 0;\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.forEachChild = function (index, action) {\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    LeafNode.prototype.val = function (exportFormat) {\n        if (exportFormat && !this.getPriority().isEmpty())\n            return {\n                '.value': this.getValue(),\n                '.priority': this.getPriority().val()\n            };\n        else\n            return this.getValue();\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.hash = function () {\n        if (this.lazyHash_ === null) {\n            var toHash = '';\n            if (!this.priorityNode_.isEmpty())\n                toHash +=\n                    'priority:' +\n                        snap_1.priorityHashText(this.priorityNode_.val()) +\n                        ':';\n            var type = typeof this.value_;\n            toHash += type + ':';\n            if (type === 'number') {\n                toHash += util_2.doubleToIEEE754String(this.value_);\n            }\n            else {\n                toHash += this.value_;\n            }\n            this.lazyHash_ = util_2.sha1(toHash);\n        }\n        return this.lazyHash_;\n    };\n    /**\n     * Returns the value of the leaf node.\n     * @return {Object|string|number|boolean} The value of the node.\n     */\n    LeafNode.prototype.getValue = function () {\n        return this.value_;\n    };\n    /**\n     * @inheritDoc\n     */\n    LeafNode.prototype.compareTo = function (other) {\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n            return 1;\n        }\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\n            return -1;\n        }\n        else {\n            util_1.assert(other.isLeafNode(), 'Unknown node type');\n            return this.compareToLeafNode_(other);\n        }\n    };\n    /**\n     * Comparison specifically for two leaf nodes\n     * @param {!LeafNode} otherLeaf\n     * @return {!number}\n     * @private\n     */\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\n        var otherLeafType = typeof otherLeaf.value_;\n        var thisLeafType = typeof this.value_;\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n        util_1.assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n        util_1.assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n        if (otherIndex === thisIndex) {\n            // Same type, compare values\n            if (thisLeafType === 'object') {\n                // Deferred value nodes are all equal, but we should also never get to this point...\n                return 0;\n            }\n            else {\n                // Note that this works because true > false, all others are number or string comparisons\n                if (this.value_ < otherLeaf.value_) {\n                    return -1;\n                }\n                else if (this.value_ === otherLeaf.value_) {\n                    return 0;\n                }\n                else {\n                    return 1;\n                }\n            }\n        }\n        else {\n            return thisIndex - otherIndex;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    LeafNode.prototype.withIndex = function () {\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    LeafNode.prototype.isIndexed = function () {\n        return true;\n    };\n    /**\n     * @inheritDoc\n     */\n    LeafNode.prototype.equals = function (other) {\n        /**\n         * @inheritDoc\n         */\n        if (other === this) {\n            return true;\n        }\n        else if (other.isLeafNode()) {\n            var otherLeaf = other;\n            return (this.value_ === otherLeaf.value_ &&\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\n     * the same type, the comparison falls back to their value\n     * @type {Array.<!string>}\n     * @const\n     */\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n    return LeafNode;\n}());\nexports.LeafNode = LeafNode;\n\n//# sourceMappingURL=LeafNode.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/snap/LeafNode.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * An iterator over an LLRBNode.\n */\nvar SortedMapIterator = /** @class */ (function () {\n    /**\n     * @template K, V, T\n     * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\n     * @param {?K} startKey\n     * @param {function(K, K): number} comparator\n     * @param {boolean} isReverse_ Whether or not to iterate in reverse\n     * @param {(function(K, V):T)=} resultGenerator_\n     */\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\n        if (resultGenerator_ === void 0) { resultGenerator_ = null; }\n        this.isReverse_ = isReverse_;\n        this.resultGenerator_ = resultGenerator_;\n        /** @private\n         * @type {Array.<!LLRBNode>}\n         */\n        this.nodeStack_ = [];\n        var cmp = 1;\n        while (!node.isEmpty()) {\n            node = node;\n            cmp = startKey ? comparator(node.key, startKey) : 1;\n            // flip the comparison if we're going in reverse\n            if (isReverse_)\n                cmp *= -1;\n            if (cmp < 0) {\n                // This node is less than our start key. ignore it\n                if (this.isReverse_) {\n                    node = node.left;\n                }\n                else {\n                    node = node.right;\n                }\n            }\n            else if (cmp === 0) {\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n                this.nodeStack_.push(node);\n                break;\n            }\n            else {\n                // This node is greater than our start key, add it to the stack and move to the next one\n                this.nodeStack_.push(node);\n                if (this.isReverse_) {\n                    node = node.right;\n                }\n                else {\n                    node = node.left;\n                }\n            }\n        }\n    }\n    SortedMapIterator.prototype.getNext = function () {\n        if (this.nodeStack_.length === 0)\n            return null;\n        var node = this.nodeStack_.pop();\n        var result;\n        if (this.resultGenerator_)\n            result = this.resultGenerator_(node.key, node.value);\n        else\n            result = { key: node.key, value: node.value };\n        if (this.isReverse_) {\n            node = node.left;\n            while (!node.isEmpty()) {\n                this.nodeStack_.push(node);\n                node = node.right;\n            }\n        }\n        else {\n            node = node.right;\n            while (!node.isEmpty()) {\n                this.nodeStack_.push(node);\n                node = node.left;\n            }\n        }\n        return result;\n    };\n    SortedMapIterator.prototype.hasNext = function () {\n        return this.nodeStack_.length > 0;\n    };\n    SortedMapIterator.prototype.peek = function () {\n        if (this.nodeStack_.length === 0)\n            return null;\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\n        if (this.resultGenerator_) {\n            return this.resultGenerator_(node.key, node.value);\n        }\n        else {\n            return { key: node.key, value: node.value };\n        }\n    };\n    return SortedMapIterator;\n}());\nexports.SortedMapIterator = SortedMapIterator;\n/**\n * Represents a node in a Left-leaning Red-Black tree.\n */\nvar LLRBNode = /** @class */ (function () {\n    /**\n     * @template K, V\n     * @param {!K} key Key associated with this node.\n     * @param {!V} value Value associated with this node.\n     * @param {?boolean} color Whether this node is red.\n     * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\n     * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\n     */\n    function LLRBNode(key, value, color, left, right) {\n        this.key = key;\n        this.value = value;\n        this.color = color != null ? color : LLRBNode.RED;\n        this.left =\n            left != null ? left : SortedMap.EMPTY_NODE;\n        this.right =\n            right != null ? right : SortedMap.EMPTY_NODE;\n    }\n    /**\n     * Returns a copy of the current node, optionally replacing pieces of it.\n     *\n     * @param {?K} key New key for the node, or null.\n     * @param {?V} value New value for the node, or null.\n     * @param {?boolean} color New color for the node, or null.\n     * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\n     * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\n     * @return {!LLRBNode} The node copy.\n     */\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\n    };\n    /**\n     * @return {number} The total number of nodes in the tree.\n     */\n    LLRBNode.prototype.count = function () {\n        return this.left.count() + 1 + this.right.count();\n    };\n    /**\n     * @return {boolean} True if the tree is empty.\n     */\n    LLRBNode.prototype.isEmpty = function () {\n        return false;\n    };\n    /**\n     * Traverses the tree in key order and calls the specified action function\n     * for each node.\n     *\n     * @param {function(!K, !V):*} action Callback function to be called for each\n     *   node.  If it returns true, traversal is aborted.\n     * @return {*} The first truthy value returned by action, or the last falsey\n     *   value returned by action\n     */\n    LLRBNode.prototype.inorderTraversal = function (action) {\n        return (this.left.inorderTraversal(action) ||\n            action(this.key, this.value) ||\n            this.right.inorderTraversal(action));\n    };\n    /**\n     * Traverses the tree in reverse key order and calls the specified action function\n     * for each node.\n     *\n     * @param {function(!Object, !Object)} action Callback function to be called for each\n     * node.  If it returns true, traversal is aborted.\n     * @return {*} True if traversal was aborted.\n     */\n    LLRBNode.prototype.reverseTraversal = function (action) {\n        return (this.right.reverseTraversal(action) ||\n            action(this.key, this.value) ||\n            this.left.reverseTraversal(action));\n    };\n    /**\n     * @return {!Object} The minimum node in the tree.\n     * @private\n     */\n    LLRBNode.prototype.min_ = function () {\n        if (this.left.isEmpty()) {\n            return this;\n        }\n        else {\n            return this.left.min_();\n        }\n    };\n    /**\n     * @return {!K} The maximum key in the tree.\n     */\n    LLRBNode.prototype.minKey = function () {\n        return this.min_().key;\n    };\n    /**\n     * @return {!K} The maximum key in the tree.\n     */\n    LLRBNode.prototype.maxKey = function () {\n        if (this.right.isEmpty()) {\n            return this.key;\n        }\n        else {\n            return this.right.maxKey();\n        }\n    };\n    /**\n     *\n     * @param {!Object} key Key to insert.\n     * @param {!Object} value Value to insert.\n     * @param {Comparator} comparator Comparator.\n     * @return {!LLRBNode} New tree, with the key/value added.\n     */\n    LLRBNode.prototype.insert = function (key, value, comparator) {\n        var cmp, n;\n        n = this;\n        cmp = comparator(key, n.key);\n        if (cmp < 0) {\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n        }\n        else if (cmp === 0) {\n            n = n.copy(null, value, null, null, null);\n        }\n        else {\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\n        }\n        return n.fixUp_();\n    };\n    /**\n     * @private\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\n     */\n    LLRBNode.prototype.removeMin_ = function () {\n        if (this.left.isEmpty()) {\n            return SortedMap.EMPTY_NODE;\n        }\n        var n = this;\n        if (!n.left.isRed_() && !n.left.left.isRed_())\n            n = n.moveRedLeft_();\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\n        return n.fixUp_();\n    };\n    /**\n     * @param {!Object} key The key of the item to remove.\n     * @param {Comparator} comparator Comparator.\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\n     */\n    LLRBNode.prototype.remove = function (key, comparator) {\n        var n, smallest;\n        n = this;\n        if (comparator(key, n.key) < 0) {\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n                n = n.moveRedLeft_();\n            }\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n        }\n        else {\n            if (n.left.isRed_())\n                n = n.rotateRight_();\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n                n = n.moveRedRight_();\n            }\n            if (comparator(key, n.key) === 0) {\n                if (n.right.isEmpty()) {\n                    return SortedMap.EMPTY_NODE;\n                }\n                else {\n                    smallest = n.right.min_();\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\n                }\n            }\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n        }\n        return n.fixUp_();\n    };\n    /**\n     * @private\n     * @return {boolean} Whether this is a RED node.\n     */\n    LLRBNode.prototype.isRed_ = function () {\n        return this.color;\n    };\n    /**\n     * @private\n     * @return {!LLRBNode} New tree after performing any needed rotations.\n     */\n    LLRBNode.prototype.fixUp_ = function () {\n        var n = this;\n        if (n.right.isRed_() && !n.left.isRed_())\n            n = n.rotateLeft_();\n        if (n.left.isRed_() && n.left.left.isRed_())\n            n = n.rotateRight_();\n        if (n.left.isRed_() && n.right.isRed_())\n            n = n.colorFlip_();\n        return n;\n    };\n    /**\n     * @private\n     * @return {!LLRBNode} New tree, after moveRedLeft.\n     */\n    LLRBNode.prototype.moveRedLeft_ = function () {\n        var n = this.colorFlip_();\n        if (n.right.left.isRed_()) {\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\n            n = n.rotateLeft_();\n            n = n.colorFlip_();\n        }\n        return n;\n    };\n    /**\n     * @private\n     * @return {!LLRBNode} New tree, after moveRedRight.\n     */\n    LLRBNode.prototype.moveRedRight_ = function () {\n        var n = this.colorFlip_();\n        if (n.left.left.isRed_()) {\n            n = n.rotateRight_();\n            n = n.colorFlip_();\n        }\n        return n;\n    };\n    /**\n     * @private\n     * @return {!LLRBNode} New tree, after rotateLeft.\n     */\n    LLRBNode.prototype.rotateLeft_ = function () {\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n        return this.right.copy(null, null, this.color, nl, null);\n    };\n    /**\n     * @private\n     * @return {!LLRBNode} New tree, after rotateRight.\n     */\n    LLRBNode.prototype.rotateRight_ = function () {\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n        return this.left.copy(null, null, this.color, null, nr);\n    };\n    /**\n     * @private\n     * @return {!LLRBNode} New tree, after colorFlip.\n     */\n    LLRBNode.prototype.colorFlip_ = function () {\n        var left = this.left.copy(null, null, !this.left.color, null, null);\n        var right = this.right.copy(null, null, !this.right.color, null, null);\n        return this.copy(null, null, !this.color, left, right);\n    };\n    /**\n     * For testing.\n     *\n     * @private\n     * @return {boolean} True if all is well.\n     */\n    LLRBNode.prototype.checkMaxDepth_ = function () {\n        var blackDepth = this.check_();\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\n    };\n    /**\n     * @private\n     * @return {number} Not sure what this returns exactly. :-).\n     */\n    LLRBNode.prototype.check_ = function () {\n        var blackDepth;\n        if (this.isRed_() && this.left.isRed_()) {\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\n        }\n        if (this.right.isRed_()) {\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\n        }\n        blackDepth = this.left.check_();\n        if (blackDepth !== this.right.check_()) {\n            throw new Error('Black depths differ');\n        }\n        else {\n            return blackDepth + (this.isRed_() ? 0 : 1);\n        }\n    };\n    LLRBNode.RED = true;\n    LLRBNode.BLACK = false;\n    return LLRBNode;\n}());\nexports.LLRBNode = LLRBNode;\n/**\n * Represents an empty node (a leaf node in the Red-Black Tree).\n */\nvar LLRBEmptyNode = /** @class */ (function () {\n    function LLRBEmptyNode() {\n    }\n    /**\n     * Returns a copy of the current node.\n     *\n     * @return {!LLRBEmptyNode} The node copy.\n     */\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\n        return this;\n    };\n    /**\n     * Returns a copy of the tree, with the specified key/value added.\n     *\n     * @param {!K} key Key to be added.\n     * @param {!V} value Value to be added.\n     * @param {Comparator} comparator Comparator.\n     * @return {!LLRBNode} New tree, with item added.\n     */\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\n        return new LLRBNode(key, value, null);\n    };\n    /**\n     * Returns a copy of the tree, with the specified key removed.\n     *\n     * @param {!K} key The key to remove.\n     * @param {Comparator} comparator Comparator.\n     * @return {!LLRBEmptyNode} New tree, with item removed.\n     */\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\n        return this;\n    };\n    /**\n     * @return {number} The total number of nodes in the tree.\n     */\n    LLRBEmptyNode.prototype.count = function () {\n        return 0;\n    };\n    /**\n     * @return {boolean} True if the tree is empty.\n     */\n    LLRBEmptyNode.prototype.isEmpty = function () {\n        return true;\n    };\n    /**\n     * Traverses the tree in key order and calls the specified action function\n     * for each node.\n     *\n     * @param {function(!K, !V):*} action Callback function to be called for each\n     * node.  If it returns true, traversal is aborted.\n     * @return {boolean} True if traversal was aborted.\n     */\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\n        return false;\n    };\n    /**\n     * Traverses the tree in reverse key order and calls the specified action function\n     * for each node.\n     *\n     * @param {function(!K, !V)} action Callback function to be called for each\n     * node.  If it returns true, traversal is aborted.\n     * @return {boolean} True if traversal was aborted.\n     */\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\n        return false;\n    };\n    /**\n     * @return {null}\n     */\n    LLRBEmptyNode.prototype.minKey = function () {\n        return null;\n    };\n    /**\n     * @return {null}\n     */\n    LLRBEmptyNode.prototype.maxKey = function () {\n        return null;\n    };\n    /**\n     * @private\n     * @return {number} Not sure what this returns exactly. :-).\n     */\n    LLRBEmptyNode.prototype.check_ = function () {\n        return 0;\n    };\n    /**\n     * @private\n     * @return {boolean} Whether this node is red.\n     */\n    LLRBEmptyNode.prototype.isRed_ = function () {\n        return false;\n    };\n    return LLRBEmptyNode;\n}());\nexports.LLRBEmptyNode = LLRBEmptyNode;\n/**\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\n * tree.\n */\nvar SortedMap = /** @class */ (function () {\n    /**\n     * @template K, V\n     * @param {function(K, K):number} comparator_ Key comparator.\n     * @param {LLRBNode=} root_ (Optional) Root node for the map.\n     */\n    function SortedMap(comparator_, root_) {\n        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }\n        this.comparator_ = comparator_;\n        this.root_ = root_;\n    }\n    /**\n     * Returns a copy of the map, with the specified key/value added or replaced.\n     * (TODO: We should perhaps rename this method to 'put')\n     *\n     * @param {!K} key Key to be added.\n     * @param {!V} value Value to be added.\n     * @return {!SortedMap.<K, V>} New map, with item added.\n     */\n    SortedMap.prototype.insert = function (key, value) {\n        return new SortedMap(this.comparator_, this.root_\n            .insert(key, value, this.comparator_)\n            .copy(null, null, LLRBNode.BLACK, null, null));\n    };\n    /**\n     * Returns a copy of the map, with the specified key removed.\n     *\n     * @param {!K} key The key to remove.\n     * @return {!SortedMap.<K, V>} New map, with item removed.\n     */\n    SortedMap.prototype.remove = function (key) {\n        return new SortedMap(this.comparator_, this.root_\n            .remove(key, this.comparator_)\n            .copy(null, null, LLRBNode.BLACK, null, null));\n    };\n    /**\n     * Returns the value of the node with the given key, or null.\n     *\n     * @param {!K} key The key to look up.\n     * @return {?V} The value of the node with the given key, or null if the\n     * key doesn't exist.\n     */\n    SortedMap.prototype.get = function (key) {\n        var cmp;\n        var node = this.root_;\n        while (!node.isEmpty()) {\n            cmp = this.comparator_(key, node.key);\n            if (cmp === 0) {\n                return node.value;\n            }\n            else if (cmp < 0) {\n                node = node.left;\n            }\n            else if (cmp > 0) {\n                node = node.right;\n            }\n        }\n        return null;\n    };\n    /**\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\n     * @param {K} key The key to find the predecessor of\n     * @return {?K} The predecessor key.\n     */\n    SortedMap.prototype.getPredecessorKey = function (key) {\n        var cmp, node = this.root_, rightParent = null;\n        while (!node.isEmpty()) {\n            cmp = this.comparator_(key, node.key);\n            if (cmp === 0) {\n                if (!node.left.isEmpty()) {\n                    node = node.left;\n                    while (!node.right.isEmpty())\n                        node = node.right;\n                    return node.key;\n                }\n                else if (rightParent) {\n                    return rightParent.key;\n                }\n                else {\n                    return null; // first item.\n                }\n            }\n            else if (cmp < 0) {\n                node = node.left;\n            }\n            else if (cmp > 0) {\n                rightParent = node;\n                node = node.right;\n            }\n        }\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\n    };\n    /**\n     * @return {boolean} True if the map is empty.\n     */\n    SortedMap.prototype.isEmpty = function () {\n        return this.root_.isEmpty();\n    };\n    /**\n     * @return {number} The total number of nodes in the map.\n     */\n    SortedMap.prototype.count = function () {\n        return this.root_.count();\n    };\n    /**\n     * @return {?K} The minimum key in the map.\n     */\n    SortedMap.prototype.minKey = function () {\n        return this.root_.minKey();\n    };\n    /**\n     * @return {?K} The maximum key in the map.\n     */\n    SortedMap.prototype.maxKey = function () {\n        return this.root_.maxKey();\n    };\n    /**\n     * Traverses the map in key order and calls the specified action function\n     * for each key/value pair.\n     *\n     * @param {function(!K, !V):*} action Callback function to be called\n     * for each key/value pair.  If action returns true, traversal is aborted.\n     * @return {*} The first truthy value returned by action, or the last falsey\n     *   value returned by action\n     */\n    SortedMap.prototype.inorderTraversal = function (action) {\n        return this.root_.inorderTraversal(action);\n    };\n    /**\n     * Traverses the map in reverse key order and calls the specified action function\n     * for each key/value pair.\n     *\n     * @param {function(!Object, !Object)} action Callback function to be called\n     * for each key/value pair.  If action returns true, traversal is aborted.\n     * @return {*} True if the traversal was aborted.\n     */\n    SortedMap.prototype.reverseTraversal = function (action) {\n        return this.root_.reverseTraversal(action);\n    };\n    /**\n     * Returns an iterator over the SortedMap.\n     * @template T\n     * @param {(function(K, V):T)=} resultGenerator\n     * @return {SortedMapIterator.<K, V, T>} The iterator.\n     */\n    SortedMap.prototype.getIterator = function (resultGenerator) {\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\n    };\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\n    };\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\n    };\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\n    };\n    /**\n     * Always use the same empty node, to reduce memory.\n     * @const\n     */\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\n    return SortedMap;\n}());\nexports.SortedMap = SortedMap;\n\n//# sourceMappingURL=SortedMap.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/util/SortedMap.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ServerValues_1 = require(\"./util/ServerValues\");\nvar nodeFromJSON_1 = require(\"./snap/nodeFromJSON\");\nvar Path_1 = require(\"./util/Path\");\nvar SparseSnapshotTree_1 = require(\"./SparseSnapshotTree\");\nvar SyncTree_1 = require(\"./SyncTree\");\nvar SnapshotHolder_1 = require(\"./SnapshotHolder\");\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"./util/util\");\nvar util_3 = require(\"@firebase/util\");\nvar AuthTokenProvider_1 = require(\"./AuthTokenProvider\");\nvar StatsManager_1 = require(\"./stats/StatsManager\");\nvar StatsReporter_1 = require(\"./stats/StatsReporter\");\nvar StatsListener_1 = require(\"./stats/StatsListener\");\nvar EventQueue_1 = require(\"./view/EventQueue\");\nvar PersistentConnection_1 = require(\"./PersistentConnection\");\nvar ReadonlyRestClient_1 = require(\"./ReadonlyRestClient\");\nvar Database_1 = require(\"../api/Database\");\nvar INTERRUPT_REASON = 'repo_interrupt';\n/**\n * A connection to a single data repository.\n */\nvar Repo = /** @class */ (function () {\n    /**\n     * @param {!RepoInfo} repoInfo_\n     * @param {boolean} forceRestClient\n     * @param {!FirebaseApp} app\n     */\n    function Repo(repoInfo_, forceRestClient, app) {\n        var _this = this;\n        this.repoInfo_ = repoInfo_;\n        this.app = app;\n        this.dataUpdateCount = 0;\n        this.statsListener_ = null;\n        this.eventQueue_ = new EventQueue_1.EventQueue();\n        this.nextWriteId_ = 1;\n        this.interceptServerDataCallback_ = null;\n        // A list of data pieces and paths to be set when this client disconnects.\n        this.onDisconnect_ = new SparseSnapshotTree_1.SparseSnapshotTree();\n        /**\n         * TODO: This should be @private but it's used by test_access.js and internal.js\n         * @type {?PersistentConnection}\n         */\n        this.persistentConnection_ = null;\n        /** @type {!AuthTokenProvider} */\n        var authTokenProvider = new AuthTokenProvider_1.AuthTokenProvider(app);\n        this.stats_ = StatsManager_1.StatsManager.getCollection(repoInfo_);\n        if (forceRestClient || util_2.beingCrawled()) {\n            this.server_ = new ReadonlyRestClient_1.ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), authTokenProvider);\n            // Minor hack: Fire onConnect immediately, since there's no actual connection.\n            setTimeout(this.onConnectStatus_.bind(this, true), 0);\n        }\n        else {\n            var authOverride = app.options['databaseAuthVariableOverride'];\n            // Validate authOverride\n            if (typeof authOverride !== 'undefined' && authOverride !== null) {\n                if (typeof authOverride !== 'object') {\n                    throw new Error('Only objects are supported for option databaseAuthVariableOverride');\n                }\n                try {\n                    util_1.stringify(authOverride);\n                }\n                catch (e) {\n                    throw new Error('Invalid authOverride provided: ' + e);\n                }\n            }\n            this.persistentConnection_ = new PersistentConnection_1.PersistentConnection(this.repoInfo_, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), authTokenProvider, authOverride);\n            this.server_ = this.persistentConnection_;\n        }\n        authTokenProvider.addTokenChangeListener(function (token) {\n            _this.server_.refreshAuthToken(token);\n        });\n        // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n        // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n        this.statsReporter_ = StatsManager_1.StatsManager.getOrCreateReporter(repoInfo_, function () { return new StatsReporter_1.StatsReporter(_this.stats_, _this.server_); });\n        this.transactions_init_();\n        // Used for .info.\n        this.infoData_ = new SnapshotHolder_1.SnapshotHolder();\n        this.infoSyncTree_ = new SyncTree_1.SyncTree({\n            startListening: function (query, tag, currentHashFn, onComplete) {\n                var infoEvents = [];\n                var node = _this.infoData_.getNode(query.path);\n                // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n                // on initial data...\n                if (!node.isEmpty()) {\n                    infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\n                    setTimeout(function () {\n                        onComplete('ok');\n                    }, 0);\n                }\n                return infoEvents;\n            },\n            stopListening: function () { }\n        });\n        this.updateInfo_('connected', false);\n        this.serverSyncTree_ = new SyncTree_1.SyncTree({\n            startListening: function (query, tag, currentHashFn, onComplete) {\n                _this.server_.listen(query, currentHashFn, tag, function (status, data) {\n                    var events = onComplete(status, data);\n                    _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\n                });\n                // No synchronous events for network-backed sync trees\n                return [];\n            },\n            stopListening: function (query, tag) {\n                _this.server_.unlisten(query, tag);\n            }\n        });\n    }\n    /**\n     * @return {string}  The URL corresponding to the root of this Firebase.\n     */\n    Repo.prototype.toString = function () {\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\n    };\n    /**\n     * @return {!string} The namespace represented by the repo.\n     */\n    Repo.prototype.name = function () {\n        return this.repoInfo_.namespace;\n    };\n    /**\n     * @return {!number} The time in milliseconds, taking the server offset into account if we have one.\n     */\n    Repo.prototype.serverTime = function () {\n        var offsetNode = this.infoData_.getNode(new Path_1.Path('.info/serverTimeOffset'));\n        var offset = offsetNode.val() || 0;\n        return new Date().getTime() + offset;\n    };\n    /**\n     * Generate ServerValues using some variables from the repo object.\n     * @return {!Object}\n     */\n    Repo.prototype.generateServerValues = function () {\n        return ServerValues_1.generateWithValues({\n            timestamp: this.serverTime()\n        });\n    };\n    /**\n     * Called by realtime when we get new messages from the server.\n     *\n     * @private\n     * @param {string} pathString\n     * @param {*} data\n     * @param {boolean} isMerge\n     * @param {?number} tag\n     */\n    Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\n        // For testing.\n        this.dataUpdateCount++;\n        var path = new Path_1.Path(pathString);\n        data = this.interceptServerDataCallback_\n            ? this.interceptServerDataCallback_(pathString, data)\n            : data;\n        var events = [];\n        if (tag) {\n            if (isMerge) {\n                var taggedChildren = util_3.map(data, function (raw) {\n                    return nodeFromJSON_1.nodeFromJSON(raw);\n                });\n                events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\n            }\n            else {\n                var taggedSnap = nodeFromJSON_1.nodeFromJSON(data);\n                events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\n            }\n        }\n        else if (isMerge) {\n            var changedChildren = util_3.map(data, function (raw) {\n                return nodeFromJSON_1.nodeFromJSON(raw);\n            });\n            events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\n        }\n        else {\n            var snap = nodeFromJSON_1.nodeFromJSON(data);\n            events = this.serverSyncTree_.applyServerOverwrite(path, snap);\n        }\n        var affectedPath = path;\n        if (events.length > 0) {\n            // Since we have a listener outstanding for each transaction, receiving any events\n            // is a proxy for some change having occurred.\n            affectedPath = this.rerunTransactions_(path);\n        }\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\n    };\n    /**\n     * TODO: This should be @private but it's used by test_access.js and internal.js\n     * @param {?function(!string, *):*} callback\n     * @private\n     */\n    Repo.prototype.interceptServerData_ = function (callback) {\n        this.interceptServerDataCallback_ = callback;\n    };\n    /**\n     * @param {!boolean} connectStatus\n     * @private\n     */\n    Repo.prototype.onConnectStatus_ = function (connectStatus) {\n        this.updateInfo_('connected', connectStatus);\n        if (connectStatus === false) {\n            this.runOnDisconnectEvents_();\n        }\n    };\n    /**\n     * @param {!Object} updates\n     * @private\n     */\n    Repo.prototype.onServerInfoUpdate_ = function (updates) {\n        var _this = this;\n        util_2.each(updates, function (value, key) {\n            _this.updateInfo_(key, value);\n        });\n    };\n    /**\n     *\n     * @param {!string} pathString\n     * @param {*} value\n     * @private\n     */\n    Repo.prototype.updateInfo_ = function (pathString, value) {\n        var path = new Path_1.Path('/.info/' + pathString);\n        var newNode = nodeFromJSON_1.nodeFromJSON(value);\n        this.infoData_.updateSnapshot(path, newNode);\n        var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\n    };\n    /**\n     * @return {!number}\n     * @private\n     */\n    Repo.prototype.getNextWriteId_ = function () {\n        return this.nextWriteId_++;\n    };\n    /**\n     * @param {!Path} path\n     * @param {*} newVal\n     * @param {number|string|null} newPriority\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\n        var _this = this;\n        this.log_('set', {\n            path: path.toString(),\n            value: newVal,\n            priority: newPriority\n        });\n        // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n        // (b) store unresolved paths on JSON parse\n        var serverValues = this.generateServerValues();\n        var newNodeUnresolved = nodeFromJSON_1.nodeFromJSON(newVal, newPriority);\n        var newNode = ServerValues_1.resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\n        var writeId = this.getNextWriteId_();\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\n        this.eventQueue_.queueEvents(events);\n        this.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\n            var success = status === 'ok';\n            if (!success) {\n                util_2.warn('set at ' + path + ' failed: ' + status);\n            }\n            var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\n            _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n        var affectedPath = this.abortTransactions_(path);\n        this.rerunTransactions_(affectedPath);\n        // We queued the events above, so just flush the queue here\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\n    };\n    /**\n     * @param {!Path} path\n     * @param {!Object} childrenToMerge\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.update = function (path, childrenToMerge, onComplete) {\n        var _this = this;\n        this.log_('update', { path: path.toString(), value: childrenToMerge });\n        // Start with our existing data and merge each child into it.\n        var empty = true;\n        var serverValues = this.generateServerValues();\n        var changedChildren = {};\n        util_3.forEach(childrenToMerge, function (changedKey, changedValue) {\n            empty = false;\n            var newNodeUnresolved = nodeFromJSON_1.nodeFromJSON(changedValue);\n            changedChildren[changedKey] = ServerValues_1.resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\n        });\n        if (!empty) {\n            var writeId_1 = this.getNextWriteId_();\n            var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\n            this.eventQueue_.queueEvents(events);\n            this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\n                var success = status === 'ok';\n                if (!success) {\n                    util_2.warn('update at ' + path + ' failed: ' + status);\n                }\n                var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\n                var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\n                _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\n                _this.callOnCompleteCallback(onComplete, status, errorReason);\n            });\n            util_3.forEach(childrenToMerge, function (changedPath) {\n                var affectedPath = _this.abortTransactions_(path.child(changedPath));\n                _this.rerunTransactions_(affectedPath);\n            });\n            // We queued the events above, so just flush the queue here\n            this.eventQueue_.raiseEventsForChangedPath(path, []);\n        }\n        else {\n            util_2.log(\"update() called with empty data.  Don't do anything.\");\n            this.callOnCompleteCallback(onComplete, 'ok');\n        }\n    };\n    /**\n     * Applies all of the changes stored up in the onDisconnect_ tree.\n     * @private\n     */\n    Repo.prototype.runOnDisconnectEvents_ = function () {\n        var _this = this;\n        this.log_('onDisconnectEvents');\n        var serverValues = this.generateServerValues();\n        var resolvedOnDisconnectTree = ServerValues_1.resolveDeferredValueTree(this.onDisconnect_, serverValues);\n        var events = [];\n        resolvedOnDisconnectTree.forEachTree(Path_1.Path.Empty, function (path, snap) {\n            events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\n            var affectedPath = _this.abortTransactions_(path);\n            _this.rerunTransactions_(affectedPath);\n        });\n        this.onDisconnect_ = new SparseSnapshotTree_1.SparseSnapshotTree();\n        this.eventQueue_.raiseEventsForChangedPath(Path_1.Path.Empty, events);\n    };\n    /**\n     * @param {!Path} path\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.onDisconnectCancel = function (path, onComplete) {\n        var _this = this;\n        this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\n            if (status === 'ok') {\n                _this.onDisconnect_.forget(path);\n            }\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n    };\n    /**\n     * @param {!Path} path\n     * @param {*} value\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\n        var _this = this;\n        var newNode = nodeFromJSON_1.nodeFromJSON(value);\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\n            if (status === 'ok') {\n                _this.onDisconnect_.remember(path, newNode);\n            }\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n    };\n    /**\n     * @param {!Path} path\n     * @param {*} value\n     * @param {*} priority\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\n        var _this = this;\n        var newNode = nodeFromJSON_1.nodeFromJSON(value, priority);\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\n            if (status === 'ok') {\n                _this.onDisconnect_.remember(path, newNode);\n            }\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n    };\n    /**\n     * @param {!Path} path\n     * @param {*} childrenToMerge\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\n        var _this = this;\n        if (util_3.isEmpty(childrenToMerge)) {\n            util_2.log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n            this.callOnCompleteCallback(onComplete, 'ok');\n            return;\n        }\n        this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\n            if (status === 'ok') {\n                util_3.forEach(childrenToMerge, function (childName, childNode) {\n                    var newChildNode = nodeFromJSON_1.nodeFromJSON(childNode);\n                    _this.onDisconnect_.remember(path.child(childName), newChildNode);\n                });\n            }\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n    };\n    /**\n     * @param {!Query} query\n     * @param {!EventRegistration} eventRegistration\n     */\n    Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\n        var events;\n        if (query.path.getFront() === '.info') {\n            events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\n        }\n        else {\n            events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\n        }\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\n    };\n    /**\n     * @param {!Query} query\n     * @param {?EventRegistration} eventRegistration\n     */\n    Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\n        // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n        // a little bit by handling the return values anyways.\n        var events;\n        if (query.path.getFront() === '.info') {\n            events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\n        }\n        else {\n            events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\n        }\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\n    };\n    Repo.prototype.interrupt = function () {\n        if (this.persistentConnection_) {\n            this.persistentConnection_.interrupt(INTERRUPT_REASON);\n        }\n    };\n    Repo.prototype.resume = function () {\n        if (this.persistentConnection_) {\n            this.persistentConnection_.resume(INTERRUPT_REASON);\n        }\n    };\n    Repo.prototype.stats = function (showDelta) {\n        if (showDelta === void 0) { showDelta = false; }\n        if (typeof console === 'undefined')\n            return;\n        var stats;\n        if (showDelta) {\n            if (!this.statsListener_)\n                this.statsListener_ = new StatsListener_1.StatsListener(this.stats_);\n            stats = this.statsListener_.get();\n        }\n        else {\n            stats = this.stats_.get();\n        }\n        var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\n            return Math.max(currentValue.length, previousValue);\n        }, 0);\n        util_3.forEach(stats, function (stat, value) {\n            // pad stat names to be the same length (plus 2 extra spaces).\n            for (var i = stat.length; i < longestName + 2; i++)\n                stat += ' ';\n            console.log(stat + value);\n        });\n    };\n    Repo.prototype.statsIncrementCounter = function (metric) {\n        this.stats_.incrementCounter(metric);\n        this.statsReporter_.includeStat(metric);\n    };\n    /**\n     * @param {...*} var_args\n     * @private\n     */\n    Repo.prototype.log_ = function () {\n        var var_args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            var_args[_i] = arguments[_i];\n        }\n        var prefix = '';\n        if (this.persistentConnection_) {\n            prefix = this.persistentConnection_.id + ':';\n        }\n        util_2.log.apply(void 0, [prefix].concat(var_args));\n    };\n    /**\n     * @param {?function(?Error, *=)} callback\n     * @param {!string} status\n     * @param {?string=} errorReason\n     */\n    Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\n        if (callback) {\n            util_2.exceptionGuard(function () {\n                if (status == 'ok') {\n                    callback(null);\n                }\n                else {\n                    var code = (status || 'error').toUpperCase();\n                    var message = code;\n                    if (errorReason)\n                        message += ': ' + errorReason;\n                    var error = new Error(message);\n                    error.code = code;\n                    callback(error);\n                }\n            });\n        }\n    };\n    Object.defineProperty(Repo.prototype, \"database\", {\n        get: function () {\n            return this.__database || (this.__database = new Database_1.Database(this));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Repo;\n}());\nexports.Repo = Repo;\n\n//# sourceMappingURL=Repo.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/Repo.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\n * whether a node potentially had children removed due to a filter.\n */\nvar CacheNode = /** @class */ (function () {\n    /**\n     * @param {!Node} node_\n     * @param {boolean} fullyInitialized_\n     * @param {boolean} filtered_\n     */\n    function CacheNode(node_, fullyInitialized_, filtered_) {\n        this.node_ = node_;\n        this.fullyInitialized_ = fullyInitialized_;\n        this.filtered_ = filtered_;\n    }\n    /**\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\n     * @return {boolean}\n     */\n    CacheNode.prototype.isFullyInitialized = function () {\n        return this.fullyInitialized_;\n    };\n    /**\n     * Returns whether this node is potentially missing children due to a filter applied to the node\n     * @return {boolean}\n     */\n    CacheNode.prototype.isFiltered = function () {\n        return this.filtered_;\n    };\n    /**\n     * @param {!Path} path\n     * @return {boolean}\n     */\n    CacheNode.prototype.isCompleteForPath = function (path) {\n        if (path.isEmpty()) {\n            return this.isFullyInitialized() && !this.filtered_;\n        }\n        var childKey = path.getFront();\n        return this.isCompleteForChild(childKey);\n    };\n    /**\n     * @param {!string} key\n     * @return {boolean}\n     */\n    CacheNode.prototype.isCompleteForChild = function (key) {\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\n    };\n    /**\n     * @return {!Node}\n     */\n    CacheNode.prototype.getNode = function () {\n        return this.node_;\n    };\n    return CacheNode;\n}());\nexports.CacheNode = CacheNode;\n\n//# sourceMappingURL=CacheNode.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/view/CacheNode.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar onDisconnect_1 = require(\"./onDisconnect\");\nvar TransactionResult_1 = require(\"./TransactionResult\");\nvar util_1 = require(\"../core/util/util\");\nvar NextPushId_1 = require(\"../core/util/NextPushId\");\nvar Query_1 = require(\"./Query\");\nvar Repo_1 = require(\"../core/Repo\");\nvar Path_1 = require(\"../core/util/Path\");\nvar QueryParams_1 = require(\"../core/view/QueryParams\");\nvar validation_1 = require(\"../core/util/validation\");\nvar util_2 = require(\"@firebase/util\");\nvar util_3 = require(\"@firebase/util\");\nvar SyncPoint_1 = require(\"../core/SyncPoint\");\nvar Reference = /** @class */ (function (_super) {\n    tslib_1.__extends(Reference, _super);\n    /**\n     * Call options:\n     *   new Reference(Repo, Path) or\n     *   new Reference(url: string, string|RepoManager)\n     *\n     * Externally - this is the firebase.database.Reference type.\n     *\n     * @param {!Repo} repo\n     * @param {(!Path)} path\n     * @extends {Query}\n     */\n    function Reference(repo, path) {\n        var _this = this;\n        if (!(repo instanceof Repo_1.Repo)) {\n            throw new Error('new Reference() no longer supported - use app.database().');\n        }\n        // call Query's constructor, passing in the repo and path.\n        _this = _super.call(this, repo, path, QueryParams_1.QueryParams.DEFAULT, false) || this;\n        return _this;\n    }\n    /** @return {?string} */\n    Reference.prototype.getKey = function () {\n        util_2.validateArgCount('Reference.key', 0, 0, arguments.length);\n        if (this.path.isEmpty())\n            return null;\n        else\n            return this.path.getBack();\n    };\n    /**\n     * @param {!(string|Path)} pathString\n     * @return {!Reference}\n     */\n    Reference.prototype.child = function (pathString) {\n        util_2.validateArgCount('Reference.child', 1, 1, arguments.length);\n        if (typeof pathString === 'number') {\n            pathString = String(pathString);\n        }\n        else if (!(pathString instanceof Path_1.Path)) {\n            if (this.path.getFront() === null)\n                validation_1.validateRootPathString('Reference.child', 1, pathString, false);\n            else\n                validation_1.validatePathString('Reference.child', 1, pathString, false);\n        }\n        return new Reference(this.repo, this.path.child(pathString));\n    };\n    /** @return {?Reference} */\n    Reference.prototype.getParent = function () {\n        util_2.validateArgCount('Reference.parent', 0, 0, arguments.length);\n        var parentPath = this.path.parent();\n        return parentPath === null ? null : new Reference(this.repo, parentPath);\n    };\n    /** @return {!Reference} */\n    Reference.prototype.getRoot = function () {\n        util_2.validateArgCount('Reference.root', 0, 0, arguments.length);\n        var ref = this;\n        while (ref.getParent() !== null) {\n            ref = ref.getParent();\n        }\n        return ref;\n    };\n    /** @return {!Database} */\n    Reference.prototype.databaseProp = function () {\n        return this.repo.database;\n    };\n    /**\n     * @param {*} newVal\n     * @param {function(?Error)=} onComplete\n     * @return {!Promise}\n     */\n    Reference.prototype.set = function (newVal, onComplete) {\n        util_2.validateArgCount('Reference.set', 1, 2, arguments.length);\n        validation_1.validateWritablePath('Reference.set', this.path);\n        validation_1.validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\n        util_2.validateCallback('Reference.set', 2, onComplete, true);\n        var deferred = new util_3.Deferred();\n        this.repo.setWithPriority(this.path, newVal, \n        /*priority=*/ null, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\n     * @param {!Object} objectToMerge\n     * @param {function(?Error)=} onComplete\n     * @return {!Promise}\n     */\n    Reference.prototype.update = function (objectToMerge, onComplete) {\n        util_2.validateArgCount('Reference.update', 1, 2, arguments.length);\n        validation_1.validateWritablePath('Reference.update', this.path);\n        if (Array.isArray(objectToMerge)) {\n            var newObjectToMerge = {};\n            for (var i = 0; i < objectToMerge.length; ++i) {\n                newObjectToMerge['' + i] = objectToMerge[i];\n            }\n            objectToMerge = newObjectToMerge;\n            util_1.warn('Passing an Array to Firebase.update() is deprecated. ' +\n                'Use set() if you want to overwrite the existing data, or ' +\n                'an Object with integer keys if you really do want to ' +\n                'only update some of the children.');\n        }\n        validation_1.validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\n        util_2.validateCallback('Reference.update', 2, onComplete, true);\n        var deferred = new util_3.Deferred();\n        this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\n     * @param {*} newVal\n     * @param {string|number|null} newPriority\n     * @param {function(?Error)=} onComplete\n     * @return {!Promise}\n     */\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\n        util_2.validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\n        validation_1.validateWritablePath('Reference.setWithPriority', this.path);\n        validation_1.validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\n        validation_1.validatePriority('Reference.setWithPriority', 2, newPriority, false);\n        util_2.validateCallback('Reference.setWithPriority', 3, onComplete, true);\n        if (this.getKey() === '.length' || this.getKey() === '.keys')\n            throw 'Reference.setWithPriority failed: ' +\n                this.getKey() +\n                ' is a read-only object.';\n        var deferred = new util_3.Deferred();\n        this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\n     * @param {function(?Error)=} onComplete\n     * @return {!Promise}\n     */\n    Reference.prototype.remove = function (onComplete) {\n        util_2.validateArgCount('Reference.remove', 0, 1, arguments.length);\n        validation_1.validateWritablePath('Reference.remove', this.path);\n        util_2.validateCallback('Reference.remove', 1, onComplete, true);\n        return this.set(null, onComplete);\n    };\n    /**\n     * @param {function(*):*} transactionUpdate\n     * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\n     * @param {boolean=} applyLocally\n     * @return {!Promise}\n     */\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\n        util_2.validateArgCount('Reference.transaction', 1, 3, arguments.length);\n        validation_1.validateWritablePath('Reference.transaction', this.path);\n        util_2.validateCallback('Reference.transaction', 1, transactionUpdate, false);\n        util_2.validateCallback('Reference.transaction', 2, onComplete, true);\n        // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\n        // to expose it.\n        validation_1.validateBoolean('Reference.transaction', 3, applyLocally, true);\n        if (this.getKey() === '.length' || this.getKey() === '.keys')\n            throw 'Reference.transaction failed: ' +\n                this.getKey() +\n                ' is a read-only object.';\n        if (applyLocally === undefined)\n            applyLocally = true;\n        var deferred = new util_3.Deferred();\n        if (typeof onComplete === 'function') {\n            deferred.promise.catch(function () { });\n        }\n        var promiseComplete = function (error, committed, snapshot) {\n            if (error) {\n                deferred.reject(error);\n            }\n            else {\n                deferred.resolve(new TransactionResult_1.TransactionResult(committed, snapshot));\n            }\n            if (typeof onComplete === 'function') {\n                onComplete(error, committed, snapshot);\n            }\n        };\n        this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\n        return deferred.promise;\n    };\n    /**\n     * @param {string|number|null} priority\n     * @param {function(?Error)=} onComplete\n     * @return {!Promise}\n     */\n    Reference.prototype.setPriority = function (priority, onComplete) {\n        util_2.validateArgCount('Reference.setPriority', 1, 2, arguments.length);\n        validation_1.validateWritablePath('Reference.setPriority', this.path);\n        validation_1.validatePriority('Reference.setPriority', 1, priority, false);\n        util_2.validateCallback('Reference.setPriority', 2, onComplete, true);\n        var deferred = new util_3.Deferred();\n        this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\n     * @param {*=} value\n     * @param {function(?Error)=} onComplete\n     * @return {!Reference}\n     */\n    Reference.prototype.push = function (value, onComplete) {\n        util_2.validateArgCount('Reference.push', 0, 2, arguments.length);\n        validation_1.validateWritablePath('Reference.push', this.path);\n        validation_1.validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\n        util_2.validateCallback('Reference.push', 2, onComplete, true);\n        var now = this.repo.serverTime();\n        var name = NextPushId_1.nextPushId(now);\n        // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\n        // We use child() to create handles to two different references. The first is turned into a\n        // ThennableReference below by adding then() and catch() methods and is used as the\n        // return value of push(). The second remains a regular Reference and is used as the fulfilled\n        // value of the first ThennableReference.\n        var thennablePushRef = this.child(name);\n        var pushRef = this.child(name);\n        var promise;\n        if (value != null) {\n            promise = thennablePushRef.set(value, onComplete).then(function () { return pushRef; });\n        }\n        else {\n            promise = Promise.resolve(pushRef);\n        }\n        thennablePushRef.then = promise.then.bind(promise);\n        thennablePushRef.catch = promise.then.bind(promise, undefined);\n        if (typeof onComplete === 'function') {\n            promise.catch(function () { });\n        }\n        return thennablePushRef;\n    };\n    /**\n     * @return {!OnDisconnect}\n     */\n    Reference.prototype.onDisconnect = function () {\n        validation_1.validateWritablePath('Reference.onDisconnect', this.path);\n        return new onDisconnect_1.OnDisconnect(this.repo, this.path);\n    };\n    Object.defineProperty(Reference.prototype, \"database\", {\n        get: function () {\n            return this.databaseProp();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Reference.prototype, \"key\", {\n        get: function () {\n            return this.getKey();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Reference.prototype, \"parent\", {\n        get: function () {\n            return this.getParent();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Reference.prototype, \"root\", {\n        get: function () {\n            return this.getRoot();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Reference;\n}(Query_1.Query));\nexports.Reference = Reference;\n/**\n * Define reference constructor in various modules\n *\n * We are doing this here to avoid several circular\n * dependency issues\n */\nQuery_1.Query.__referenceConstructor = Reference;\nSyncPoint_1.SyncPoint.__referenceConstructor = Reference;\n\n//# sourceMappingURL=Reference.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/api/Reference.js\n// module id = 379\n// module chunks = 0 1","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar validation_1 = require(\"../core/util/validation\");\nvar Path_1 = require(\"../core/util/Path\");\nvar PriorityIndex_1 = require(\"../core/snap/indexes/PriorityIndex\");\n/**\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\n * surfaces the public methods (val, forEach, etc.) we want to expose.\n */\nvar DataSnapshot = /** @class */ (function () {\n    /**\n     * @param {!Node} node_ A SnapshotNode to wrap.\n     * @param {!Reference} ref_ The ref of the location this snapshot came from.\n     * @param {!Index} index_ The iteration order for this snapshot\n     */\n    function DataSnapshot(node_, ref_, index_) {\n        this.node_ = node_;\n        this.ref_ = ref_;\n        this.index_ = index_;\n    }\n    /**\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\n     * empty.\n     *\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\n     */\n    DataSnapshot.prototype.val = function () {\n        util_1.validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\n        return this.node_.val();\n    };\n    /**\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\n     * the entire node contents.\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\n     */\n    DataSnapshot.prototype.exportVal = function () {\n        util_1.validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\n        return this.node_.val(true);\n    };\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n    // for end-users\n    DataSnapshot.prototype.toJSON = function () {\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\n        util_1.validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\n        return this.exportVal();\n    };\n    /**\n     * Returns whether the snapshot contains a non-null value.\n     *\n     * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\n     */\n    DataSnapshot.prototype.exists = function () {\n        util_1.validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\n        return !this.node_.isEmpty();\n    };\n    /**\n     * Returns a DataSnapshot of the specified child node's contents.\n     *\n     * @param {!string} childPathString Path to a child.\n     * @return {!DataSnapshot} DataSnapshot for child node.\n     */\n    DataSnapshot.prototype.child = function (childPathString) {\n        util_1.validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\n        // Ensure the childPath is a string (can be a number)\n        childPathString = String(childPathString);\n        validation_1.validatePathString('DataSnapshot.child', 1, childPathString, false);\n        var childPath = new Path_1.Path(childPathString);\n        var childRef = this.ref_.child(childPath);\n        return new DataSnapshot(this.node_.getChild(childPath), childRef, PriorityIndex_1.PRIORITY_INDEX);\n    };\n    /**\n     * Returns whether the snapshot contains a child at the specified path.\n     *\n     * @param {!string} childPathString Path to a child.\n     * @return {boolean} Whether the child exists.\n     */\n    DataSnapshot.prototype.hasChild = function (childPathString) {\n        util_1.validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\n        validation_1.validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\n        var childPath = new Path_1.Path(childPathString);\n        return !this.node_.getChild(childPath).isEmpty();\n    };\n    /**\n     * Returns the priority of the object, or null if no priority was set.\n     *\n     * @return {string|number|null} The priority.\n     */\n    DataSnapshot.prototype.getPriority = function () {\n        util_1.validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n        return this.node_.getPriority().val();\n    };\n    /**\n     * Iterates through child nodes and calls the specified action for each one.\n     *\n     * @param {function(!DataSnapshot)} action Callback function to be called\n     * for each child.\n     * @return {boolean} True if forEach was canceled by action returning true for\n     * one of the child nodes.\n     */\n    DataSnapshot.prototype.forEach = function (action) {\n        var _this = this;\n        util_1.validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\n        util_1.validateCallback('DataSnapshot.forEach', 1, action, false);\n        if (this.node_.isLeafNode())\n            return false;\n        var childrenNode = this.node_;\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n        return !!childrenNode.forEachChild(this.index_, function (key, node) {\n            return action(new DataSnapshot(node, _this.ref_.child(key), PriorityIndex_1.PRIORITY_INDEX));\n        });\n    };\n    /**\n     * Returns whether this DataSnapshot has children.\n     * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\n     */\n    DataSnapshot.prototype.hasChildren = function () {\n        util_1.validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\n        if (this.node_.isLeafNode())\n            return false;\n        else\n            return !this.node_.isEmpty();\n    };\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\n        get: function () {\n            return this.ref_.getKey();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the number of children for this DataSnapshot.\n     * @return {number} The number of children that this DataSnapshot contains.\n     */\n    DataSnapshot.prototype.numChildren = function () {\n        util_1.validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\n        return this.node_.numChildren();\n    };\n    /**\n     * @return {Reference} The Firebase reference for the location this snapshot's data came from.\n     */\n    DataSnapshot.prototype.getRef = function () {\n        util_1.validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\n        return this.ref_;\n    };\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\n        get: function () {\n            return this.getRef();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DataSnapshot;\n}());\nexports.DataSnapshot = DataSnapshot;\n\n//# sourceMappingURL=DataSnapshot.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SortedMap_1 = require(\"./SortedMap\");\nvar Path_1 = require(\"./Path\");\nvar util_1 = require(\"./util\");\nvar util_2 = require(\"@firebase/util\");\nvar emptyChildrenSingleton;\n/**\n * Singleton empty children collection.\n *\n * @const\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\n */\nvar EmptyChildren = function () {\n    if (!emptyChildrenSingleton) {\n        emptyChildrenSingleton = new SortedMap_1.SortedMap(util_1.stringCompare);\n    }\n    return emptyChildrenSingleton;\n};\n/**\n * A tree with immutable elements.\n */\nvar ImmutableTree = /** @class */ (function () {\n    /**\n     * @template T\n     * @param {?T} value\n     * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\n     */\n    function ImmutableTree(value, children) {\n        if (children === void 0) { children = EmptyChildren(); }\n        this.value = value;\n        this.children = children;\n    }\n    /**\n     * @template T\n     * @param {!Object.<string, !T>} obj\n     * @return {!ImmutableTree.<!T>}\n     */\n    ImmutableTree.fromObject = function (obj) {\n        var tree = ImmutableTree.Empty;\n        util_2.forEach(obj, function (childPath, childSnap) {\n            tree = tree.set(new Path_1.Path(childPath), childSnap);\n        });\n        return tree;\n    };\n    /**\n     * True if the value is empty and there are no children\n     * @return {boolean}\n     */\n    ImmutableTree.prototype.isEmpty = function () {\n        return this.value === null && this.children.isEmpty();\n    };\n    /**\n     * Given a path and predicate, return the first node and the path to that node\n     * where the predicate returns true.\n     *\n     * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\n     * on the way back out, it may be better to pass down a pathSoFar obj.\n     *\n     * @param {!Path} relativePath The remainder of the path\n     * @param {function(T):boolean} predicate The predicate to satisfy to return a\n     *   node\n     * @return {?{path:!Path, value:!T}}\n     */\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\n        if (this.value != null && predicate(this.value)) {\n            return { path: Path_1.Path.Empty, value: this.value };\n        }\n        else {\n            if (relativePath.isEmpty()) {\n                return null;\n            }\n            else {\n                var front = relativePath.getFront();\n                var child = this.children.get(front);\n                if (child !== null) {\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);\n                    if (childExistingPathAndValue != null) {\n                        var fullPath = new Path_1.Path(front).child(childExistingPathAndValue.path);\n                        return { path: fullPath, value: childExistingPathAndValue.value };\n                    }\n                    else {\n                        return null;\n                    }\n                }\n                else {\n                    return null;\n                }\n            }\n        }\n    };\n    /**\n     * Find, if it exists, the shortest subpath of the given path that points a defined\n     * value in the tree\n     * @param {!Path} relativePath\n     * @return {?{path: !Path, value: !T}}\n     */\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\n        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });\n    };\n    /**\n     * @param {!Path} relativePath\n     * @return {!ImmutableTree.<T>} The subtree at the given path\n     */\n    ImmutableTree.prototype.subtree = function (relativePath) {\n        if (relativePath.isEmpty()) {\n            return this;\n        }\n        else {\n            var front = relativePath.getFront();\n            var childTree = this.children.get(front);\n            if (childTree !== null) {\n                return childTree.subtree(relativePath.popFront());\n            }\n            else {\n                return ImmutableTree.Empty;\n            }\n        }\n    };\n    /**\n     * Sets a value at the specified path.\n     *\n     * @param {!Path} relativePath Path to set value at.\n     * @param {?T} toSet Value to set.\n     * @return {!ImmutableTree.<T>} Resulting tree.\n     */\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\n        if (relativePath.isEmpty()) {\n            return new ImmutableTree(toSet, this.children);\n        }\n        else {\n            var front = relativePath.getFront();\n            var child = this.children.get(front) || ImmutableTree.Empty;\n            var newChild = child.set(relativePath.popFront(), toSet);\n            var newChildren = this.children.insert(front, newChild);\n            return new ImmutableTree(this.value, newChildren);\n        }\n    };\n    /**\n     * Removes the value at the specified path.\n     *\n     * @param {!Path} relativePath Path to value to remove.\n     * @return {!ImmutableTree.<T>} Resulting tree.\n     */\n    ImmutableTree.prototype.remove = function (relativePath) {\n        if (relativePath.isEmpty()) {\n            if (this.children.isEmpty()) {\n                return ImmutableTree.Empty;\n            }\n            else {\n                return new ImmutableTree(null, this.children);\n            }\n        }\n        else {\n            var front = relativePath.getFront();\n            var child = this.children.get(front);\n            if (child) {\n                var newChild = child.remove(relativePath.popFront());\n                var newChildren = void 0;\n                if (newChild.isEmpty()) {\n                    newChildren = this.children.remove(front);\n                }\n                else {\n                    newChildren = this.children.insert(front, newChild);\n                }\n                if (this.value === null && newChildren.isEmpty()) {\n                    return ImmutableTree.Empty;\n                }\n                else {\n                    return new ImmutableTree(this.value, newChildren);\n                }\n            }\n            else {\n                return this;\n            }\n        }\n    };\n    /**\n     * Gets a value from the tree.\n     *\n     * @param {!Path} relativePath Path to get value for.\n     * @return {?T} Value at path, or null.\n     */\n    ImmutableTree.prototype.get = function (relativePath) {\n        if (relativePath.isEmpty()) {\n            return this.value;\n        }\n        else {\n            var front = relativePath.getFront();\n            var child = this.children.get(front);\n            if (child) {\n                return child.get(relativePath.popFront());\n            }\n            else {\n                return null;\n            }\n        }\n    };\n    /**\n     * Replace the subtree at the specified path with the given new tree.\n     *\n     * @param {!Path} relativePath Path to replace subtree for.\n     * @param {!ImmutableTree} newTree New tree.\n     * @return {!ImmutableTree} Resulting tree.\n     */\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\n        if (relativePath.isEmpty()) {\n            return newTree;\n        }\n        else {\n            var front = relativePath.getFront();\n            var child = this.children.get(front) || ImmutableTree.Empty;\n            var newChild = child.setTree(relativePath.popFront(), newTree);\n            var newChildren = void 0;\n            if (newChild.isEmpty()) {\n                newChildren = this.children.remove(front);\n            }\n            else {\n                newChildren = this.children.insert(front, newChild);\n            }\n            return new ImmutableTree(this.value, newChildren);\n        }\n    };\n    /**\n     * Performs a depth first fold on this tree. Transforms a tree into a single\n     * value, given a function that operates on the path to a node, an optional\n     * current value, and a map of child names to folded subtrees\n     * @template V\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\n     * @return {V}\n     */\n    ImmutableTree.prototype.fold = function (fn) {\n        return this.fold_(Path_1.Path.Empty, fn);\n    };\n    /**\n     * Recursive helper for public-facing fold() method\n     * @template V\n     * @param {!Path} pathSoFar\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\n     * @return {V}\n     * @private\n     */\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\n        var accum = {};\n        this.children.inorderTraversal(function (childKey, childTree) {\n            accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\n        });\n        return fn(pathSoFar, this.value, accum);\n    };\n    /**\n     * Find the first matching value on the given path. Return the result of applying f to it.\n     * @template V\n     * @param {!Path} path\n     * @param {!function(!Path, !T):?V} f\n     * @return {?V}\n     */\n    ImmutableTree.prototype.findOnPath = function (path, f) {\n        return this.findOnPath_(path, Path_1.Path.Empty, f);\n    };\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\n        var result = this.value ? f(pathSoFar, this.value) : false;\n        if (result) {\n            return result;\n        }\n        else {\n            if (pathToFollow.isEmpty()) {\n                return null;\n            }\n            else {\n                var front = pathToFollow.getFront();\n                var nextChild = this.children.get(front);\n                if (nextChild) {\n                    return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);\n                }\n                else {\n                    return null;\n                }\n            }\n        }\n    };\n    /**\n     *\n     * @param {!Path} path\n     * @param {!function(!Path, !T)} f\n     * @returns {!ImmutableTree.<T>}\n     */\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\n        return this.foreachOnPath_(path, Path_1.Path.Empty, f);\n    };\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\n        if (pathToFollow.isEmpty()) {\n            return this;\n        }\n        else {\n            if (this.value) {\n                f(currentRelativePath, this.value);\n            }\n            var front = pathToFollow.getFront();\n            var nextChild = this.children.get(front);\n            if (nextChild) {\n                return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);\n            }\n            else {\n                return ImmutableTree.Empty;\n            }\n        }\n    };\n    /**\n     * Calls the given function for each node in the tree that has a value.\n     *\n     * @param {function(!Path, !T)} f A function to be called with\n     *   the path from the root of the tree to a node, and the value at that node.\n     *   Called in depth-first order.\n     */\n    ImmutableTree.prototype.foreach = function (f) {\n        this.foreach_(Path_1.Path.Empty, f);\n    };\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\n        this.children.inorderTraversal(function (childName, childTree) {\n            childTree.foreach_(currentRelativePath.child(childName), f);\n        });\n        if (this.value) {\n            f(currentRelativePath, this.value);\n        }\n    };\n    /**\n     *\n     * @param {function(string, !T)} f\n     */\n    ImmutableTree.prototype.foreachChild = function (f) {\n        this.children.inorderTraversal(function (childName, childTree) {\n            if (childTree.value) {\n                f(childName, childTree.value);\n            }\n        });\n    };\n    ImmutableTree.Empty = new ImmutableTree(null);\n    return ImmutableTree;\n}());\nexports.ImmutableTree = ImmutableTree;\n\n//# sourceMappingURL=ImmutableTree.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/util/ImmutableTree.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar Change_1 = require(\"../Change\");\nvar ChildrenNode_1 = require(\"../../snap/ChildrenNode\");\nvar PriorityIndex_1 = require(\"../../snap/indexes/PriorityIndex\");\n/**\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\n *\n * @constructor\n * @implements {NodeFilter}\n * @param {!Index} index\n */\nvar IndexedFilter = /** @class */ (function () {\n    function IndexedFilter(index_) {\n        this.index_ = index_;\n    }\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n        util_1.assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\n        var oldChild = snap.getImmediateChild(key);\n        // Check if anything actually changed.\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n            // to avoid treating these cases as \"nothing changed.\"\n            if (oldChild.isEmpty() == newChild.isEmpty()) {\n                // Nothing changed.\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n                return snap;\n            }\n        }\n        if (optChangeAccumulator != null) {\n            if (newChild.isEmpty()) {\n                if (snap.hasChild(key)) {\n                    optChangeAccumulator.trackChildChange(Change_1.Change.childRemovedChange(key, oldChild));\n                }\n                else {\n                    util_1.assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\n                }\n            }\n            else if (oldChild.isEmpty()) {\n                optChangeAccumulator.trackChildChange(Change_1.Change.childAddedChange(key, newChild));\n            }\n            else {\n                optChangeAccumulator.trackChildChange(Change_1.Change.childChangedChange(key, newChild, oldChild));\n            }\n        }\n        if (snap.isLeafNode() && newChild.isEmpty()) {\n            return snap;\n        }\n        else {\n            // Make sure the node is indexed\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n        if (optChangeAccumulator != null) {\n            if (!oldSnap.isLeafNode()) {\n                oldSnap.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (key, childNode) {\n                    if (!newSnap.hasChild(key)) {\n                        optChangeAccumulator.trackChildChange(Change_1.Change.childRemovedChange(key, childNode));\n                    }\n                });\n            }\n            if (!newSnap.isLeafNode()) {\n                newSnap.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (key, childNode) {\n                    if (oldSnap.hasChild(key)) {\n                        var oldChild = oldSnap.getImmediateChild(key);\n                        if (!oldChild.equals(childNode)) {\n                            optChangeAccumulator.trackChildChange(Change_1.Change.childChangedChange(key, childNode, oldChild));\n                        }\n                    }\n                    else {\n                        optChangeAccumulator.trackChildChange(Change_1.Change.childAddedChange(key, childNode));\n                    }\n                });\n            }\n        }\n        return newSnap.withIndex(this.index_);\n    };\n    /**\n     * @inheritDoc\n     */\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n        if (oldSnap.isEmpty()) {\n            return ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n        }\n        else {\n            return oldSnap.updatePriority(newPriority);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    IndexedFilter.prototype.filtersNodes = function () {\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    IndexedFilter.prototype.getIndexedFilter = function () {\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    IndexedFilter.prototype.getIndex = function () {\n        return this.index_;\n    };\n    return IndexedFilter;\n}());\nexports.IndexedFilter = IndexedFilter;\n\n//# sourceMappingURL=IndexedFilter.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/view/filter/IndexedFilter.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar StatsCollection_1 = require(\"./StatsCollection\");\nvar StatsManager = /** @class */ (function () {\n    function StatsManager() {\n    }\n    StatsManager.getCollection = function (repoInfo) {\n        var hashString = repoInfo.toString();\n        if (!this.collections_[hashString]) {\n            this.collections_[hashString] = new StatsCollection_1.StatsCollection();\n        }\n        return this.collections_[hashString];\n    };\n    StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\n        var hashString = repoInfo.toString();\n        if (!this.reporters_[hashString]) {\n            this.reporters_[hashString] = creatorFunction();\n        }\n        return this.reporters_[hashString];\n    };\n    StatsManager.collections_ = {};\n    StatsManager.reporters_ = {};\n    return StatsManager;\n}());\nexports.StatsManager = StatsManager;\n\n//# sourceMappingURL=StatsManager.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/stats/StatsManager.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar Repo_1 = require(\"./Repo\");\nvar util_2 = require(\"./util/util\");\nvar parser_1 = require(\"./util/libs/parser\");\nvar validation_1 = require(\"./util/validation\");\nrequire(\"./Repo_transaction\");\n/** @const {string} */\nvar DATABASE_URL_OPTION = 'databaseURL';\nvar _staticInstance;\n/**\n * Creates and caches Repo instances.\n */\nvar RepoManager = /** @class */ (function () {\n    function RepoManager() {\n        /**\n         * @private {!Object.<string, Object<string, !fb.core.Repo>>}\n         */\n        this.repos_ = {};\n        /**\n         * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\n         * @private {boolean}\n         */\n        this.useRestClient_ = false;\n    }\n    RepoManager.getInstance = function () {\n        if (!_staticInstance) {\n            _staticInstance = new RepoManager();\n        }\n        return _staticInstance;\n    };\n    // TODO(koss): Remove these functions unless used in tests?\n    RepoManager.prototype.interrupt = function () {\n        for (var appName in this.repos_) {\n            for (var dbUrl in this.repos_[appName]) {\n                this.repos_[appName][dbUrl].interrupt();\n            }\n        }\n    };\n    RepoManager.prototype.resume = function () {\n        for (var appName in this.repos_) {\n            for (var dbUrl in this.repos_[appName]) {\n                this.repos_[appName][dbUrl].resume();\n            }\n        }\n    };\n    /**\n     * This function should only ever be called to CREATE a new database instance.\n     *\n     * @param {!FirebaseApp} app\n     * @return {!Database}\n     */\n    RepoManager.prototype.databaseFromApp = function (app, url) {\n        var dbUrl = url || app.options[DATABASE_URL_OPTION];\n        if (dbUrl === undefined) {\n            util_2.fatal(\"Can't determine Firebase Database URL.  Be sure to include \" +\n                DATABASE_URL_OPTION +\n                ' option when calling firebase.initializeApp().');\n        }\n        var parsedUrl = parser_1.parseRepoInfo(dbUrl);\n        var repoInfo = parsedUrl.repoInfo;\n        validation_1.validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\n        if (!parsedUrl.path.isEmpty()) {\n            util_2.fatal('Database URL must point to the root of a Firebase Database ' +\n                '(not including a child path).');\n        }\n        var repo = this.createRepo(repoInfo, app);\n        return repo.database;\n    };\n    /**\n     * Remove the repo and make sure it is disconnected.\n     *\n     * @param {!Repo} repo\n     */\n    RepoManager.prototype.deleteRepo = function (repo) {\n        var appRepos = util_1.safeGet(this.repos_, repo.app.name);\n        // This should never happen...\n        if (!appRepos || util_1.safeGet(appRepos, repo.repoInfo_.toURLString()) !== repo) {\n            util_2.fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\n        }\n        repo.interrupt();\n        delete appRepos[repo.repoInfo_.toURLString()];\n    };\n    /**\n     * Ensures a repo doesn't already exist and then creates one using the\n     * provided app.\n     *\n     * @param {!RepoInfo} repoInfo The metadata about the Repo\n     * @param {!FirebaseApp} app\n     * @return {!Repo} The Repo object for the specified server / repoName.\n     */\n    RepoManager.prototype.createRepo = function (repoInfo, app) {\n        var appRepos = util_1.safeGet(this.repos_, app.name);\n        if (!appRepos) {\n            appRepos = {};\n            this.repos_[app.name] = appRepos;\n        }\n        var repo = util_1.safeGet(appRepos, repoInfo.toURLString());\n        if (repo) {\n            util_2.fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\n        }\n        repo = new Repo_1.Repo(repoInfo, this.useRestClient_, app);\n        appRepos[repoInfo.toURLString()] = repo;\n        return repo;\n    };\n    /**\n     * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\n     * @param {boolean} forceRestClient\n     */\n    RepoManager.prototype.forceRestClient = function (forceRestClient) {\n        this.useRestClient_ = forceRestClient;\n    };\n    return RepoManager;\n}());\nexports.RepoManager = RepoManager;\n\n//# sourceMappingURL=RepoManager.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/RepoManager.js","\"use strict\";\nvar AsyncAction_1 = require('./AsyncAction');\nvar AsyncScheduler_1 = require('./AsyncScheduler');\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asap} scheduler.\n *\n * @example <caption>Use async scheduler to delay task</caption>\n * const task = () => console.log('it works!');\n *\n * Rx.Scheduler.async.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n *\n *\n * @example <caption>Use async scheduler to repeat task in intervals</caption>\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * Rx.Scheduler.async.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\nexports.async = new AsyncScheduler_1.AsyncScheduler(AsyncAction_1.AsyncAction);\n//# sourceMappingURL=async.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/scheduler/async.js\n// module id = 385\n// module chunks = 0 1","var REGEX_ABSOLUTE_URL = /^[a-z]+:\\/\\/.*/;\nexport function isNil(obj) {\n    return obj === undefined || obj === null;\n}\nexport function hasKey(obj, key) {\n    return obj && obj[key] !== undefined;\n}\nexport function isString(value) {\n    return typeof value === 'string';\n}\nexport function isFirebaseRef(value) {\n    return typeof value.set === 'function';\n}\nexport function isFirebaseDataSnapshot(value) {\n    return typeof value.exportVal === 'function';\n}\nexport function isAFUnwrappedSnapshot(value) {\n    return typeof value.$key === 'string';\n}\nexport function isFirebaseQuery(value) {\n    return typeof value.orderByChild === 'function';\n}\nexport function isEmptyObject(obj) {\n    if (isNil(obj)) {\n        return false;\n    }\n    return Object.keys(obj).length === 0 && JSON.stringify(obj) === JSON.stringify({});\n}\nexport function unwrapMapFn(snapshot) {\n    var unwrapped = !isNil(snapshot.val()) ? snapshot.val() : { $value: null };\n    if ((/string|number|boolean/).test(typeof unwrapped)) {\n        unwrapped = {\n            $value: unwrapped\n        };\n    }\n    Object.defineProperty(unwrapped, '$key', {\n        value: snapshot.ref.key,\n        enumerable: false\n    });\n    Object.defineProperty(unwrapped, '$exists', {\n        value: function () {\n            return snapshot.exists();\n        },\n        enumerable: false\n    });\n    return unwrapped;\n}\nexport function stripTrailingSlash(value) {\n    if (value.substring(value.length - 1, value.length) === '/') {\n        return value.substring(0, value.length - 1);\n    }\n    else {\n        return value;\n    }\n}\nfunction getAbsUrl(root, url) {\n    if (!(/^[a-z]+:\\/\\/.*/.test(url))) {\n        url = root + '/' + stripLeadingSlash(url);\n    }\n    return url;\n}\nexport function stripLeadingSlash(value) {\n    if (value.substring(0, 1) === '/') {\n        return value.substring(1, value.length);\n    }\n    else {\n        return value;\n    }\n}\nexport function isAbsoluteUrl(url) {\n    return REGEX_ABSOLUTE_URL.test(url);\n}\nexport function getRef(app, pathRef) {\n    if (isFirebaseRef(pathRef)) {\n        return pathRef;\n    }\n    var path = pathRef;\n    if (isAbsoluteUrl(pathRef)) {\n        return app.database().refFromURL(path);\n    }\n    return app.database().ref(path);\n}\n//# sourceMappingURL=utils.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/angularfire2/database-deprecated/utils.js\n// module id = null\n// module chunks = ","import { Observable } from 'rxjs/Observable';\nimport { of as observableOf } from 'rxjs/observable/of';\nimport { combineLatest } from 'rxjs/operator/combineLatest';\nimport { merge } from 'rxjs/operator/merge';\nimport { map } from 'rxjs/operator/map';\nimport { auditTime } from 'rxjs/operator/auditTime';\nimport { OrderByOptions, LimitToOptions } from './interfaces';\nimport { hasKey, isNil } from './utils';\nexport function observeQuery(query, audit) {\n    if (audit === void 0) { audit = true; }\n    if (isNil(query)) {\n        return observableOf((null));\n    }\n    return Observable.create(function (observer) {\n        var combined = combineLatest.call(getOrderObservables(query), getStartAtObservable(query), getEndAtObservable(query), getEqualToObservable(query), getLimitToObservables(query));\n        if (audit) {\n            combined = auditTime.call(combined, 0);\n        }\n        combined\n            .subscribe(function (_a) {\n            var orderBy = _a[0], startAt = _a[1], endAt = _a[2], equalTo = _a[3], limitTo = _a[4];\n            var serializedOrder = {};\n            if (!isNil(orderBy) && !isNil(orderBy.value)) {\n                switch (orderBy.key) {\n                    case OrderByOptions.Key:\n                        serializedOrder = { orderByKey: orderBy.value };\n                        break;\n                    case OrderByOptions.Priority:\n                        serializedOrder = { orderByPriority: orderBy.value };\n                        break;\n                    case OrderByOptions.Value:\n                        serializedOrder = { orderByValue: orderBy.value };\n                        break;\n                    case OrderByOptions.Child:\n                        serializedOrder = { orderByChild: orderBy.value };\n                        break;\n                }\n            }\n            if (!isNil(limitTo) && !isNil(limitTo.value)) {\n                switch (limitTo.key) {\n                    case LimitToOptions.First:\n                        serializedOrder.limitToFirst = limitTo.value;\n                        break;\n                    case LimitToOptions.Last: {\n                        serializedOrder.limitToLast = limitTo.value;\n                        break;\n                    }\n                }\n            }\n            if (startAt !== undefined) {\n                serializedOrder.startAt = startAt;\n            }\n            if (endAt !== undefined) {\n                serializedOrder.endAt = endAt;\n            }\n            if (equalTo !== undefined) {\n                serializedOrder.equalTo = equalTo;\n            }\n            observer.next(serializedOrder);\n        });\n    });\n}\nexport function getOrderObservables(query) {\n    var observables = ['orderByChild', 'orderByKey', 'orderByValue', 'orderByPriority']\n        .map(function (key, option) {\n        return ({ key: key, option: option });\n    })\n        .filter(function (_a) {\n        var key = _a.key, option = _a.option;\n        return !isNil(query[key]);\n    })\n        .map(function (_a) {\n        var key = _a.key, option = _a.option;\n        return mapToOrderBySelection(query[key], option);\n    });\n    if (observables.length === 1) {\n        return observables[0];\n    }\n    else if (observables.length > 1) {\n        return merge.apply(observables[0], observables.slice(1));\n    }\n    else {\n        return new Observable(function (subscriber) {\n            subscriber.next((null));\n        });\n    }\n}\nexport function getLimitToObservables(query) {\n    var observables = ['limitToFirst', 'limitToLast']\n        .map(function (key, option) { return ({ key: key, option: option }); })\n        .filter(function (_a) {\n        var key = _a.key, option = _a.option;\n        return !isNil(query[key]);\n    })\n        .map(function (_a) {\n        var key = _a.key, option = _a.option;\n        return mapToLimitToSelection(query[key], option);\n    });\n    if (observables.length === 1) {\n        return observables[0];\n    }\n    else if (observables.length > 1) {\n        var mergedObs = merge.apply(observables[0], observables.slice(1));\n        return mergedObs;\n    }\n    else {\n        return new Observable(function (subscriber) {\n            subscriber.next((null));\n        });\n    }\n}\nexport function getStartAtObservable(query) {\n    if (query.startAt instanceof Observable) {\n        return query.startAt;\n    }\n    else if (hasKey(query, 'startAt')) {\n        return new Observable(function (subscriber) {\n            subscriber.next(query.startAt);\n        });\n    }\n    else {\n        return new Observable(function (subscriber) {\n            subscriber.next(undefined);\n        });\n    }\n}\nexport function getEndAtObservable(query) {\n    if (query.endAt instanceof Observable) {\n        return query.endAt;\n    }\n    else if (hasKey(query, 'endAt')) {\n        return new Observable(function (subscriber) {\n            subscriber.next(query.endAt);\n        });\n    }\n    else {\n        return new Observable(function (subscriber) {\n            subscriber.next(undefined);\n        });\n    }\n}\nexport function getEqualToObservable(query) {\n    if (query.equalTo instanceof Observable) {\n        return query.equalTo;\n    }\n    else if (hasKey(query, 'equalTo')) {\n        return new Observable(function (subscriber) {\n            subscriber.next(query.equalTo);\n        });\n    }\n    else {\n        return new Observable(function (subscriber) {\n            subscriber.next(undefined);\n        });\n    }\n}\nfunction mapToOrderBySelection(value, key) {\n    if (value instanceof Observable) {\n        return map\n            .call(value, function (value) {\n            return ({ value: value, key: key });\n        });\n    }\n    else {\n        return new Observable(function (subscriber) {\n            subscriber.next({ key: key, value: value });\n        });\n    }\n}\nfunction mapToLimitToSelection(value, key) {\n    if (value instanceof Observable) {\n        return map\n            .call(value, function (value) { return ({ value: value, key: key }); });\n    }\n    else {\n        return new Observable(function (subscriber) {\n            subscriber.next({ key: key, value: value });\n        });\n    }\n}\nfunction hasObservableProperties(query) {\n    if (query.orderByKey instanceof Observable)\n        return true;\n    return false;\n}\n//# sourceMappingURL=query_observable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/angularfire2/database-deprecated/query_observable.js\n// module id = null\n// module chunks = ","import { ZoneScheduler } from 'angularfire2';\nimport * as utils from './utils';\nimport 'firebase/database';\nimport { FirebaseListObservable } from './firebase_list_observable';\nimport { observeOn } from 'rxjs/operator/observeOn';\nimport { observeQuery } from './query_observable';\nimport { switchMap } from 'rxjs/operator/switchMap';\nimport { map } from 'rxjs/operator/map';\nexport function FirebaseListFactory(ref, _a) {\n    var _b = _a === void 0 ? {} : _a, preserveSnapshot = _b.preserveSnapshot, _c = _b.query, query = _c === void 0 ? {} : _c;\n    if (utils.isEmptyObject(query)) {\n        return firebaseListObservable(ref, { preserveSnapshot: preserveSnapshot });\n    }\n    var queryObs = observeQuery(query);\n    return new FirebaseListObservable(ref, function (subscriber) {\n        var sub = switchMap.call(map.call(queryObs, function (query) {\n            var queried = ref;\n            if (query.orderByChild) {\n                queried = queried.orderByChild(query.orderByChild);\n            }\n            else if (query.orderByKey) {\n                queried = queried.orderByKey();\n            }\n            else if (query.orderByPriority) {\n                queried = queried.orderByPriority();\n            }\n            else if (query.orderByValue) {\n                queried = queried.orderByValue();\n            }\n            if (utils.hasKey(query, \"equalTo\")) {\n                if (utils.hasKey(query.equalTo, \"value\")) {\n                    queried = queried.equalTo(query.equalTo.value, query.equalTo.key);\n                }\n                else {\n                    queried = queried.equalTo(query.equalTo);\n                }\n                if (utils.hasKey(query, \"startAt\") || utils.hasKey(query, \"endAt\")) {\n                    throw new Error('Query Error: Cannot use startAt or endAt with equalTo.');\n                }\n                if (!utils.isNil(query.limitToFirst)) {\n                    queried = queried.limitToFirst(query.limitToFirst);\n                }\n                if (!utils.isNil(query.limitToLast)) {\n                    queried = queried.limitToLast(query.limitToLast);\n                }\n                return queried;\n            }\n            if (utils.hasKey(query, \"startAt\")) {\n                if (utils.hasKey(query.startAt, \"value\")) {\n                    queried = queried.startAt(query.startAt.value, query.startAt.key);\n                }\n                else {\n                    queried = queried.startAt(query.startAt);\n                }\n            }\n            if (utils.hasKey(query, \"endAt\")) {\n                if (utils.hasKey(query.endAt, \"value\")) {\n                    queried = queried.endAt(query.endAt.value, query.endAt.key);\n                }\n                else {\n                    queried = queried.endAt(query.endAt);\n                }\n            }\n            if (!utils.isNil(query.limitToFirst) && query.limitToLast) {\n                throw new Error('Query Error: Cannot use limitToFirst with limitToLast.');\n            }\n            if (!utils.isNil(query.limitToFirst)) {\n                queried = queried.limitToFirst(query.limitToFirst);\n            }\n            if (!utils.isNil(query.limitToLast)) {\n                queried = queried.limitToLast(query.limitToLast);\n            }\n            return queried;\n        }), function (queryRef, ix) {\n            return firebaseListObservable(queryRef, { preserveSnapshot: preserveSnapshot });\n        })\n            .subscribe(subscriber);\n        return function () { return sub.unsubscribe(); };\n    });\n}\nfunction firebaseListObservable(ref, _a) {\n    var preserveSnapshot = (_a === void 0 ? {} : _a).preserveSnapshot;\n    var toValue = preserveSnapshot ? (function (snapshot) { return snapshot; }) : utils.unwrapMapFn;\n    var toKey = preserveSnapshot ? (function (value) { return value.key; }) : (function (value) { return value.$key; });\n    var listObs = new FirebaseListObservable(ref, function (obs) {\n        var handles = [];\n        var hasLoaded = false;\n        var lastLoadedKey = (null);\n        var array = [];\n        ref.once('value', function (snap) {\n            if (snap.exists()) {\n                snap.forEach(function (child) {\n                    lastLoadedKey = child.key;\n                });\n                if (array.find(function (child) { return toKey(child) === lastLoadedKey; })) {\n                    hasLoaded = true;\n                    obs.next(array);\n                }\n            }\n            else {\n                hasLoaded = true;\n                obs.next(array);\n            }\n        }, function (err) {\n            if (err) {\n                obs.error(err);\n                obs.complete();\n            }\n        });\n        var addFn = ref.on('child_added', function (child, prevKey) {\n            array = onChildAdded(array, toValue(child), toKey, prevKey);\n            if (hasLoaded) {\n                obs.next(array);\n            }\n            else if (child.key === lastLoadedKey) {\n                hasLoaded = true;\n                obs.next(array);\n            }\n        }, function (err) {\n            if (err) {\n                obs.error(err);\n                obs.complete();\n            }\n        });\n        handles.push({ event: 'child_added', handle: addFn });\n        var remFn = ref.on('child_removed', function (child) {\n            array = onChildRemoved(array, toValue(child), toKey);\n            if (hasLoaded) {\n                obs.next(array);\n            }\n        }, function (err) {\n            if (err) {\n                obs.error(err);\n                obs.complete();\n            }\n        });\n        handles.push({ event: 'child_removed', handle: remFn });\n        var chgFn = ref.on('child_changed', function (child, prevKey) {\n            array = onChildChanged(array, toValue(child), toKey, prevKey);\n            if (hasLoaded) {\n                obs.next(array);\n            }\n        }, function (err) {\n            if (err) {\n                obs.error(err);\n                obs.complete();\n            }\n        });\n        handles.push({ event: 'child_changed', handle: chgFn });\n        return function () {\n            handles.forEach(function (item) {\n                ref.off(item.event, item.handle);\n            });\n        };\n    });\n    return observeOn.call(listObs, new ZoneScheduler(Zone.current));\n}\nexport function onChildAdded(arr, child, toKey, prevKey) {\n    if (!arr.length) {\n        return [child];\n    }\n    return arr.reduce(function (accumulator, curr, i) {\n        if (!prevKey && i === 0) {\n            accumulator.push(child);\n        }\n        accumulator.push(curr);\n        if (prevKey && prevKey === toKey(curr)) {\n            accumulator.push(child);\n        }\n        return accumulator;\n    }, []);\n}\nexport function onChildChanged(arr, child, toKey, prevKey) {\n    var childKey = toKey(child);\n    return arr.reduce(function (accumulator, val, i) {\n        var valKey = toKey(val);\n        if (!prevKey && i == 0) {\n            accumulator.push(child);\n            if (valKey !== childKey) {\n                accumulator.push(val);\n            }\n        }\n        else if (valKey === prevKey) {\n            accumulator.push(val);\n            accumulator.push(child);\n        }\n        else if (valKey !== childKey) {\n            accumulator.push(val);\n        }\n        return accumulator;\n    }, []);\n}\nexport function onChildRemoved(arr, child, toKey) {\n    var childKey = toKey(child);\n    return arr.filter(function (c) { return toKey(c) !== childKey; });\n}\nexport function onChildUpdated(arr, child, toKey, prevKey) {\n    return arr.map(function (v, i, arr) {\n        if (!prevKey && !i) {\n            return child;\n        }\n        else if (i > 0 && toKey(arr[i - 1]) === prevKey) {\n            return child;\n        }\n        else {\n            return v;\n        }\n    });\n}\n//# sourceMappingURL=firebase_list_factory.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/angularfire2/database-deprecated/firebase_list_factory.js\n// module id = null\n// module chunks = ","import { FirebaseObjectObservable } from './firebase_object_observable';\nimport { ZoneScheduler } from 'angularfire2';\nimport { observeOn } from 'rxjs/operator/observeOn';\nimport 'firebase/database';\nimport * as utils from './utils';\nexport function FirebaseObjectFactory(ref, _a) {\n    var preserveSnapshot = (_a === void 0 ? {} : _a).preserveSnapshot;\n    var objectObservable = new FirebaseObjectObservable(function (obs) {\n        var fn = ref.on('value', function (snapshot) {\n            obs.next(preserveSnapshot ? snapshot : utils.unwrapMapFn(snapshot));\n        }, function (err) {\n            if (err) {\n                obs.error(err);\n                obs.complete();\n            }\n        });\n        return function () { return ref.off('value', fn); };\n    }, ref);\n    return observeOn.call(objectObservable, new ZoneScheduler(Zone.current));\n}\n//# sourceMappingURL=firebase_object_factory.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/angularfire2/database-deprecated/firebase_object_factory.js\n// module id = null\n// module chunks = ","import { NgModule } from '@angular/core';\nimport 'firebase/database';\nimport { AngularFireModule, FirebaseApp } from 'angularfire2';\nimport { AngularFireDatabase } from './database';\nexport function _getAngularFireDatabase(app) {\n    return new AngularFireDatabase(app);\n}\nexport var AngularFireDatabaseProvider = {\n    provide: AngularFireDatabase,\n    useFactory: _getAngularFireDatabase,\n    deps: [FirebaseApp]\n};\nexport var DATABASE_PROVIDERS = [\n    AngularFireDatabaseProvider,\n];\nvar AngularFireDatabaseModule = (function () {\n    function AngularFireDatabaseModule() {\n    }\n    AngularFireDatabaseModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [AngularFireModule],\n                    providers: [DATABASE_PROVIDERS]\n                },] },\n    ];\n    AngularFireDatabaseModule.ctorParameters = function () { return []; };\n    return AngularFireDatabaseModule;\n}());\nexport { AngularFireDatabaseModule };\n//# sourceMappingURL=database.module.js.map\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angularfire2/database-deprecated/database.module.js","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Observable } from 'rxjs/Observable';\nimport 'firebase/database';\nimport * as utils from './utils';\nvar FirebaseListObservable = (function (_super) {\n    __extends(FirebaseListObservable, _super);\n    function FirebaseListObservable($ref, subscribe) {\n        var _this = _super.call(this, subscribe) || this;\n        _this.$ref = $ref;\n        return _this;\n    }\n    FirebaseListObservable.prototype.lift = function (operator) {\n        var observable = new FirebaseListObservable(this.$ref);\n        observable.source = this;\n        observable.operator = operator;\n        observable.$ref = this.$ref;\n        return observable;\n    };\n    FirebaseListObservable.prototype.push = function (val) {\n        if (!this.$ref) {\n            throw new Error('No ref specified for this Observable!');\n        }\n        return this.$ref.ref.push(val);\n    };\n    FirebaseListObservable.prototype.set = function (item, value) {\n        var _this = this;\n        return this._checkOperationCases(item, {\n            stringCase: function () { return _this.$ref.ref.child(item).set(value); },\n            firebaseCase: function () { return item.set(value); },\n            snapshotCase: function () { return item.ref.set(value); },\n            unwrappedSnapshotCase: function () { return _this.$ref.ref.child(item.$key).set(value); }\n        });\n    };\n    FirebaseListObservable.prototype.update = function (item, value) {\n        var _this = this;\n        return this._checkOperationCases(item, {\n            stringCase: function () { return _this.$ref.ref.child(item).update(value); },\n            firebaseCase: function () { return item.update(value); },\n            snapshotCase: function () { return item.ref.update(value); },\n            unwrappedSnapshotCase: function () { return _this.$ref.ref.child(item.$key).update(value); }\n        });\n    };\n    FirebaseListObservable.prototype.remove = function (item) {\n        var _this = this;\n        if (!item) {\n            return this.$ref.ref.remove();\n        }\n        return this._checkOperationCases(item, {\n            stringCase: function () { return _this.$ref.ref.child(item).remove(); },\n            firebaseCase: function () { return item.remove(); },\n            snapshotCase: function () { return item.ref.remove(); },\n            unwrappedSnapshotCase: function () { return _this.$ref.ref.child(item.$key).remove(); }\n        });\n    };\n    FirebaseListObservable.prototype._checkOperationCases = function (item, cases) {\n        if (utils.isString(item)) {\n            return cases.stringCase();\n        }\n        else if (utils.isFirebaseRef(item)) {\n            return cases.firebaseCase();\n        }\n        else if (utils.isFirebaseDataSnapshot(item)) {\n            return cases.snapshotCase();\n        }\n        else if (utils.isAFUnwrappedSnapshot(item)) {\n            return cases.unwrappedSnapshotCase();\n        }\n        throw new Error(\"Method requires a key, snapshot, reference, or unwrapped snapshot. Got: \" + typeof item);\n    };\n    return FirebaseListObservable;\n}(Observable));\nexport { FirebaseListObservable };\n//# sourceMappingURL=firebase_list_observable.js.map\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angularfire2/database-deprecated/firebase_list_observable.js","export var OrderByOptions;\n(function (OrderByOptions) {\n    OrderByOptions[OrderByOptions[\"Child\"] = 0] = \"Child\";\n    OrderByOptions[OrderByOptions[\"Key\"] = 1] = \"Key\";\n    OrderByOptions[OrderByOptions[\"Value\"] = 2] = \"Value\";\n    OrderByOptions[OrderByOptions[\"Priority\"] = 3] = \"Priority\";\n})(OrderByOptions || (OrderByOptions = {}));\nexport var LimitToOptions;\n(function (LimitToOptions) {\n    LimitToOptions[LimitToOptions[\"First\"] = 0] = \"First\";\n    LimitToOptions[LimitToOptions[\"Last\"] = 1] = \"Last\";\n})(LimitToOptions || (LimitToOptions = {}));\nexport var QueryOptions;\n(function (QueryOptions) {\n    QueryOptions[QueryOptions[\"EqualTo\"] = 0] = \"EqualTo\";\n    QueryOptions[QueryOptions[\"StartAt\"] = 1] = \"StartAt\";\n    QueryOptions[QueryOptions[\"EndAt\"] = 2] = \"EndAt\";\n})(QueryOptions || (QueryOptions = {}));\n//# sourceMappingURL=interfaces.js.map\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angularfire2/database-deprecated/interfaces.js","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Observable } from 'rxjs/Observable';\nimport 'firebase/database';\nvar FirebaseObjectObservable = (function (_super) {\n    __extends(FirebaseObjectObservable, _super);\n    function FirebaseObjectObservable(subscribe, $ref) {\n        var _this = _super.call(this, subscribe) || this;\n        _this.$ref = $ref;\n        return _this;\n    }\n    FirebaseObjectObservable.prototype.lift = function (operator) {\n        var observable = new FirebaseObjectObservable();\n        observable.source = this;\n        observable.operator = operator;\n        observable.$ref = this.$ref;\n        return observable;\n    };\n    FirebaseObjectObservable.prototype.set = function (value) {\n        if (!this.$ref) {\n            throw new Error('No ref specified for this Observable!');\n        }\n        return this.$ref.set(value);\n    };\n    FirebaseObjectObservable.prototype.update = function (value) {\n        if (!this.$ref) {\n            throw new Error('No ref specified for this Observable!');\n        }\n        return this.$ref.update(value);\n    };\n    FirebaseObjectObservable.prototype.remove = function () {\n        if (!this.$ref) {\n            throw new Error('No ref specified for this Observable!');\n        }\n        return this.$ref.remove();\n    };\n    return FirebaseObjectObservable;\n}(Observable));\nexport { FirebaseObjectObservable };\n//# sourceMappingURL=firebase_object_observable.js.map\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angularfire2/database-deprecated/firebase_object_observable.js","import 'firebase/database';\nimport { Injectable } from '@angular/core';\nimport { FirebaseApp } from 'angularfire2';\nimport { FirebaseListFactory } from './firebase_list_factory';\nimport { FirebaseObjectFactory } from './firebase_object_factory';\nimport * as utils from './utils';\nvar AngularFireDatabase = (function () {\n    function AngularFireDatabase(app) {\n        this.app = app;\n        this.database = app.database();\n    }\n    AngularFireDatabase.prototype.list = function (pathOrRef, opts) {\n        var ref = utils.getRef(this.app, pathOrRef);\n        return FirebaseListFactory(ref, opts);\n    };\n    AngularFireDatabase.prototype.object = function (pathOrRef, opts) {\n        var ref = utils.getRef(this.app, pathOrRef);\n        return FirebaseObjectFactory(ref, opts);\n    };\n    AngularFireDatabase.decorators = [\n        { type: Injectable },\n    ];\n    AngularFireDatabase.ctorParameters = function () { return [\n        { type: FirebaseApp, },\n    ]; };\n    return AngularFireDatabase;\n}());\nexport { AngularFireDatabase };\n//# sourceMappingURL=database.js.map\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angularfire2/database-deprecated/database.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"../core/util/util\");\nvar parser_1 = require(\"../core/util/libs/parser\");\nvar Path_1 = require(\"../core/util/Path\");\nvar Reference_1 = require(\"./Reference\");\nvar Repo_1 = require(\"../core/Repo\");\nvar RepoManager_1 = require(\"../core/RepoManager\");\nvar util_2 = require(\"@firebase/util\");\nvar validation_1 = require(\"../core/util/validation\");\n/**\n * Class representing a firebase database.\n * @implements {FirebaseService}\n */\nvar Database = /** @class */ (function () {\n    /**\n     * The constructor should not be called by users of our public API.\n     * @param {!Repo} repo_\n     */\n    function Database(repo_) {\n        this.repo_ = repo_;\n        if (!(repo_ instanceof Repo_1.Repo)) {\n            util_1.fatal(\"Don't call new Database() directly - please use firebase.database().\");\n        }\n        /** @type {Reference} */\n        this.root_ = new Reference_1.Reference(repo_, Path_1.Path.Empty);\n        this.INTERNAL = new DatabaseInternals(this);\n    }\n    Object.defineProperty(Database.prototype, \"app\", {\n        get: function () {\n            return this.repo_.app;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns a reference to the root or the path specified in opt_pathString.\n     * @param {string=} pathString\n     * @return {!Reference} Firebase reference.\n     */\n    Database.prototype.ref = function (pathString) {\n        this.checkDeleted_('ref');\n        util_2.validateArgCount('database.ref', 0, 1, arguments.length);\n        return pathString !== undefined ? this.root_.child(pathString) : this.root_;\n    };\n    /**\n     * Returns a reference to the root or the path specified in url.\n     * We throw a exception if the url is not in the same domain as the\n     * current repo.\n     * @param {string} url\n     * @return {!Reference} Firebase reference.\n     */\n    Database.prototype.refFromURL = function (url) {\n        /** @const {string} */\n        var apiName = 'database.refFromURL';\n        this.checkDeleted_(apiName);\n        util_2.validateArgCount(apiName, 1, 1, arguments.length);\n        var parsedURL = parser_1.parseRepoInfo(url);\n        validation_1.validateUrl(apiName, 1, parsedURL);\n        var repoInfo = parsedURL.repoInfo;\n        if (repoInfo.host !== this.repo_.repoInfo_.host) {\n            util_1.fatal(apiName +\n                ': Host name does not match the current database: ' +\n                '(found ' +\n                repoInfo.host +\n                ' but expected ' +\n                this.repo_.repoInfo_.host +\n                ')');\n        }\n        return this.ref(parsedURL.path.toString());\n    };\n    /**\n     * @param {string} apiName\n     */\n    Database.prototype.checkDeleted_ = function (apiName) {\n        if (this.repo_ === null) {\n            util_1.fatal('Cannot call ' + apiName + ' on a deleted database.');\n        }\n    };\n    // Make individual repo go offline.\n    Database.prototype.goOffline = function () {\n        util_2.validateArgCount('database.goOffline', 0, 0, arguments.length);\n        this.checkDeleted_('goOffline');\n        this.repo_.interrupt();\n    };\n    Database.prototype.goOnline = function () {\n        util_2.validateArgCount('database.goOnline', 0, 0, arguments.length);\n        this.checkDeleted_('goOnline');\n        this.repo_.resume();\n    };\n    Database.ServerValue = {\n        TIMESTAMP: {\n            '.sv': 'timestamp'\n        }\n    };\n    return Database;\n}());\nexports.Database = Database;\nvar DatabaseInternals = /** @class */ (function () {\n    /** @param {!Database} database */\n    function DatabaseInternals(database) {\n        this.database = database;\n    }\n    /** @return {Promise<void>} */\n    DatabaseInternals.prototype.delete = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                this.database.checkDeleted_('delete');\n                RepoManager_1.RepoManager.getInstance().deleteRepo(this.database.repo_);\n                this.database.repo_ = null;\n                this.database.root_ = null;\n                this.database.INTERNAL = null;\n                this.database = null;\n                return [2 /*return*/];\n            });\n        });\n    };\n    return DatabaseInternals;\n}());\nexports.DatabaseInternals = DatabaseInternals;\n\n//# sourceMappingURL=Database.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/api/Database.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Path_1 = require(\"../Path\");\nvar RepoInfo_1 = require(\"../../RepoInfo\");\nvar util_1 = require(\"../util\");\n/**\n * @param {!string} pathString\n * @return {string}\n */\nfunction decodePath(pathString) {\n    var pathStringDecoded = '';\n    var pieces = pathString.split('/');\n    for (var i = 0; i < pieces.length; i++) {\n        if (pieces[i].length > 0) {\n            var piece = pieces[i];\n            try {\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n            }\n            catch (e) { }\n            pathStringDecoded += '/' + piece;\n        }\n    }\n    return pathStringDecoded;\n}\n/**\n * @param {!string} queryString\n * @return {!{[key:string]:string}} key value hash\n */\nfunction decodeQuery(queryString) {\n    var results = {};\n    if (queryString.startsWith('?')) {\n        queryString = queryString.substring(1);\n    }\n    for (var _i = 0, _a = queryString.split('&'); _i < _a.length; _i++) {\n        var segment = _a[_i];\n        if (segment.length === 0) {\n            continue;\n        }\n        var kv = segment.split('=');\n        if (kv.length === 2) {\n            results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n        }\n        else {\n            util_1.warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\n        }\n    }\n    return results;\n}\n/**\n *\n * @param {!string} dataURL\n * @return {{repoInfo: !RepoInfo, path: !Path}}\n */\nexports.parseRepoInfo = function (dataURL) {\n    var parsedUrl = exports.parseURL(dataURL), namespace = parsedUrl.subdomain;\n    if (parsedUrl.domain === 'firebase') {\n        util_1.fatal(parsedUrl.host +\n            ' is no longer supported. ' +\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\n    }\n    // Catch common error of uninitialized namespace value.\n    if ((!namespace || namespace == 'undefined') &&\n        parsedUrl.domain !== 'localhost') {\n        util_1.fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\n    }\n    if (!parsedUrl.secure) {\n        util_1.warnIfPageIsSecure();\n    }\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n    return {\n        repoInfo: new RepoInfo_1.RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly),\n        path: new Path_1.Path(parsedUrl.pathString)\n    };\n};\n/**\n *\n * @param {!string} dataURL\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string}}\n */\nexports.parseURL = function (dataURL) {\n    // Default to empty strings in the event of a malformed string.\n    var host = '', domain = '', subdomain = '', pathString = '';\n    // Always default to SSL, unless otherwise specified.\n    var secure = true, scheme = 'https', port = 443;\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\n    if (typeof dataURL === 'string') {\n        // Parse scheme.\n        var colonInd = dataURL.indexOf('//');\n        if (colonInd >= 0) {\n            scheme = dataURL.substring(0, colonInd - 1);\n            dataURL = dataURL.substring(colonInd + 2);\n        }\n        // Parse host, path, and query string.\n        var slashInd = dataURL.indexOf('/');\n        if (slashInd === -1) {\n            slashInd = dataURL.length;\n        }\n        var questionMarkInd = dataURL.indexOf('?');\n        if (questionMarkInd === -1) {\n            questionMarkInd = dataURL.length;\n        }\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n        if (slashInd < questionMarkInd) {\n            // For pathString, questionMarkInd will always come after slashInd\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n        }\n        var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\n        // If we have a port, use scheme for determining if it's secure.\n        colonInd = host.indexOf(':');\n        if (colonInd >= 0) {\n            secure = scheme === 'https' || scheme === 'wss';\n            port = parseInt(host.substring(colonInd + 1), 10);\n        }\n        else {\n            colonInd = dataURL.length;\n        }\n        var parts = host.split('.');\n        if (parts.length === 3) {\n            // Normalize namespaces to lowercase to share storage / connection.\n            domain = parts[1];\n            subdomain = parts[0].toLowerCase();\n        }\n        else if (parts.length === 2) {\n            domain = parts[0];\n        }\n        else if (parts[0].slice(0, colonInd).toLowerCase() === 'localhost') {\n            domain = 'localhost';\n        }\n        // Support `ns` query param if subdomain not already set\n        if (subdomain === '' && 'ns' in queryParams) {\n            subdomain = queryParams['ns'];\n        }\n    }\n    return {\n        host: host,\n        port: port,\n        domain: domain,\n        subdomain: subdomain,\n        secure: secure,\n        scheme: scheme,\n        pathString: pathString\n    };\n};\n\n//# sourceMappingURL=parser.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/util/libs/parser.js\n// module id = 393\n// module chunks = 0 1","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"@firebase/util\");\nvar storage_1 = require(\"./storage/storage\");\nvar Constants_1 = require(\"../realtime/Constants\");\n/**\n * A class that holds metadata about a Repo object\n *\n * @constructor\n */\nvar RepoInfo = /** @class */ (function () {\n    /**\n     * @param {string} host Hostname portion of the url for the repo\n     * @param {boolean} secure Whether or not this repo is accessed over ssl\n     * @param {string} namespace The namespace represented by the repo\n     * @param {boolean} webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\n     * @param {string=} persistenceKey Override the default session persistence storage key\n     */\n    function RepoInfo(host, secure, namespace, webSocketOnly, persistenceKey) {\n        if (persistenceKey === void 0) { persistenceKey = ''; }\n        this.secure = secure;\n        this.namespace = namespace;\n        this.webSocketOnly = webSocketOnly;\n        this.persistenceKey = persistenceKey;\n        this.host = host.toLowerCase();\n        this.domain = this.host.substr(this.host.indexOf('.') + 1);\n        this.internalHost = storage_1.PersistentStorage.get('host:' + host) || this.host;\n    }\n    RepoInfo.prototype.needsQueryParam = function () {\n        return this.host !== this.internalHost || this.isCustomHost();\n    };\n    RepoInfo.prototype.isCacheableHost = function () {\n        return this.internalHost.substr(0, 2) === 's-';\n    };\n    RepoInfo.prototype.isDemoHost = function () {\n        return this.domain === 'firebaseio-demo.com';\n    };\n    RepoInfo.prototype.isCustomHost = function () {\n        return (this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com');\n    };\n    RepoInfo.prototype.updateHost = function (newHost) {\n        if (newHost !== this.internalHost) {\n            this.internalHost = newHost;\n            if (this.isCacheableHost()) {\n                storage_1.PersistentStorage.set('host:' + this.host, this.internalHost);\n            }\n        }\n    };\n    /**\n     * Returns the websocket URL for this repo\n     * @param {string} type of connection\n     * @param {Object} params list\n     * @return {string} The URL for this repo\n     */\n    RepoInfo.prototype.connectionURL = function (type, params) {\n        util_1.assert(typeof type === 'string', 'typeof type must == string');\n        util_1.assert(typeof params === 'object', 'typeof params must == object');\n        var connURL;\n        if (type === Constants_1.WEBSOCKET) {\n            connURL =\n                (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\n        }\n        else if (type === Constants_1.LONG_POLLING) {\n            connURL =\n                (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\n        }\n        else {\n            throw new Error('Unknown connection type: ' + type);\n        }\n        if (this.needsQueryParam()) {\n            params['ns'] = this.namespace;\n        }\n        var pairs = [];\n        util_2.forEach(params, function (key, value) {\n            pairs.push(key + '=' + value);\n        });\n        return connURL + pairs.join('&');\n    };\n    /** @return {string} */\n    RepoInfo.prototype.toString = function () {\n        var str = this.toURLString();\n        if (this.persistenceKey) {\n            str += '<' + this.persistenceKey + '>';\n        }\n        return str;\n    };\n    /** @return {string} */\n    RepoInfo.prototype.toURLString = function () {\n        return (this.secure ? 'https://' : 'http://') + this.host;\n    };\n    return RepoInfo;\n}());\nexports.RepoInfo = RepoInfo;\n\n//# sourceMappingURL=RepoInfo.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/RepoInfo.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar validation_1 = require(\"../core/util/validation\");\nvar util_2 = require(\"../core/util/util\");\nvar util_3 = require(\"@firebase/util\");\n/**\n * @constructor\n */\nvar OnDisconnect = /** @class */ (function () {\n    /**\n     * @param {!Repo} repo_\n     * @param {!Path} path_\n     */\n    function OnDisconnect(repo_, path_) {\n        this.repo_ = repo_;\n        this.path_ = path_;\n    }\n    /**\n     * @param {function(?Error)=} onComplete\n     * @return {!firebase.Promise}\n     */\n    OnDisconnect.prototype.cancel = function (onComplete) {\n        util_1.validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\n        util_1.validateCallback('OnDisconnect.cancel', 1, onComplete, true);\n        var deferred = new util_3.Deferred();\n        this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\n     * @param {function(?Error)=} onComplete\n     * @return {!firebase.Promise}\n     */\n    OnDisconnect.prototype.remove = function (onComplete) {\n        util_1.validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\n        validation_1.validateWritablePath('OnDisconnect.remove', this.path_);\n        util_1.validateCallback('OnDisconnect.remove', 1, onComplete, true);\n        var deferred = new util_3.Deferred();\n        this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\n     * @param {*} value\n     * @param {function(?Error)=} onComplete\n     * @return {!firebase.Promise}\n     */\n    OnDisconnect.prototype.set = function (value, onComplete) {\n        util_1.validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\n        validation_1.validateWritablePath('OnDisconnect.set', this.path_);\n        validation_1.validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\n        util_1.validateCallback('OnDisconnect.set', 2, onComplete, true);\n        var deferred = new util_3.Deferred();\n        this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\n     * @param {*} value\n     * @param {number|string|null} priority\n     * @param {function(?Error)=} onComplete\n     * @return {!firebase.Promise}\n     */\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\n        util_1.validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\n        validation_1.validateWritablePath('OnDisconnect.setWithPriority', this.path_);\n        validation_1.validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\n        validation_1.validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\n        util_1.validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\n        var deferred = new util_3.Deferred();\n        this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\n     * @param {!Object} objectToMerge\n     * @param {function(?Error)=} onComplete\n     * @return {!firebase.Promise}\n     */\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\n        util_1.validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\n        validation_1.validateWritablePath('OnDisconnect.update', this.path_);\n        if (Array.isArray(objectToMerge)) {\n            var newObjectToMerge = {};\n            for (var i = 0; i < objectToMerge.length; ++i) {\n                newObjectToMerge['' + i] = objectToMerge[i];\n            }\n            objectToMerge = newObjectToMerge;\n            util_2.warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\n        }\n        validation_1.validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\n        util_1.validateCallback('OnDisconnect.update', 2, onComplete, true);\n        var deferred = new util_3.Deferred();\n        this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    return OnDisconnect;\n}());\nexports.OnDisconnect = OnDisconnect;\n\n//# sourceMappingURL=onDisconnect.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/api/onDisconnect.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar KeyIndex_1 = require(\"../core/snap/indexes/KeyIndex\");\nvar PriorityIndex_1 = require(\"../core/snap/indexes/PriorityIndex\");\nvar ValueIndex_1 = require(\"../core/snap/indexes/ValueIndex\");\nvar PathIndex_1 = require(\"../core/snap/indexes/PathIndex\");\nvar util_2 = require(\"../core/util/util\");\nvar Path_1 = require(\"../core/util/Path\");\nvar validation_1 = require(\"../core/util/validation\");\nvar util_3 = require(\"@firebase/util\");\nvar EventRegistration_1 = require(\"../core/view/EventRegistration\");\nvar util_4 = require(\"@firebase/util\");\nvar __referenceConstructor;\n/**\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\n *\n * Since every Firebase reference is a query, Firebase inherits from this object.\n */\nvar Query = /** @class */ (function () {\n    function Query(repo, path, queryParams_, orderByCalled_) {\n        this.repo = repo;\n        this.path = path;\n        this.queryParams_ = queryParams_;\n        this.orderByCalled_ = orderByCalled_;\n    }\n    Object.defineProperty(Query, \"__referenceConstructor\", {\n        get: function () {\n            util_1.assert(__referenceConstructor, 'Reference.ts has not been loaded');\n            return __referenceConstructor;\n        },\n        set: function (val) {\n            __referenceConstructor = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Validates start/end values for queries.\n     * @param {!QueryParams} params\n     * @private\n     */\n    Query.validateQueryEndpoints_ = function (params) {\n        var startNode = null;\n        var endNode = null;\n        if (params.hasStart()) {\n            startNode = params.getIndexStartValue();\n        }\n        if (params.hasEnd()) {\n            endNode = params.getIndexEndValue();\n        }\n        if (params.getIndex() === KeyIndex_1.KEY_INDEX) {\n            var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\n                'startAt(), endAt(), or equalTo().';\n            var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), endAt(),' +\n                'or equalTo() must be a string.';\n            if (params.hasStart()) {\n                var startName = params.getIndexStartName();\n                if (startName != util_2.MIN_NAME) {\n                    throw new Error(tooManyArgsError);\n                }\n                else if (typeof startNode !== 'string') {\n                    throw new Error(wrongArgTypeError);\n                }\n            }\n            if (params.hasEnd()) {\n                var endName = params.getIndexEndName();\n                if (endName != util_2.MAX_NAME) {\n                    throw new Error(tooManyArgsError);\n                }\n                else if (typeof endNode !== 'string') {\n                    throw new Error(wrongArgTypeError);\n                }\n            }\n        }\n        else if (params.getIndex() === PriorityIndex_1.PRIORITY_INDEX) {\n            if ((startNode != null && !validation_1.isValidPriority(startNode)) ||\n                (endNode != null && !validation_1.isValidPriority(endNode))) {\n                throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\n                    'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');\n            }\n        }\n        else {\n            util_1.assert(params.getIndex() instanceof PathIndex_1.PathIndex ||\n                params.getIndex() === ValueIndex_1.VALUE_INDEX, 'unknown index type.');\n            if ((startNode != null && typeof startNode === 'object') ||\n                (endNode != null && typeof endNode === 'object')) {\n                throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' +\n                    'an object.');\n            }\n        }\n    };\n    /**\n     * Validates that limit* has been called with the correct combination of parameters\n     * @param {!QueryParams} params\n     * @private\n     */\n    Query.validateLimit_ = function (params) {\n        if (params.hasStart() &&\n            params.hasEnd() &&\n            params.hasLimit() &&\n            !params.hasAnchoredLimit()) {\n            throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\");\n        }\n    };\n    /**\n     * Validates that no other order by call has been made\n     * @param {!string} fnName\n     * @private\n     */\n    Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\n        if (this.orderByCalled_ === true) {\n            throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n        }\n    };\n    /**\n     * @return {!QueryParams}\n     */\n    Query.prototype.getQueryParams = function () {\n        return this.queryParams_;\n    };\n    /**\n     * @return {!Reference}\n     */\n    Query.prototype.getRef = function () {\n        util_3.validateArgCount('Query.ref', 0, 0, arguments.length);\n        // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\n        // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\n        // method gets called.\n        return new Query.__referenceConstructor(this.repo, this.path);\n    };\n    /**\n     * @param {!string} eventType\n     * @param {!function(DataSnapshot, string=)} callback\n     * @param {(function(Error)|Object)=} cancelCallbackOrContext\n     * @param {Object=} context\n     * @return {!function(DataSnapshot, string=)}\n     */\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\n        util_3.validateArgCount('Query.on', 2, 4, arguments.length);\n        validation_1.validateEventType('Query.on', 1, eventType, false);\n        util_3.validateCallback('Query.on', 2, callback, false);\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\n        if (eventType === 'value') {\n            this.onValueEvent(callback, ret.cancel, ret.context);\n        }\n        else {\n            var callbacks = {};\n            callbacks[eventType] = callback;\n            this.onChildEvent(callbacks, ret.cancel, ret.context);\n        }\n        return callback;\n    };\n    /**\n     * @param {!function(!DataSnapshot)} callback\n     * @param {?function(Error)} cancelCallback\n     * @param {?Object} context\n     * @protected\n     */\n    Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\n        var container = new EventRegistration_1.ValueEventRegistration(callback, cancelCallback || null, context || null);\n        this.repo.addEventCallbackForQuery(this, container);\n    };\n    /**\n     * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\n     * @param {?function(Error)} cancelCallback\n     * @param {?Object} context\n     * @protected\n     */\n    Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\n        var container = new EventRegistration_1.ChildEventRegistration(callbacks, cancelCallback, context);\n        this.repo.addEventCallbackForQuery(this, container);\n    };\n    /**\n     * @param {string=} eventType\n     * @param {(function(!DataSnapshot, ?string=))=} callback\n     * @param {Object=} context\n     */\n    Query.prototype.off = function (eventType, callback, context) {\n        util_3.validateArgCount('Query.off', 0, 3, arguments.length);\n        validation_1.validateEventType('Query.off', 1, eventType, true);\n        util_3.validateCallback('Query.off', 2, callback, true);\n        util_3.validateContextObject('Query.off', 3, context, true);\n        var container = null;\n        var callbacks = null;\n        if (eventType === 'value') {\n            var valueCallback = callback || null;\n            container = new EventRegistration_1.ValueEventRegistration(valueCallback, null, context || null);\n        }\n        else if (eventType) {\n            if (callback) {\n                callbacks = {};\n                callbacks[eventType] = callback;\n            }\n            container = new EventRegistration_1.ChildEventRegistration(callbacks, null, context || null);\n        }\n        this.repo.removeEventCallbackForQuery(this, container);\n    };\n    /**\n     * Attaches a listener, waits for the first event, and then removes the listener\n     * @param {!string} eventType\n     * @param {!function(!DataSnapshot, string=)} userCallback\n     * @param cancelOrContext\n     * @param context\n     * @return {!firebase.Promise}\n     */\n    Query.prototype.once = function (eventType, userCallback, cancelOrContext, context) {\n        var _this = this;\n        util_3.validateArgCount('Query.once', 1, 4, arguments.length);\n        validation_1.validateEventType('Query.once', 1, eventType, false);\n        util_3.validateCallback('Query.once', 2, userCallback, true);\n        var ret = Query.getCancelAndContextArgs_('Query.once', cancelOrContext, context);\n        // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\n        // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\n        // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\n        // against the Promise specification.\n        var firstCall = true;\n        var deferred = new util_4.Deferred();\n        // A dummy error handler in case a user wasn't expecting promises\n        deferred.promise.catch(function () { });\n        var onceCallback = function (snapshot) {\n            // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\n            // triggers multiple events (e.g. child_added or child_changed).\n            if (firstCall) {\n                firstCall = false;\n                _this.off(eventType, onceCallback);\n                if (userCallback) {\n                    userCallback.bind(ret.context)(snapshot);\n                }\n                deferred.resolve(snapshot);\n            }\n        };\n        this.on(eventType, onceCallback, \n        /*cancel=*/ function (err) {\n            _this.off(eventType, onceCallback);\n            if (ret.cancel)\n                ret.cancel.bind(ret.context)(err);\n            deferred.reject(err);\n        });\n        return deferred.promise;\n    };\n    /**\n     * Set a limit and anchor it to the start of the window.\n     * @param {!number} limit\n     * @return {!Query}\n     */\n    Query.prototype.limitToFirst = function (limit) {\n        util_3.validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\n        if (typeof limit !== 'number' ||\n            Math.floor(limit) !== limit ||\n            limit <= 0) {\n            throw new Error('Query.limitToFirst: First argument must be a positive integer.');\n        }\n        if (this.queryParams_.hasLimit()) {\n            throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' +\n                'limitToFirst, or limitToLast).');\n        }\n        return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);\n    };\n    /**\n     * Set a limit and anchor it to the end of the window.\n     * @param {!number} limit\n     * @return {!Query}\n     */\n    Query.prototype.limitToLast = function (limit) {\n        util_3.validateArgCount('Query.limitToLast', 1, 1, arguments.length);\n        if (typeof limit !== 'number' ||\n            Math.floor(limit) !== limit ||\n            limit <= 0) {\n            throw new Error('Query.limitToLast: First argument must be a positive integer.');\n        }\n        if (this.queryParams_.hasLimit()) {\n            throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' +\n                'limitToFirst, or limitToLast).');\n        }\n        return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);\n    };\n    /**\n     * Given a child path, return a new query ordered by the specified grandchild path.\n     * @param {!string} path\n     * @return {!Query}\n     */\n    Query.prototype.orderByChild = function (path) {\n        util_3.validateArgCount('Query.orderByChild', 1, 1, arguments.length);\n        if (path === '$key') {\n            throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\n        }\n        else if (path === '$priority') {\n            throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\n        }\n        else if (path === '$value') {\n            throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\n        }\n        validation_1.validatePathString('Query.orderByChild', 1, path, false);\n        this.validateNoPreviousOrderByCall_('Query.orderByChild');\n        var parsedPath = new Path_1.Path(path);\n        if (parsedPath.isEmpty()) {\n            throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\n        }\n        var index = new PathIndex_1.PathIndex(parsedPath);\n        var newParams = this.queryParams_.orderBy(index);\n        Query.validateQueryEndpoints_(newParams);\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\n    };\n    /**\n     * Return a new query ordered by the KeyIndex\n     * @return {!Query}\n     */\n    Query.prototype.orderByKey = function () {\n        util_3.validateArgCount('Query.orderByKey', 0, 0, arguments.length);\n        this.validateNoPreviousOrderByCall_('Query.orderByKey');\n        var newParams = this.queryParams_.orderBy(KeyIndex_1.KEY_INDEX);\n        Query.validateQueryEndpoints_(newParams);\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\n    };\n    /**\n     * Return a new query ordered by the PriorityIndex\n     * @return {!Query}\n     */\n    Query.prototype.orderByPriority = function () {\n        util_3.validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\n        this.validateNoPreviousOrderByCall_('Query.orderByPriority');\n        var newParams = this.queryParams_.orderBy(PriorityIndex_1.PRIORITY_INDEX);\n        Query.validateQueryEndpoints_(newParams);\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\n    };\n    /**\n     * Return a new query ordered by the ValueIndex\n     * @return {!Query}\n     */\n    Query.prototype.orderByValue = function () {\n        util_3.validateArgCount('Query.orderByValue', 0, 0, arguments.length);\n        this.validateNoPreviousOrderByCall_('Query.orderByValue');\n        var newParams = this.queryParams_.orderBy(ValueIndex_1.VALUE_INDEX);\n        Query.validateQueryEndpoints_(newParams);\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\n    };\n    /**\n     * @param {number|string|boolean|null} value\n     * @param {?string=} name\n     * @return {!Query}\n     */\n    Query.prototype.startAt = function (value, name) {\n        if (value === void 0) { value = null; }\n        util_3.validateArgCount('Query.startAt', 0, 2, arguments.length);\n        validation_1.validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\n        validation_1.validateKey('Query.startAt', 2, name, true);\n        var newParams = this.queryParams_.startAt(value, name);\n        Query.validateLimit_(newParams);\n        Query.validateQueryEndpoints_(newParams);\n        if (this.queryParams_.hasStart()) {\n            throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' +\n                'or equalTo).');\n        }\n        // Calling with no params tells us to start at the beginning.\n        if (value === undefined) {\n            value = null;\n            name = null;\n        }\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n    };\n    /**\n     * @param {number|string|boolean|null} value\n     * @param {?string=} name\n     * @return {!Query}\n     */\n    Query.prototype.endAt = function (value, name) {\n        if (value === void 0) { value = null; }\n        util_3.validateArgCount('Query.endAt', 0, 2, arguments.length);\n        validation_1.validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\n        validation_1.validateKey('Query.endAt', 2, name, true);\n        var newParams = this.queryParams_.endAt(value, name);\n        Query.validateLimit_(newParams);\n        Query.validateQueryEndpoints_(newParams);\n        if (this.queryParams_.hasEnd()) {\n            throw new Error('Query.endAt: Ending point was already set (by another call to endAt or ' +\n                'equalTo).');\n        }\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n    };\n    /**\n     * Load the selection of children with exactly the specified value, and, optionally,\n     * the specified name.\n     * @param {number|string|boolean|null} value\n     * @param {string=} name\n     * @return {!Query}\n     */\n    Query.prototype.equalTo = function (value, name) {\n        util_3.validateArgCount('Query.equalTo', 1, 2, arguments.length);\n        validation_1.validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\n        validation_1.validateKey('Query.equalTo', 2, name, true);\n        if (this.queryParams_.hasStart()) {\n            throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or ' +\n                'equalTo).');\n        }\n        if (this.queryParams_.hasEnd()) {\n            throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or ' +\n                'equalTo).');\n        }\n        return this.startAt(value, name).endAt(value, name);\n    };\n    /**\n     * @return {!string} URL for this location.\n     */\n    Query.prototype.toString = function () {\n        util_3.validateArgCount('Query.toString', 0, 0, arguments.length);\n        return this.repo.toString() + this.path.toUrlEncodedString();\n    };\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n    // for end-users.\n    Query.prototype.toJSON = function () {\n        // An optional spacer argument is unnecessary for a string.\n        util_3.validateArgCount('Query.toJSON', 0, 1, arguments.length);\n        return this.toString();\n    };\n    /**\n     * An object representation of the query parameters used by this Query.\n     * @return {!Object}\n     */\n    Query.prototype.queryObject = function () {\n        return this.queryParams_.getQueryObject();\n    };\n    /**\n     * @return {!string}\n     */\n    Query.prototype.queryIdentifier = function () {\n        var obj = this.queryObject();\n        var id = util_2.ObjectToUniqueKey(obj);\n        return id === '{}' ? 'default' : id;\n    };\n    /**\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\n     * @param {Query} other\n     * @return {boolean}\n     */\n    Query.prototype.isEqual = function (other) {\n        util_3.validateArgCount('Query.isEqual', 1, 1, arguments.length);\n        if (!(other instanceof Query)) {\n            var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\n            throw new Error(error);\n        }\n        var sameRepo = this.repo === other.repo;\n        var samePath = this.path.equals(other.path);\n        var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\n        return sameRepo && samePath && sameQueryIdentifier;\n    };\n    /**\n     * Helper used by .on and .once to extract the context and or cancel arguments.\n     * @param {!string} fnName The function name (on or once)\n     * @param {(function(Error)|Object)=} cancelOrContext\n     * @param {Object=} context\n     * @return {{cancel: ?function(Error), context: ?Object}}\n     * @private\n     */\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\n        var ret = { cancel: null, context: null };\n        if (cancelOrContext && context) {\n            ret.cancel = cancelOrContext;\n            util_3.validateCallback(fnName, 3, ret.cancel, true);\n            ret.context = context;\n            util_3.validateContextObject(fnName, 4, ret.context, true);\n        }\n        else if (cancelOrContext) {\n            // we have either a cancel callback or a context.\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\n                // it's a context!\n                ret.context = cancelOrContext;\n            }\n            else if (typeof cancelOrContext === 'function') {\n                ret.cancel = cancelOrContext;\n            }\n            else {\n                throw new Error(util_3.errorPrefix(fnName, 3, true) +\n                    ' must either be a cancel callback or a context object.');\n            }\n        }\n        return ret;\n    };\n    Object.defineProperty(Query.prototype, \"ref\", {\n        get: function () {\n            return this.getRef();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Query;\n}());\nexports.Query = Query;\n\n//# sourceMappingURL=Query.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/api/Query.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"../util/util\");\nvar util_3 = require(\"@firebase/util\");\nvar MAX_NODE;\nfunction setMaxNode(val) {\n    MAX_NODE = val;\n}\nexports.setMaxNode = setMaxNode;\n/**\n * @param {(!string|!number)} priority\n * @return {!string}\n */\nexports.priorityHashText = function (priority) {\n    if (typeof priority === 'number')\n        return 'number:' + util_2.doubleToIEEE754String(priority);\n    else\n        return 'string:' + priority;\n};\n/**\n * Validates that a priority snapshot Node is valid.\n *\n * @param {!Node} priorityNode\n */\nexports.validatePriorityNode = function (priorityNode) {\n    if (priorityNode.isLeafNode()) {\n        var val = priorityNode.val();\n        util_1.assert(typeof val === 'string' ||\n            typeof val === 'number' ||\n            (typeof val === 'object' && util_3.contains(val, '.sv')), 'Priority must be a string or number.');\n    }\n    else {\n        util_1.assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\n    }\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n    util_1.assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\n};\n\n//# sourceMappingURL=snap.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/snap/snap.js\n// module id = 397\n// module chunks = 0 1","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Index_1 = require(\"./Index\");\nvar Node_1 = require(\"../Node\");\nvar util_1 = require(\"../../util/util\");\nvar nodeFromJSON_1 = require(\"../nodeFromJSON\");\n/**\n * @constructor\n * @extends {Index}\n * @private\n */\nvar ValueIndex = /** @class */ (function (_super) {\n    tslib_1.__extends(ValueIndex, _super);\n    function ValueIndex() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ValueIndex.prototype.compare = function (a, b) {\n        var indexCmp = a.node.compareTo(b.node);\n        if (indexCmp === 0) {\n            return util_1.nameCompare(a.name, b.name);\n        }\n        else {\n            return indexCmp;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueIndex.prototype.isDefinedOn = function (node) {\n        return true;\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n        return !oldNode.equals(newNode);\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueIndex.prototype.minPost = function () {\n        return Node_1.NamedNode.MIN;\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueIndex.prototype.maxPost = function () {\n        return Node_1.NamedNode.MAX;\n    };\n    /**\n     * @param {*} indexValue\n     * @param {string} name\n     * @return {!NamedNode}\n     */\n    ValueIndex.prototype.makePost = function (indexValue, name) {\n        var valueNode = nodeFromJSON_1.nodeFromJSON(indexValue);\n        return new Node_1.NamedNode(name, valueNode);\n    };\n    /**\n     * @return {!string} String representation for inclusion in a query spec\n     */\n    ValueIndex.prototype.toString = function () {\n        return '.value';\n    };\n    return ValueIndex;\n}(Index_1.Index));\nexports.ValueIndex = ValueIndex;\nexports.VALUE_INDEX = new ValueIndex();\n\n//# sourceMappingURL=ValueIndex.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/snap/indexes/ValueIndex.js\n// module id = 398\n// module chunks = 0 1","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar childSet_1 = require(\"./childSet\");\nvar util_2 = require(\"@firebase/util\");\nvar Node_1 = require(\"./Node\");\nvar PriorityIndex_1 = require(\"./indexes/PriorityIndex\");\nvar KeyIndex_1 = require(\"./indexes/KeyIndex\");\nvar _defaultIndexMap;\nvar fallbackObject = {};\n/**\n *\n * @param {Object.<string, FallbackType|SortedMap.<NamedNode, Node>>} indexes\n * @param {Object.<string, Index>} indexSet\n * @constructor\n */\nvar IndexMap = /** @class */ (function () {\n    function IndexMap(indexes_, indexSet_) {\n        this.indexes_ = indexes_;\n        this.indexSet_ = indexSet_;\n    }\n    Object.defineProperty(IndexMap, \"Default\", {\n        /**\n         * The default IndexMap for nodes without a priority\n         * @type {!IndexMap}\n         * @const\n         */\n        get: function () {\n            util_1.assert(fallbackObject && PriorityIndex_1.PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\n            _defaultIndexMap =\n                _defaultIndexMap ||\n                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PriorityIndex_1.PRIORITY_INDEX });\n            return _defaultIndexMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     * @param {!string} indexKey\n     * @return {?SortedMap.<NamedNode, Node>}\n     */\n    IndexMap.prototype.get = function (indexKey) {\n        var sortedMap = util_2.safeGet(this.indexes_, indexKey);\n        if (!sortedMap)\n            throw new Error('No index defined for ' + indexKey);\n        if (sortedMap === fallbackObject) {\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n            // regular child map\n            return null;\n        }\n        else {\n            return sortedMap;\n        }\n    };\n    /**\n     * @param {!Index} indexDefinition\n     * @return {boolean}\n     */\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\n        return util_2.contains(this.indexSet_, indexDefinition.toString());\n    };\n    /**\n     * @param {!Index} indexDefinition\n     * @param {!SortedMap.<string, !Node>} existingChildren\n     * @return {!IndexMap}\n     */\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\n        util_1.assert(indexDefinition !== KeyIndex_1.KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\n        var childList = [];\n        var sawIndexedValue = false;\n        var iter = existingChildren.getIterator(Node_1.NamedNode.Wrap);\n        var next = iter.getNext();\n        while (next) {\n            sawIndexedValue =\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n            childList.push(next);\n            next = iter.getNext();\n        }\n        var newIndex;\n        if (sawIndexedValue) {\n            newIndex = childSet_1.buildChildSet(childList, indexDefinition.getCompare());\n        }\n        else {\n            newIndex = fallbackObject;\n        }\n        var indexName = indexDefinition.toString();\n        var newIndexSet = util_2.clone(this.indexSet_);\n        newIndexSet[indexName] = indexDefinition;\n        var newIndexes = util_2.clone(this.indexes_);\n        newIndexes[indexName] = newIndex;\n        return new IndexMap(newIndexes, newIndexSet);\n    };\n    /**\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\n     * @param {!NamedNode} namedNode\n     * @param {!SortedMap.<string, !Node>} existingChildren\n     * @return {!IndexMap}\n     */\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\n        var _this = this;\n        var newIndexes = util_2.map(this.indexes_, function (indexedChildren, indexName) {\n            var index = util_2.safeGet(_this.indexSet_, indexName);\n            util_1.assert(index, 'Missing index implementation for ' + indexName);\n            if (indexedChildren === fallbackObject) {\n                // Check to see if we need to index everything\n                if (index.isDefinedOn(namedNode.node)) {\n                    // We need to build this index\n                    var childList = [];\n                    var iter = existingChildren.getIterator(Node_1.NamedNode.Wrap);\n                    var next = iter.getNext();\n                    while (next) {\n                        if (next.name != namedNode.name) {\n                            childList.push(next);\n                        }\n                        next = iter.getNext();\n                    }\n                    childList.push(namedNode);\n                    return childSet_1.buildChildSet(childList, index.getCompare());\n                }\n                else {\n                    // No change, this remains a fallback\n                    return fallbackObject;\n                }\n            }\n            else {\n                var existingSnap = existingChildren.get(namedNode.name);\n                var newChildren = indexedChildren;\n                if (existingSnap) {\n                    newChildren = newChildren.remove(new Node_1.NamedNode(namedNode.name, existingSnap));\n                }\n                return newChildren.insert(namedNode, namedNode.node);\n            }\n        });\n        return new IndexMap(newIndexes, this.indexSet_);\n    };\n    /**\n     * Create a new IndexMap instance with the given value removed\n     * @param {!NamedNode} namedNode\n     * @param {!SortedMap.<string, !Node>} existingChildren\n     * @return {!IndexMap}\n     */\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\n        var newIndexes = util_2.map(this.indexes_, function (indexedChildren) {\n            if (indexedChildren === fallbackObject) {\n                // This is the fallback. Just return it, nothing to do in this case\n                return indexedChildren;\n            }\n            else {\n                var existingSnap = existingChildren.get(namedNode.name);\n                if (existingSnap) {\n                    return indexedChildren.remove(new Node_1.NamedNode(namedNode.name, existingSnap));\n                }\n                else {\n                    // No record of this child\n                    return indexedChildren;\n                }\n            }\n        });\n        return new IndexMap(newIndexes, this.indexSet_);\n    };\n    return IndexMap;\n}());\nexports.IndexMap = IndexMap;\n\n//# sourceMappingURL=IndexMap.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/snap/IndexMap.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SortedMap_1 = require(\"../util/SortedMap\");\nvar SortedMap_2 = require(\"../util/SortedMap\");\nvar LOG_2 = Math.log(2);\n/**\n * @constructor\n */\nvar Base12Num = /** @class */ (function () {\n    /**\n     * @param {number} length\n     */\n    function Base12Num(length) {\n        var logBase2 = function (num) {\n            return parseInt((Math.log(num) / LOG_2), 10);\n        };\n        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };\n        this.count = logBase2(length + 1);\n        this.current_ = this.count - 1;\n        var mask = bitMask(this.count);\n        this.bits_ = (length + 1) & mask;\n    }\n    /**\n     * @return {boolean}\n     */\n    Base12Num.prototype.nextBitIsOne = function () {\n        //noinspection JSBitwiseOperatorUsage\n        var result = !(this.bits_ & (0x1 << this.current_));\n        this.current_--;\n        return result;\n    };\n    return Base12Num;\n}());\n/**\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\n * function\n *\n * Uses the algorithm described in the paper linked here:\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\n *\n * @template K, V\n * @param {Array.<!NamedNode>} childList Unsorted list of children\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\n *                                                        type is not NamedNode\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\n * @return {SortedMap.<K, V>}\n */\nexports.buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\n    childList.sort(cmp);\n    var buildBalancedTree = function (low, high) {\n        var length = high - low;\n        var namedNode;\n        var key;\n        if (length == 0) {\n            return null;\n        }\n        else if (length == 1) {\n            namedNode = childList[low];\n            key = keyFn ? keyFn(namedNode) : namedNode;\n            return new SortedMap_1.LLRBNode(key, namedNode.node, SortedMap_1.LLRBNode.BLACK, null, null);\n        }\n        else {\n            var middle = parseInt((length / 2), 10) + low;\n            var left = buildBalancedTree(low, middle);\n            var right = buildBalancedTree(middle + 1, high);\n            namedNode = childList[middle];\n            key = keyFn ? keyFn(namedNode) : namedNode;\n            return new SortedMap_1.LLRBNode(key, namedNode.node, SortedMap_1.LLRBNode.BLACK, left, right);\n        }\n    };\n    var buildFrom12Array = function (base12) {\n        var node = null;\n        var root = null;\n        var index = childList.length;\n        var buildPennant = function (chunkSize, color) {\n            var low = index - chunkSize;\n            var high = index;\n            index -= chunkSize;\n            var childTree = buildBalancedTree(low + 1, high);\n            var namedNode = childList[low];\n            var key = keyFn ? keyFn(namedNode) : namedNode;\n            attachPennant(new SortedMap_1.LLRBNode(key, namedNode.node, color, null, childTree));\n        };\n        var attachPennant = function (pennant) {\n            if (node) {\n                node.left = pennant;\n                node = pennant;\n            }\n            else {\n                root = pennant;\n                node = pennant;\n            }\n        };\n        for (var i = 0; i < base12.count; ++i) {\n            var isOne = base12.nextBitIsOne();\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\n            if (isOne) {\n                buildPennant(chunkSize, SortedMap_1.LLRBNode.BLACK);\n            }\n            else {\n                // current == 2\n                buildPennant(chunkSize, SortedMap_1.LLRBNode.BLACK);\n                buildPennant(chunkSize, SortedMap_1.LLRBNode.RED);\n            }\n        }\n        return root;\n    };\n    var base12 = new Base12Num(childList.length);\n    var root = buildFrom12Array(base12);\n    return new SortedMap_2.SortedMap(mapSortFn || cmp, root);\n};\n\n//# sourceMappingURL=childSet.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/snap/childSet.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../util/util\");\nfunction NAME_ONLY_COMPARATOR(left, right) {\n    return util_1.nameCompare(left.name, right.name);\n}\nexports.NAME_ONLY_COMPARATOR = NAME_ONLY_COMPARATOR;\nfunction NAME_COMPARATOR(left, right) {\n    return util_1.nameCompare(left, right);\n}\nexports.NAME_COMPARATOR = NAME_COMPARATOR;\n\n//# sourceMappingURL=comparators.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/snap/comparators.js\n// module id = 401\n// module chunks = 0 1","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"../../util/util\");\nvar Index_1 = require(\"./Index\");\nvar ChildrenNode_1 = require(\"../ChildrenNode\");\nvar Node_1 = require(\"../Node\");\nvar nodeFromJSON_1 = require(\"../nodeFromJSON\");\n/**\n * @param {!Path} indexPath\n * @constructor\n * @extends {Index}\n */\nvar PathIndex = /** @class */ (function (_super) {\n    tslib_1.__extends(PathIndex, _super);\n    function PathIndex(indexPath_) {\n        var _this = _super.call(this) || this;\n        _this.indexPath_ = indexPath_;\n        util_1.assert(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\n        return _this;\n    }\n    /**\n     * @param {!Node} snap\n     * @return {!Node}\n     * @protected\n     */\n    PathIndex.prototype.extractChild = function (snap) {\n        return snap.getChild(this.indexPath_);\n    };\n    /**\n     * @inheritDoc\n     */\n    PathIndex.prototype.isDefinedOn = function (node) {\n        return !node.getChild(this.indexPath_).isEmpty();\n    };\n    /**\n     * @inheritDoc\n     */\n    PathIndex.prototype.compare = function (a, b) {\n        var aChild = this.extractChild(a.node);\n        var bChild = this.extractChild(b.node);\n        var indexCmp = aChild.compareTo(bChild);\n        if (indexCmp === 0) {\n            return util_2.nameCompare(a.name, b.name);\n        }\n        else {\n            return indexCmp;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PathIndex.prototype.makePost = function (indexValue, name) {\n        var valueNode = nodeFromJSON_1.nodeFromJSON(indexValue);\n        var node = ChildrenNode_1.ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\n        return new Node_1.NamedNode(name, node);\n    };\n    /**\n     * @inheritDoc\n     */\n    PathIndex.prototype.maxPost = function () {\n        var node = ChildrenNode_1.ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, ChildrenNode_1.MAX_NODE);\n        return new Node_1.NamedNode(util_2.MAX_NAME, node);\n    };\n    /**\n     * @inheritDoc\n     */\n    PathIndex.prototype.toString = function () {\n        return this.indexPath_.slice().join('/');\n    };\n    return PathIndex;\n}(Index_1.Index));\nexports.PathIndex = PathIndex;\n\n//# sourceMappingURL=PathIndex.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/snap/indexes/PathIndex.js\n// module id = 402\n// module chunks = 0 1","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar Path_1 = require(\"./Path\");\nvar SparseSnapshotTree_1 = require(\"../SparseSnapshotTree\");\nvar LeafNode_1 = require(\"../snap/LeafNode\");\nvar nodeFromJSON_1 = require(\"../snap/nodeFromJSON\");\nvar PriorityIndex_1 = require(\"../snap/indexes/PriorityIndex\");\n/**\n * Generate placeholders for deferred values.\n * @param {?Object} values\n * @return {!Object}\n */\nexports.generateWithValues = function (values) {\n    values = values || {};\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\n    return values;\n};\n/**\n * Value to use when firing local events. When writing server values, fire\n * local events with an approximate value, otherwise return value as-is.\n * @param {(Object|string|number|boolean)} value\n * @param {!Object} serverValues\n * @return {!(string|number|boolean)}\n */\nexports.resolveDeferredValue = function (value, serverValues) {\n    if (!value || typeof value !== 'object') {\n        return value;\n    }\n    else {\n        util_1.assert('.sv' in value, 'Unexpected leaf node or priority contents');\n        return serverValues[value['.sv']];\n    }\n};\n/**\n * Recursively replace all deferred values and priorities in the tree with the\n * specified generated replacement values.\n * @param {!SparseSnapshotTree} tree\n * @param {!Object} serverValues\n * @return {!SparseSnapshotTree}\n */\nexports.resolveDeferredValueTree = function (tree, serverValues) {\n    var resolvedTree = new SparseSnapshotTree_1.SparseSnapshotTree();\n    tree.forEachTree(new Path_1.Path(''), function (path, node) {\n        resolvedTree.remember(path, exports.resolveDeferredValueSnapshot(node, serverValues));\n    });\n    return resolvedTree;\n};\n/**\n * Recursively replace all deferred values and priorities in the node with the\n * specified generated replacement values.  If there are no server values in the node,\n * it'll be returned as-is.\n * @param {!Node} node\n * @param {!Object} serverValues\n * @return {!Node}\n */\nexports.resolveDeferredValueSnapshot = function (node, serverValues) {\n    var rawPri = node.getPriority().val();\n    var priority = exports.resolveDeferredValue(rawPri, serverValues);\n    var newNode;\n    if (node.isLeafNode()) {\n        var leafNode = node;\n        var value = exports.resolveDeferredValue(leafNode.getValue(), serverValues);\n        if (value !== leafNode.getValue() ||\n            priority !== leafNode.getPriority().val()) {\n            return new LeafNode_1.LeafNode(value, nodeFromJSON_1.nodeFromJSON(priority));\n        }\n        else {\n            return node;\n        }\n    }\n    else {\n        var childrenNode = node;\n        newNode = childrenNode;\n        if (priority !== childrenNode.getPriority().val()) {\n            newNode = newNode.updatePriority(new LeafNode_1.LeafNode(priority));\n        }\n        childrenNode.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (childName, childNode) {\n            var newChildNode = exports.resolveDeferredValueSnapshot(childNode, serverValues);\n            if (newChildNode !== childNode) {\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\n            }\n        });\n        return newNode;\n    }\n};\n\n//# sourceMappingURL=ServerValues.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/util/ServerValues.js\n// module id = 403\n// module chunks = 0 1","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Path_1 = require(\"./util/Path\");\nvar PriorityIndex_1 = require(\"./snap/indexes/PriorityIndex\");\nvar CountedSet_1 = require(\"./util/CountedSet\");\n/**\n * Helper class to store a sparse set of snapshots.\n *\n * @constructor\n */\nvar SparseSnapshotTree = /** @class */ (function () {\n    function SparseSnapshotTree() {\n        /**\n         * @private\n         * @type {Node}\n         */\n        this.value_ = null;\n        /**\n         * @private\n         * @type {CountedSet}\n         */\n        this.children_ = null;\n    }\n    /**\n     * Gets the node stored at the given path if one exists.\n     *\n     * @param {!Path} path Path to look up snapshot for.\n     * @return {?Node} The retrieved node, or null.\n     */\n    SparseSnapshotTree.prototype.find = function (path) {\n        if (this.value_ != null) {\n            return this.value_.getChild(path);\n        }\n        else if (!path.isEmpty() && this.children_ != null) {\n            var childKey = path.getFront();\n            path = path.popFront();\n            if (this.children_.contains(childKey)) {\n                var childTree = this.children_.get(childKey);\n                return childTree.find(path);\n            }\n            else {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Stores the given node at the specified path. If there is already a node\n     * at a shallower path, it merges the new data into that snapshot node.\n     *\n     * @param {!Path} path Path to look up snapshot for.\n     * @param {!Node} data The new data, or null.\n     */\n    SparseSnapshotTree.prototype.remember = function (path, data) {\n        if (path.isEmpty()) {\n            this.value_ = data;\n            this.children_ = null;\n        }\n        else if (this.value_ !== null) {\n            this.value_ = this.value_.updateChild(path, data);\n        }\n        else {\n            if (this.children_ == null) {\n                this.children_ = new CountedSet_1.CountedSet();\n            }\n            var childKey = path.getFront();\n            if (!this.children_.contains(childKey)) {\n                this.children_.add(childKey, new SparseSnapshotTree());\n            }\n            var child = this.children_.get(childKey);\n            path = path.popFront();\n            child.remember(path, data);\n        }\n    };\n    /**\n     * Purge the data at path from the cache.\n     *\n     * @param {!Path} path Path to look up snapshot for.\n     * @return {boolean} True if this node should now be removed.\n     */\n    SparseSnapshotTree.prototype.forget = function (path) {\n        if (path.isEmpty()) {\n            this.value_ = null;\n            this.children_ = null;\n            return true;\n        }\n        else {\n            if (this.value_ !== null) {\n                if (this.value_.isLeafNode()) {\n                    // We're trying to forget a node that doesn't exist\n                    return false;\n                }\n                else {\n                    var value = this.value_;\n                    this.value_ = null;\n                    var self_1 = this;\n                    value.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (key, tree) {\n                        self_1.remember(new Path_1.Path(key), tree);\n                    });\n                    return this.forget(path);\n                }\n            }\n            else if (this.children_ !== null) {\n                var childKey = path.getFront();\n                path = path.popFront();\n                if (this.children_.contains(childKey)) {\n                    var safeToRemove = this.children_.get(childKey).forget(path);\n                    if (safeToRemove) {\n                        this.children_.remove(childKey);\n                    }\n                }\n                if (this.children_.isEmpty()) {\n                    this.children_ = null;\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            }\n            else {\n                return true;\n            }\n        }\n    };\n    /**\n     * Recursively iterates through all of the stored tree and calls the\n     * callback on each one.\n     *\n     * @param {!Path} prefixPath Path to look up node for.\n     * @param {!Function} func The function to invoke for each tree.\n     */\n    SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\n        if (this.value_ !== null) {\n            func(prefixPath, this.value_);\n        }\n        else {\n            this.forEachChild(function (key, tree) {\n                var path = new Path_1.Path(prefixPath.toString() + '/' + key);\n                tree.forEachTree(path, func);\n            });\n        }\n    };\n    /**\n     * Iterates through each immediate child and triggers the callback.\n     *\n     * @param {!Function} func The function to invoke for each child.\n     */\n    SparseSnapshotTree.prototype.forEachChild = function (func) {\n        if (this.children_ !== null) {\n            this.children_.each(function (key, tree) {\n                func(key, tree);\n            });\n        }\n    };\n    return SparseSnapshotTree;\n}());\nexports.SparseSnapshotTree = SparseSnapshotTree;\n\n//# sourceMappingURL=SparseSnapshotTree.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/SparseSnapshotTree.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\n/**\n * Implements a set with a count of elements.\n *\n * @template K, V\n */\nvar CountedSet = /** @class */ (function () {\n    function CountedSet() {\n        this.set = {};\n    }\n    /**\n     * @param {!K} item\n     * @param {V} val\n     */\n    CountedSet.prototype.add = function (item, val) {\n        this.set[item] = val !== null ? val : true;\n    };\n    /**\n     * @param {!K} key\n     * @return {boolean}\n     */\n    CountedSet.prototype.contains = function (key) {\n        return util_1.contains(this.set, key);\n    };\n    /**\n     * @param {!K} item\n     * @return {V}\n     */\n    CountedSet.prototype.get = function (item) {\n        return this.contains(item) ? this.set[item] : undefined;\n    };\n    /**\n     * @param {!K} item\n     */\n    CountedSet.prototype.remove = function (item) {\n        delete this.set[item];\n    };\n    /**\n     * Deletes everything in the set\n     */\n    CountedSet.prototype.clear = function () {\n        this.set = {};\n    };\n    /**\n     * True if there's nothing in the set\n     * @return {boolean}\n     */\n    CountedSet.prototype.isEmpty = function () {\n        return util_1.isEmpty(this.set);\n    };\n    /**\n     * @return {number} The number of items in the set\n     */\n    CountedSet.prototype.count = function () {\n        return util_1.getCount(this.set);\n    };\n    /**\n     * Run a function on each k,v pair in the set\n     * @param {function(K, V)} fn\n     */\n    CountedSet.prototype.each = function (fn) {\n        util_1.forEach(this.set, function (k, v) { return fn(k, v); });\n    };\n    /**\n     * Mostly for debugging\n     * @return {Array.<K>} The keys present in this CountedSet\n     */\n    CountedSet.prototype.keys = function () {\n        var keys = [];\n        util_1.forEach(this.set, function (k) {\n            keys.push(k);\n        });\n        return keys;\n    };\n    return CountedSet;\n}());\nexports.CountedSet = CountedSet;\n\n//# sourceMappingURL=CountedSet.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/util/CountedSet.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Operation_1 = require(\"./Operation\");\nvar Path_1 = require(\"../util/Path\");\n/**\n * @param {!OperationSource} source\n * @param {!Path} path\n * @param {!Node} snap\n * @constructor\n * @implements {Operation}\n */\nvar Overwrite = /** @class */ (function () {\n    function Overwrite(source, path, snap) {\n        this.source = source;\n        this.path = path;\n        this.snap = snap;\n        /** @inheritDoc */\n        this.type = Operation_1.OperationType.OVERWRITE;\n    }\n    Overwrite.prototype.operationForChild = function (childName) {\n        if (this.path.isEmpty()) {\n            return new Overwrite(this.source, Path_1.Path.Empty, this.snap.getImmediateChild(childName));\n        }\n        else {\n            return new Overwrite(this.source, this.path.popFront(), this.snap);\n        }\n    };\n    return Overwrite;\n}());\nexports.Overwrite = Overwrite;\n\n//# sourceMappingURL=Overwrite.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/operation/Overwrite.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CacheNode_1 = require(\"./view/CacheNode\");\nvar ChildrenNode_1 = require(\"./snap/ChildrenNode\");\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"@firebase/util\");\nvar ViewCache_1 = require(\"./view/ViewCache\");\nvar View_1 = require(\"./view/View\");\nvar __referenceConstructor;\n/**\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\n * and user writes (set, transaction, update).\n *\n * It's responsible for:\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\n *    applyUserOverwrite, etc.)\n */\nvar SyncPoint = /** @class */ (function () {\n    function SyncPoint() {\n        /**\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\n         * queryId and the value is the View for that query.\n         *\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\n         *\n         * @type {!Object.<!string, !View>}\n         * @private\n         */\n        this.views_ = {};\n    }\n    Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\n        get: function () {\n            util_1.assert(__referenceConstructor, 'Reference.ts has not been loaded');\n            return __referenceConstructor;\n        },\n        set: function (val) {\n            util_1.assert(!__referenceConstructor, '__referenceConstructor has already been defined');\n            __referenceConstructor = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {boolean}\n     */\n    SyncPoint.prototype.isEmpty = function () {\n        return util_2.isEmpty(this.views_);\n    };\n    /**\n     *\n     * @param {!Operation} operation\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} optCompleteServerCache\n     * @return {!Array.<!Event>}\n     */\n    SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\n        var queryId = operation.source.queryId;\n        if (queryId !== null) {\n            var view = util_2.safeGet(this.views_, queryId);\n            util_1.assert(view != null, 'SyncTree gave us an op for an invalid query.');\n            return view.applyOperation(operation, writesCache, optCompleteServerCache);\n        }\n        else {\n            var events_1 = [];\n            util_2.forEach(this.views_, function (key, view) {\n                events_1 = events_1.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\n            });\n            return events_1;\n        }\n    };\n    /**\n     * Add an event callback for the specified query.\n     *\n     * @param {!Query} query\n     * @param {!EventRegistration} eventRegistration\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} serverCache Complete server cache, if we have it.\n     * @param {boolean} serverCacheComplete\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\n        var queryId = query.queryIdentifier();\n        var view = util_2.safeGet(this.views_, queryId);\n        if (!view) {\n            // TODO: make writesCache take flag for complete server node\n            var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\n            var eventCacheComplete = false;\n            if (eventCache) {\n                eventCacheComplete = true;\n            }\n            else if (serverCache instanceof ChildrenNode_1.ChildrenNode) {\n                eventCache = writesCache.calcCompleteEventChildren(serverCache);\n                eventCacheComplete = false;\n            }\n            else {\n                eventCache = ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n                eventCacheComplete = false;\n            }\n            var viewCache = new ViewCache_1.ViewCache(new CacheNode_1.CacheNode(\n            /** @type {!Node} */ (eventCache), eventCacheComplete, false), new CacheNode_1.CacheNode(\n            /** @type {!Node} */ (serverCache), serverCacheComplete, false));\n            view = new View_1.View(query, viewCache);\n            this.views_[queryId] = view;\n        }\n        // This is guaranteed to exist now, we just created anything that was missing\n        view.addEventRegistration(eventRegistration);\n        return view.getInitialEvents(eventRegistration);\n    };\n    /**\n     * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\n     *\n     * If query is the default query, we'll check all views for the specified eventRegistration.\n     * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\n     *\n     * @param {!Query} query\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\n     * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\n     */\n    SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\n        var queryId = query.queryIdentifier();\n        var removed = [];\n        var cancelEvents = [];\n        var hadCompleteView = this.hasCompleteView();\n        if (queryId === 'default') {\n            // When you do ref.off(...), we search all views for the registration to remove.\n            var self_1 = this;\n            util_2.forEach(this.views_, function (viewQueryId, view) {\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\n                if (view.isEmpty()) {\n                    delete self_1.views_[viewQueryId];\n                    // We'll deal with complete views later.\n                    if (!view\n                        .getQuery()\n                        .getQueryParams()\n                        .loadsAllData()) {\n                        removed.push(view.getQuery());\n                    }\n                }\n            });\n        }\n        else {\n            // remove the callback from the specific view.\n            var view = util_2.safeGet(this.views_, queryId);\n            if (view) {\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\n                if (view.isEmpty()) {\n                    delete this.views_[queryId];\n                    // We'll deal with complete views later.\n                    if (!view\n                        .getQuery()\n                        .getQueryParams()\n                        .loadsAllData()) {\n                        removed.push(view.getQuery());\n                    }\n                }\n            }\n        }\n        if (hadCompleteView && !this.hasCompleteView()) {\n            // We removed our last complete view.\n            removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\n        }\n        return { removed: removed, events: cancelEvents };\n    };\n    /**\n     * @return {!Array.<!View>}\n     */\n    SyncPoint.prototype.getQueryViews = function () {\n        var _this = this;\n        var values = Object.keys(this.views_).map(function (key) { return _this.views_[key]; });\n        return values.filter(function (view) {\n            return !view\n                .getQuery()\n                .getQueryParams()\n                .loadsAllData();\n        });\n    };\n    /**\n     *\n     * @param {!Path} path The path to the desired complete snapshot\n     * @return {?Node} A complete cache, if it exists\n     */\n    SyncPoint.prototype.getCompleteServerCache = function (path) {\n        var serverCache = null;\n        util_2.forEach(this.views_, function (key, view) {\n            serverCache = serverCache || view.getCompleteServerCache(path);\n        });\n        return serverCache;\n    };\n    /**\n     * @param {!Query} query\n     * @return {?View}\n     */\n    SyncPoint.prototype.viewForQuery = function (query) {\n        var params = query.getQueryParams();\n        if (params.loadsAllData()) {\n            return this.getCompleteView();\n        }\n        else {\n            var queryId = query.queryIdentifier();\n            return util_2.safeGet(this.views_, queryId);\n        }\n    };\n    /**\n     * @param {!Query} query\n     * @return {boolean}\n     */\n    SyncPoint.prototype.viewExistsForQuery = function (query) {\n        return this.viewForQuery(query) != null;\n    };\n    /**\n     * @return {boolean}\n     */\n    SyncPoint.prototype.hasCompleteView = function () {\n        return this.getCompleteView() != null;\n    };\n    /**\n     * @return {?View}\n     */\n    SyncPoint.prototype.getCompleteView = function () {\n        var completeView = util_2.findValue(this.views_, function (view) {\n            return view\n                .getQuery()\n                .getQueryParams()\n                .loadsAllData();\n        });\n        return completeView || null;\n    };\n    return SyncPoint;\n}());\nexports.SyncPoint = SyncPoint;\n\n//# sourceMappingURL=SyncPoint.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/SyncPoint.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ChildrenNode_1 = require(\"../snap/ChildrenNode\");\nvar CacheNode_1 = require(\"./CacheNode\");\n/**\n * Stores the data we have cached for a view.\n *\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\n *\n * @constructor\n */\nvar ViewCache = /** @class */ (function () {\n    /**\n     *\n     * @param {!CacheNode} eventCache_\n     * @param {!CacheNode} serverCache_\n     */\n    function ViewCache(eventCache_, serverCache_) {\n        this.eventCache_ = eventCache_;\n        this.serverCache_ = serverCache_;\n    }\n    /**\n     * @param {!Node} eventSnap\n     * @param {boolean} complete\n     * @param {boolean} filtered\n     * @return {!ViewCache}\n     */\n    ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\n        return new ViewCache(new CacheNode_1.CacheNode(eventSnap, complete, filtered), this.serverCache_);\n    };\n    /**\n     * @param {!Node} serverSnap\n     * @param {boolean} complete\n     * @param {boolean} filtered\n     * @return {!ViewCache}\n     */\n    ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\n        return new ViewCache(this.eventCache_, new CacheNode_1.CacheNode(serverSnap, complete, filtered));\n    };\n    /**\n     * @return {!CacheNode}\n     */\n    ViewCache.prototype.getEventCache = function () {\n        return this.eventCache_;\n    };\n    /**\n     * @return {?Node}\n     */\n    ViewCache.prototype.getCompleteEventSnap = function () {\n        return this.eventCache_.isFullyInitialized()\n            ? this.eventCache_.getNode()\n            : null;\n    };\n    /**\n     * @return {!CacheNode}\n     */\n    ViewCache.prototype.getServerCache = function () {\n        return this.serverCache_;\n    };\n    /**\n     * @return {?Node}\n     */\n    ViewCache.prototype.getCompleteServerSnap = function () {\n        return this.serverCache_.isFullyInitialized()\n            ? this.serverCache_.getNode()\n            : null;\n    };\n    /**\n     * @const\n     * @type {ViewCache}\n     */\n    ViewCache.Empty = new ViewCache(new CacheNode_1.CacheNode(ChildrenNode_1.ChildrenNode.EMPTY_NODE, \n    /*fullyInitialized=*/ false, \n    /*filtered=*/ false), new CacheNode_1.CacheNode(ChildrenNode_1.ChildrenNode.EMPTY_NODE, \n    /*fullyInitialized=*/ false, \n    /*filtered=*/ false));\n    return ViewCache;\n}());\nexports.ViewCache = ViewCache;\n\n//# sourceMappingURL=ViewCache.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/view/ViewCache.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\n/**\n * Returns the delta from the previous call to get stats.\n *\n * @param collection_ The collection to \"listen\" to.\n * @constructor\n */\nvar StatsListener = /** @class */ (function () {\n    function StatsListener(collection_) {\n        this.collection_ = collection_;\n        this.last_ = null;\n    }\n    StatsListener.prototype.get = function () {\n        var newStats = this.collection_.get();\n        var delta = util_1.clone(newStats);\n        if (this.last_) {\n            util_1.forEach(this.last_, function (stat, value) {\n                delta[stat] = delta[stat] - value;\n            });\n        }\n        this.last_ = newStats;\n        return delta;\n    };\n    return StatsListener;\n}());\nexports.StatsListener = StatsListener;\n\n//# sourceMappingURL=StatsListener.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/stats/StatsListener.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar app_1 = require(\"@firebase/app\");\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"@firebase/util\");\nvar util_3 = require(\"@firebase/util\");\nvar util_4 = require(\"./util/util\");\nvar Path_1 = require(\"./util/Path\");\nvar VisibilityMonitor_1 = require(\"./util/VisibilityMonitor\");\nvar OnlineMonitor_1 = require(\"./util/OnlineMonitor\");\nvar util_5 = require(\"@firebase/util\");\nvar Connection_1 = require(\"../realtime/Connection\");\nvar util_6 = require(\"@firebase/util\");\nvar util_7 = require(\"@firebase/util\");\nvar ServerActions_1 = require(\"./ServerActions\");\nvar RECONNECT_MIN_DELAY = 1000;\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\n/**\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\n *\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\n * in quotes to make sure the closure compiler does not minify them.\n */\nvar PersistentConnection = /** @class */ (function (_super) {\n    tslib_1.__extends(PersistentConnection, _super);\n    /**\n     * @implements {ServerActions}\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\n     * @param onConnectStatus_\n     * @param onServerInfoUpdate_\n     * @param authTokenProvider_\n     * @param authOverride_\n     */\n    function PersistentConnection(repoInfo_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\n        var _this = _super.call(this) || this;\n        _this.repoInfo_ = repoInfo_;\n        _this.onDataUpdate_ = onDataUpdate_;\n        _this.onConnectStatus_ = onConnectStatus_;\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\n        _this.authTokenProvider_ = authTokenProvider_;\n        _this.authOverride_ = authOverride_;\n        // Used for diagnostic logging.\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\n        _this.log_ = util_4.logWrapper('p:' + _this.id + ':');\n        /** @private {Object} */\n        _this.interruptReasons_ = {};\n        _this.listens_ = {};\n        _this.outstandingPuts_ = [];\n        _this.outstandingPutCount_ = 0;\n        _this.onDisconnectRequestQueue_ = [];\n        _this.connected_ = false;\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n        _this.securityDebugCallback_ = null;\n        _this.lastSessionId = null;\n        /** @private {number|null} */\n        _this.establishConnectionTimer_ = null;\n        /** @private {boolean} */\n        _this.visible_ = false;\n        // Before we get connected, we keep a queue of pending messages to send.\n        _this.requestCBHash_ = {};\n        _this.requestNumber_ = 0;\n        /** @private {?{\n         *   sendRequest(Object),\n         *   close()\n         * }} */\n        _this.realtime_ = null;\n        /** @private {string|null} */\n        _this.authToken_ = null;\n        _this.forceTokenRefresh_ = false;\n        _this.invalidAuthTokenCount_ = 0;\n        _this.firstConnection_ = true;\n        _this.lastConnectionAttemptTime_ = null;\n        _this.lastConnectionEstablishedTime_ = null;\n        if (authOverride_ && !util_7.isNodeSdk()) {\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\n        }\n        _this.scheduleConnect_(0);\n        VisibilityMonitor_1.VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\n            OnlineMonitor_1.OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\n        }\n        return _this;\n    }\n    /**\n     * @param {!string} action\n     * @param {*} body\n     * @param {function(*)=} onResponse\n     * @protected\n     */\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\n        var curReqNum = ++this.requestNumber_;\n        var msg = { r: curReqNum, a: action, b: body };\n        this.log_(util_2.stringify(msg));\n        util_3.assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\n        this.realtime_.sendRequest(msg);\n        if (onResponse) {\n            this.requestCBHash_[curReqNum] = onResponse;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n        var queryId = query.queryIdentifier();\n        var pathString = query.path.toString();\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\n        this.listens_[pathString] = this.listens_[pathString] || {};\n        util_3.assert(query.getQueryParams().isDefault() ||\n            !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\n        util_3.assert(!this.listens_[pathString][queryId], 'listen() called twice for same path/queryId.');\n        var listenSpec = {\n            onComplete: onComplete,\n            hashFn: currentHashFn,\n            query: query,\n            tag: tag\n        };\n        this.listens_[pathString][queryId] = listenSpec;\n        if (this.connected_) {\n            this.sendListen_(listenSpec);\n        }\n    };\n    /**\n     * @param {!{onComplete(),\n     *           hashFn():!string,\n     *           query: !Query,\n     *           tag: ?number}} listenSpec\n     * @private\n     */\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\n        var _this = this;\n        var query = listenSpec.query;\n        var pathString = query.path.toString();\n        var queryId = query.queryIdentifier();\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\n        var req = { /*path*/ p: pathString };\n        var action = 'q';\n        // Only bother to send query if it's non-default.\n        if (listenSpec.tag) {\n            req['q'] = query.queryObject();\n            req['t'] = listenSpec.tag;\n        }\n        req['h'] = listenSpec.hashFn();\n        this.sendRequest(action, req, function (message) {\n            var payload = message['d'];\n            var status = message['s'];\n            // print warnings in any case...\n            PersistentConnection.warnOnListenWarnings_(payload, query);\n            var currentListenSpec = _this.listens_[pathString] && _this.listens_[pathString][queryId];\n            // only trigger actions if the listen hasn't been removed and readded\n            if (currentListenSpec === listenSpec) {\n                _this.log_('listen response', message);\n                if (status !== 'ok') {\n                    _this.removeListen_(pathString, queryId);\n                }\n                if (listenSpec.onComplete) {\n                    listenSpec.onComplete(status, payload);\n                }\n            }\n        });\n    };\n    /**\n     * @param {*} payload\n     * @param {!Query} query\n     * @private\n     */\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\n        if (payload && typeof payload === 'object' && util_1.contains(payload, 'w')) {\n            var warnings = util_1.safeGet(payload, 'w');\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n                var indexSpec = '\".indexOn\": \"' +\n                    query\n                        .getQueryParams()\n                        .getIndex()\n                        .toString() +\n                    '\"';\n                var indexPath = query.path.toString();\n                util_4.warn(\"Using an unspecified index. Your data will be downloaded and \" +\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\n                    (indexPath + \" to your security rules for better performance.\"));\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\n        this.authToken_ = token;\n        this.log_('Auth token refreshed');\n        if (this.authToken_) {\n            this.tryAuth();\n        }\n        else {\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n            //the credential so we dont become authenticated next time we connect.\n            if (this.connected_) {\n                this.sendRequest('unauth', {}, function () { });\n            }\n        }\n        this.reduceReconnectDelayIfAdminCredential_(token);\n    };\n    /**\n     * @param {!string} credential\n     * @private\n     */\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n        var isFirebaseSecret = credential && credential.length === 40;\n        if (isFirebaseSecret || util_5.isAdmin(credential)) {\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n        }\n    };\n    /**\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\n     * a auth revoked (the connection is closed).\n     */\n    PersistentConnection.prototype.tryAuth = function () {\n        var _this = this;\n        if (this.connected_ && this.authToken_) {\n            var token_1 = this.authToken_;\n            var authMethod = util_5.isValidFormat(token_1) ? 'auth' : 'gauth';\n            var requestData = { cred: token_1 };\n            if (this.authOverride_ === null) {\n                requestData['noauth'] = true;\n            }\n            else if (typeof this.authOverride_ === 'object') {\n                requestData['authvar'] = this.authOverride_;\n            }\n            this.sendRequest(authMethod, requestData, function (res) {\n                var status = res['s'];\n                var data = res['d'] || 'error';\n                if (_this.authToken_ === token_1) {\n                    if (status === 'ok') {\n                        _this.invalidAuthTokenCount_ = 0;\n                    }\n                    else {\n                        // Triggers reconnect and force refresh for auth token\n                        _this.onAuthRevoked_(status, data);\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.unlisten = function (query, tag) {\n        var pathString = query.path.toString();\n        var queryId = query.queryIdentifier();\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n        util_3.assert(query.getQueryParams().isDefault() ||\n            !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\n        var listen = this.removeListen_(pathString, queryId);\n        if (listen && this.connected_) {\n            this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\n        }\n    };\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n        var req = { /*path*/ p: pathString };\n        var action = 'n';\n        // Only bother sending queryId if it's non-default.\n        if (tag) {\n            req['q'] = queryObj;\n            req['t'] = tag;\n        }\n        this.sendRequest(action, req);\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\n        if (this.connected_) {\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\n        }\n        else {\n            this.onDisconnectRequestQueue_.push({\n                pathString: pathString,\n                action: 'o',\n                data: data,\n                onComplete: onComplete\n            });\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\n        if (this.connected_) {\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\n        }\n        else {\n            this.onDisconnectRequestQueue_.push({\n                pathString: pathString,\n                action: 'om',\n                data: data,\n                onComplete: onComplete\n            });\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\n        if (this.connected_) {\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\n        }\n        else {\n            this.onDisconnectRequestQueue_.push({\n                pathString: pathString,\n                action: 'oc',\n                data: null,\n                onComplete: onComplete\n            });\n        }\n    };\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\n        this.log_('onDisconnect ' + action, request);\n        this.sendRequest(action, request, function (response) {\n            if (onComplete) {\n                setTimeout(function () {\n                    onComplete(response['s'], response['d']);\n                }, Math.floor(0));\n            }\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\n        this.putInternal('p', pathString, data, onComplete, hash);\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\n        this.putInternal('m', pathString, data, onComplete, hash);\n    };\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\n        var request = {\n            /*path*/ p: pathString,\n            /*data*/ d: data\n        };\n        if (hash !== undefined)\n            request['h'] = hash;\n        // TODO: Only keep track of the most recent put for a given path?\n        this.outstandingPuts_.push({\n            action: action,\n            request: request,\n            onComplete: onComplete\n        });\n        this.outstandingPutCount_++;\n        var index = this.outstandingPuts_.length - 1;\n        if (this.connected_) {\n            this.sendPut_(index);\n        }\n        else {\n            this.log_('Buffering put: ' + pathString);\n        }\n    };\n    PersistentConnection.prototype.sendPut_ = function (index) {\n        var _this = this;\n        var action = this.outstandingPuts_[index].action;\n        var request = this.outstandingPuts_[index].request;\n        var onComplete = this.outstandingPuts_[index].onComplete;\n        this.outstandingPuts_[index].queued = this.connected_;\n        this.sendRequest(action, request, function (message) {\n            _this.log_(action + ' response', message);\n            delete _this.outstandingPuts_[index];\n            _this.outstandingPutCount_--;\n            // Clean up array occasionally.\n            if (_this.outstandingPutCount_ === 0) {\n                _this.outstandingPuts_ = [];\n            }\n            if (onComplete)\n                onComplete(message['s'], message['d']);\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.reportStats = function (stats) {\n        var _this = this;\n        // If we're not connected, we just drop the stats.\n        if (this.connected_) {\n            var request = { /*counters*/ c: stats };\n            this.log_('reportStats', request);\n            this.sendRequest(/*stats*/ 's', request, function (result) {\n                var status = result['s'];\n                if (status !== 'ok') {\n                    var errorReason = result['d'];\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\n                }\n            });\n        }\n    };\n    /**\n     * @param {*} message\n     * @private\n     */\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\n        if ('r' in message) {\n            // this is a response\n            this.log_('from server: ' + util_2.stringify(message));\n            var reqNum = message['r'];\n            var onResponse = this.requestCBHash_[reqNum];\n            if (onResponse) {\n                delete this.requestCBHash_[reqNum];\n                onResponse(message['b']);\n            }\n        }\n        else if ('error' in message) {\n            throw 'A server-side error has occurred: ' + message['error'];\n        }\n        else if ('a' in message) {\n            // a and b are action and body, respectively\n            this.onDataPush_(message['a'], message['b']);\n        }\n    };\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\n        this.log_('handleServerMessage', action, body);\n        if (action === 'd')\n            this.onDataUpdate_(body['p'], body['d'], \n            /*isMerge*/ false, body['t']);\n        else if (action === 'm')\n            this.onDataUpdate_(body['p'], body['d'], \n            /*isMerge=*/ true, body['t']);\n        else if (action === 'c')\n            this.onListenRevoked_(body['p'], body['q']);\n        else if (action === 'ac')\n            this.onAuthRevoked_(body['s'], body['d']);\n        else if (action === 'sd')\n            this.onSecurityDebugPacket_(body);\n        else\n            util_4.error('Unrecognized action received from server: ' +\n                util_2.stringify(action) +\n                '\\nAre you using the latest client?');\n    };\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\n        this.log_('connection ready');\n        this.connected_ = true;\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\n        this.handleTimestamp_(timestamp);\n        this.lastSessionId = sessionId;\n        if (this.firstConnection_) {\n            this.sendConnectStats_();\n        }\n        this.restoreState_();\n        this.firstConnection_ = false;\n        this.onConnectStatus_(true);\n    };\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\n        var _this = this;\n        util_3.assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\n        if (this.establishConnectionTimer_) {\n            clearTimeout(this.establishConnectionTimer_);\n        }\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n        this.establishConnectionTimer_ = setTimeout(function () {\n            _this.establishConnectionTimer_ = null;\n            _this.establishConnection_();\n        }, Math.floor(timeout));\n    };\n    /**\n     * @param {boolean} visible\n     * @private\n     */\n    PersistentConnection.prototype.onVisible_ = function (visible) {\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n        if (visible &&\n            !this.visible_ &&\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\n            this.log_('Window became visible.  Reducing delay.');\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n            if (!this.realtime_) {\n                this.scheduleConnect_(0);\n            }\n        }\n        this.visible_ = visible;\n    };\n    PersistentConnection.prototype.onOnline_ = function (online) {\n        if (online) {\n            this.log_('Browser went online.');\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n            if (!this.realtime_) {\n                this.scheduleConnect_(0);\n            }\n        }\n        else {\n            this.log_('Browser went offline.  Killing connection.');\n            if (this.realtime_) {\n                this.realtime_.close();\n            }\n        }\n    };\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\n        this.log_('data client disconnected');\n        this.connected_ = false;\n        this.realtime_ = null;\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n        this.cancelSentTransactions_();\n        // Clear out the pending requests.\n        this.requestCBHash_ = {};\n        if (this.shouldReconnect_()) {\n            if (!this.visible_) {\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\n                this.reconnectDelay_ = this.maxReconnectDelay_;\n                this.lastConnectionAttemptTime_ = new Date().getTime();\n            }\n            else if (this.lastConnectionEstablishedTime_) {\n                // If we've been connected long enough, reset reconnect delay to minimum.\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT)\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n                this.lastConnectionEstablishedTime_ = null;\n            }\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\n            reconnectDelay = Math.random() * reconnectDelay;\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n            this.scheduleConnect_(reconnectDelay);\n            // Adjust reconnect delay for next time.\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\n        }\n        this.onConnectStatus_(false);\n    };\n    PersistentConnection.prototype.establishConnection_ = function () {\n        if (this.shouldReconnect_()) {\n            this.log_('Making a connection attempt');\n            this.lastConnectionAttemptTime_ = new Date().getTime();\n            this.lastConnectionEstablishedTime_ = null;\n            var onDataMessage_1 = this.onDataMessage_.bind(this);\n            var onReady_1 = this.onReady_.bind(this);\n            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\n            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\n            var self_1 = this;\n            var lastSessionId_1 = this.lastSessionId;\n            var canceled_1 = false;\n            var connection_1 = null;\n            var closeFn_1 = function () {\n                if (connection_1) {\n                    connection_1.close();\n                }\n                else {\n                    canceled_1 = true;\n                    onDisconnect_1();\n                }\n            };\n            var sendRequestFn = function (msg) {\n                util_3.assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\n                connection_1.sendRequest(msg);\n            };\n            this.realtime_ = {\n                close: closeFn_1,\n                sendRequest: sendRequestFn\n            };\n            var forceRefresh = this.forceTokenRefresh_;\n            this.forceTokenRefresh_ = false;\n            // First fetch auth token, and establish connection after fetching the token was successful\n            this.authTokenProvider_\n                .getToken(forceRefresh)\n                .then(function (result) {\n                if (!canceled_1) {\n                    util_4.log('getToken() completed. Creating connection.');\n                    self_1.authToken_ = result && result.accessToken;\n                    connection_1 = new Connection_1.Connection(connId_1, self_1.repoInfo_, onDataMessage_1, onReady_1, onDisconnect_1, \n                    /* onKill= */ function (reason) {\n                        util_4.warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\n                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\n                    }, lastSessionId_1);\n                }\n                else {\n                    util_4.log('getToken() completed but was canceled');\n                }\n            })\n                .then(null, function (error) {\n                self_1.log_('Failed to get token: ' + error);\n                if (!canceled_1) {\n                    if (util_6.CONSTANTS.NODE_ADMIN) {\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\n                        // But getToken() may also just have temporarily failed, so we still want to\n                        // continue retrying.\n                        util_4.warn(error);\n                    }\n                    closeFn_1();\n                }\n            });\n        }\n    };\n    /**\n     * @param {string} reason\n     */\n    PersistentConnection.prototype.interrupt = function (reason) {\n        util_4.log('Interrupting connection for reason: ' + reason);\n        this.interruptReasons_[reason] = true;\n        if (this.realtime_) {\n            this.realtime_.close();\n        }\n        else {\n            if (this.establishConnectionTimer_) {\n                clearTimeout(this.establishConnectionTimer_);\n                this.establishConnectionTimer_ = null;\n            }\n            if (this.connected_) {\n                this.onRealtimeDisconnect_();\n            }\n        }\n    };\n    /**\n     * @param {string} reason\n     */\n    PersistentConnection.prototype.resume = function (reason) {\n        util_4.log('Resuming connection for reason: ' + reason);\n        delete this.interruptReasons_[reason];\n        if (util_1.isEmpty(this.interruptReasons_)) {\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n            if (!this.realtime_) {\n                this.scheduleConnect_(0);\n            }\n        }\n    };\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\n        var delta = timestamp - new Date().getTime();\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\n    };\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\n            var put = this.outstandingPuts_[i];\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\n                if (put.onComplete)\n                    put.onComplete('disconnect');\n                delete this.outstandingPuts_[i];\n                this.outstandingPutCount_--;\n            }\n        }\n        // Clean up array occasionally.\n        if (this.outstandingPutCount_ === 0)\n            this.outstandingPuts_ = [];\n    };\n    /**\n     * @param {!string} pathString\n     * @param {Array.<*>=} query\n     * @private\n     */\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n        var queryId;\n        if (!query) {\n            queryId = 'default';\n        }\n        else {\n            queryId = query.map(function (q) { return util_4.ObjectToUniqueKey(q); }).join('$');\n        }\n        var listen = this.removeListen_(pathString, queryId);\n        if (listen && listen.onComplete)\n            listen.onComplete('permission_denied');\n    };\n    /**\n     * @param {!string} pathString\n     * @param {!string} queryId\n     * @return {{queries:Array.<Query>, onComplete:function(string)}}\n     * @private\n     */\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\n        var normalizedPathString = new Path_1.Path(pathString).toString(); // normalize path.\n        var listen;\n        if (this.listens_[normalizedPathString] !== undefined) {\n            listen = this.listens_[normalizedPathString][queryId];\n            delete this.listens_[normalizedPathString][queryId];\n            if (util_1.getCount(this.listens_[normalizedPathString]) === 0) {\n                delete this.listens_[normalizedPathString];\n            }\n        }\n        else {\n            // all listens for this path has already been removed\n            listen = undefined;\n        }\n        return listen;\n    };\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\n        util_4.log('Auth token revoked: ' + statusCode + '/' + explanation);\n        this.authToken_ = null;\n        this.forceTokenRefresh_ = true;\n        this.realtime_.close();\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n            // We'll wait a couple times before logging the warning / increasing the\n            // retry period since oauth tokens will report as \"invalid\" if they're\n            // just expired. Plus there may be transient issues that resolve themselves.\n            this.invalidAuthTokenCount_++;\n            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\n                // Set a long reconnect delay because recovery is unlikely\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n                // Notify the auth token provider that the token is invalid, which will log\n                // a warning\n                this.authTokenProvider_.notifyForInvalidToken();\n            }\n        }\n    };\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\n        if (this.securityDebugCallback_) {\n            this.securityDebugCallback_(body);\n        }\n        else {\n            if ('msg' in body && typeof console !== 'undefined') {\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\n            }\n        }\n    };\n    PersistentConnection.prototype.restoreState_ = function () {\n        var _this = this;\n        //Re-authenticate ourselves if we have a credential stored.\n        this.tryAuth();\n        // Puts depend on having received the corresponding data update from the server before they complete, so we must\n        // make sure to send listens before puts.\n        util_1.forEach(this.listens_, function (pathString, queries) {\n            util_1.forEach(queries, function (key, listenSpec) {\n                _this.sendListen_(listenSpec);\n            });\n        });\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\n            if (this.outstandingPuts_[i])\n                this.sendPut_(i);\n        }\n        while (this.onDisconnectRequestQueue_.length) {\n            var request = this.onDisconnectRequestQueue_.shift();\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\n        }\n    };\n    /**\n     * Sends client stats for first connection\n     * @private\n     */\n    PersistentConnection.prototype.sendConnectStats_ = function () {\n        var stats = {};\n        var clientName = 'js';\n        if (util_6.CONSTANTS.NODE_ADMIN) {\n            clientName = 'admin_node';\n        }\n        else if (util_6.CONSTANTS.NODE_CLIENT) {\n            clientName = 'node';\n        }\n        stats['sdk.' + clientName + '.' + app_1.default.SDK_VERSION.replace(/\\./g, '-')] = 1;\n        if (util_7.isMobileCordova()) {\n            stats['framework.cordova'] = 1;\n        }\n        else if (util_7.isReactNative()) {\n            stats['framework.reactnative'] = 1;\n        }\n        this.reportStats(stats);\n    };\n    /**\n     * @return {boolean}\n     * @private\n     */\n    PersistentConnection.prototype.shouldReconnect_ = function () {\n        var online = OnlineMonitor_1.OnlineMonitor.getInstance().currentlyOnline();\n        return util_1.isEmpty(this.interruptReasons_) && online;\n    };\n    /**\n     * @private\n     */\n    PersistentConnection.nextPersistentConnectionId_ = 0;\n    /**\n     * Counter for number of connections created. Mainly used for tagging in the logs\n     * @type {number}\n     * @private\n     */\n    PersistentConnection.nextConnectionId_ = 0;\n    return PersistentConnection;\n}(ServerActions_1.ServerActions));\nexports.PersistentConnection = PersistentConnection;\n\n//# sourceMappingURL=PersistentConnection.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js\n// module id = 410\n// module chunks = 0 1","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\n/**\n * Base class to be used if you want to emit events. Call the constructor with\n * the set of allowed event names.\n */\nvar EventEmitter = /** @class */ (function () {\n    /**\n     * @param {!Array.<string>} allowedEvents_\n     */\n    function EventEmitter(allowedEvents_) {\n        this.allowedEvents_ = allowedEvents_;\n        this.listeners_ = {};\n        util_1.assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\n    }\n    /**\n     * To be called by derived classes to trigger events.\n     * @param {!string} eventType\n     * @param {...*} var_args\n     */\n    EventEmitter.prototype.trigger = function (eventType) {\n        var var_args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            var_args[_i - 1] = arguments[_i];\n        }\n        if (Array.isArray(this.listeners_[eventType])) {\n            // Clone the list, since callbacks could add/remove listeners.\n            var listeners = this.listeners_[eventType].slice();\n            for (var i = 0; i < listeners.length; i++) {\n                listeners[i].callback.apply(listeners[i].context, var_args);\n            }\n        }\n    };\n    EventEmitter.prototype.on = function (eventType, callback, context) {\n        this.validateEventType_(eventType);\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\n        this.listeners_[eventType].push({ callback: callback, context: context });\n        var eventData = this.getInitialEvent(eventType);\n        if (eventData) {\n            callback.apply(context, eventData);\n        }\n    };\n    EventEmitter.prototype.off = function (eventType, callback, context) {\n        this.validateEventType_(eventType);\n        var listeners = this.listeners_[eventType] || [];\n        for (var i = 0; i < listeners.length; i++) {\n            if (listeners[i].callback === callback &&\n                (!context || context === listeners[i].context)) {\n                listeners.splice(i, 1);\n                return;\n            }\n        }\n    };\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\n        util_1.assert(this.allowedEvents_.find(function (et) {\n            return et === eventType;\n        }), 'Unknown event: ' + eventType);\n    };\n    return EventEmitter;\n}());\nexports.EventEmitter = EventEmitter;\n\n//# sourceMappingURL=EventEmitter.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/util/EventEmitter.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../core/util/util\");\nvar storage_1 = require(\"../core/storage/storage\");\nvar Constants_1 = require(\"./Constants\");\nvar TransportManager_1 = require(\"./TransportManager\");\n// Abort upgrade attempt if it takes longer than 60s.\nvar UPGRADE_TIMEOUT = 60000;\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\nvar MESSAGE_TYPE = 't';\nvar MESSAGE_DATA = 'd';\nvar CONTROL_SHUTDOWN = 's';\nvar CONTROL_RESET = 'r';\nvar CONTROL_ERROR = 'e';\nvar CONTROL_PONG = 'o';\nvar SWITCH_ACK = 'a';\nvar END_TRANSMISSION = 'n';\nvar PING = 'p';\nvar SERVER_HELLO = 'h';\n/**\n * Creates a new real-time connection to the server using whichever method works\n * best in the current browser.\n *\n * @constructor\n */\nvar Connection = /** @class */ (function () {\n    /**\n     * @param {!string} id - an id for this connection\n     * @param {!RepoInfo} repoInfo_ - the info for the endpoint to connect to\n     * @param {function(Object)} onMessage_ - the callback to be triggered when a server-push message arrives\n     * @param {function(number, string)} onReady_ - the callback to be triggered when this connection is ready to send messages.\n     * @param {function()} onDisconnect_ - the callback to be triggered when a connection was lost\n     * @param {function(string)} onKill_ - the callback to be triggered when this connection has permanently shut down.\n     * @param {string=} lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\n     */\n    function Connection(id, repoInfo_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\n        this.id = id;\n        this.repoInfo_ = repoInfo_;\n        this.onMessage_ = onMessage_;\n        this.onReady_ = onReady_;\n        this.onDisconnect_ = onDisconnect_;\n        this.onKill_ = onKill_;\n        this.lastSessionId = lastSessionId;\n        this.connectionCount = 0;\n        this.pendingDataMessages = [];\n        this.state_ = 0 /* CONNECTING */;\n        this.log_ = util_1.logWrapper('c:' + this.id + ':');\n        this.transportManager_ = new TransportManager_1.TransportManager(repoInfo_);\n        this.log_('Connection created');\n        this.start_();\n    }\n    /**\n     * Starts a connection attempt\n     * @private\n     */\n    Connection.prototype.start_ = function () {\n        var _this = this;\n        var conn = this.transportManager_.initialTransport();\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, undefined, this.lastSessionId);\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n        // can consider the transport healthy.\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n        var onMessageReceived = this.connReceiver_(this.conn_);\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\n        this.tx_ = this.conn_;\n        this.rx_ = this.conn_;\n        this.secondaryConn_ = null;\n        this.isHealthy_ = false;\n        /*\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\n         * still have the context of your originating frame.\n         */\n        setTimeout(function () {\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\n        }, Math.floor(0));\n        var healthyTimeout_ms = conn['healthyTimeout'] || 0;\n        if (healthyTimeout_ms > 0) {\n            this.healthyTimeout_ = util_1.setTimeoutNonBlocking(function () {\n                _this.healthyTimeout_ = null;\n                if (!_this.isHealthy_) {\n                    if (_this.conn_ &&\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\n                            _this.conn_.bytesReceived +\n                            ' bytes.  Marking connection healthy.');\n                        _this.isHealthy_ = true;\n                        _this.conn_.markConnectionHealthy();\n                    }\n                    else if (_this.conn_ &&\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\n                            _this.conn_.bytesSent +\n                            ' bytes.  Leaving connection alive.');\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n                        // the server.\n                    }\n                    else {\n                        _this.log_('Closing unhealthy connection after timeout.');\n                        _this.close();\n                    }\n                }\n            }, Math.floor(healthyTimeout_ms));\n        }\n    };\n    /**\n     * @return {!string}\n     * @private\n     */\n    Connection.prototype.nextTransportId_ = function () {\n        return 'c:' + this.id + ':' + this.connectionCount++;\n    };\n    Connection.prototype.disconnReceiver_ = function (conn) {\n        var _this = this;\n        return function (everConnected) {\n            if (conn === _this.conn_) {\n                _this.onConnectionLost_(everConnected);\n            }\n            else if (conn === _this.secondaryConn_) {\n                _this.log_('Secondary connection lost.');\n                _this.onSecondaryConnectionLost_();\n            }\n            else {\n                _this.log_('closing an old connection');\n            }\n        };\n    };\n    Connection.prototype.connReceiver_ = function (conn) {\n        var _this = this;\n        return function (message) {\n            if (_this.state_ != 2 /* DISCONNECTED */) {\n                if (conn === _this.rx_) {\n                    _this.onPrimaryMessageReceived_(message);\n                }\n                else if (conn === _this.secondaryConn_) {\n                    _this.onSecondaryMessageReceived_(message);\n                }\n                else {\n                    _this.log_('message on old connection');\n                }\n            }\n        };\n    };\n    /**\n     *\n     * @param {Object} dataMsg An arbitrary data message to be sent to the server\n     */\n    Connection.prototype.sendRequest = function (dataMsg) {\n        // wrap in a data message envelope and send it on\n        var msg = { t: 'd', d: dataMsg };\n        this.sendData_(msg);\n    };\n    Connection.prototype.tryCleanupConnection = function () {\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\n            this.conn_ = this.secondaryConn_;\n            this.secondaryConn_ = null;\n            // the server will shutdown the old connection\n        }\n    };\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\n        if (MESSAGE_TYPE in controlData) {\n            var cmd = controlData[MESSAGE_TYPE];\n            if (cmd === SWITCH_ACK) {\n                this.upgradeIfSecondaryHealthy_();\n            }\n            else if (cmd === CONTROL_RESET) {\n                // Most likely the session wasn't valid. Abandon the switch attempt\n                this.log_('Got a reset on secondary, closing it');\n                this.secondaryConn_.close();\n                // If we were already using this connection for something, than we need to fully close\n                if (this.tx_ === this.secondaryConn_ ||\n                    this.rx_ === this.secondaryConn_) {\n                    this.close();\n                }\n            }\n            else if (cmd === CONTROL_PONG) {\n                this.log_('got pong on secondary.');\n                this.secondaryResponsesRequired_--;\n                this.upgradeIfSecondaryHealthy_();\n            }\n        }\n    };\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\n        var layer = util_1.requireKey('t', parsedData);\n        var data = util_1.requireKey('d', parsedData);\n        if (layer == 'c') {\n            this.onSecondaryControl_(data);\n        }\n        else if (layer == 'd') {\n            // got a data message, but we're still second connection. Need to buffer it up\n            this.pendingDataMessages.push(data);\n        }\n        else {\n            throw new Error('Unknown protocol layer: ' + layer);\n        }\n    };\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\n        if (this.secondaryResponsesRequired_ <= 0) {\n            this.log_('Secondary connection is healthy.');\n            this.isHealthy_ = true;\n            this.secondaryConn_.markConnectionHealthy();\n            this.proceedWithUpgrade_();\n        }\n        else {\n            // Send a ping to make sure the connection is healthy.\n            this.log_('sending ping on secondary.');\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\n        }\n    };\n    Connection.prototype.proceedWithUpgrade_ = function () {\n        // tell this connection to consider itself open\n        this.secondaryConn_.start();\n        // send ack\n        this.log_('sending client ack on secondary');\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\n        // send end packet on primary transport, switch to sending on this one\n        // can receive on this one, buffer responses until end received on primary transport\n        this.log_('Ending transmission on primary');\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\n        this.tx_ = this.secondaryConn_;\n        this.tryCleanupConnection();\n    };\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n        var layer = util_1.requireKey('t', parsedData);\n        var data = util_1.requireKey('d', parsedData);\n        if (layer == 'c') {\n            this.onControl_(data);\n        }\n        else if (layer == 'd') {\n            this.onDataMessage_(data);\n        }\n    };\n    Connection.prototype.onDataMessage_ = function (message) {\n        this.onPrimaryResponse_();\n        // We don't do anything with data messages, just kick them up a level\n        this.onMessage_(message);\n    };\n    Connection.prototype.onPrimaryResponse_ = function () {\n        if (!this.isHealthy_) {\n            this.primaryResponsesRequired_--;\n            if (this.primaryResponsesRequired_ <= 0) {\n                this.log_('Primary connection is healthy.');\n                this.isHealthy_ = true;\n                this.conn_.markConnectionHealthy();\n            }\n        }\n    };\n    Connection.prototype.onControl_ = function (controlData) {\n        var cmd = util_1.requireKey(MESSAGE_TYPE, controlData);\n        if (MESSAGE_DATA in controlData) {\n            var payload = controlData[MESSAGE_DATA];\n            if (cmd === SERVER_HELLO) {\n                this.onHandshake_(payload);\n            }\n            else if (cmd === END_TRANSMISSION) {\n                this.log_('recvd end transmission on primary');\n                this.rx_ = this.secondaryConn_;\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\n                    this.onDataMessage_(this.pendingDataMessages[i]);\n                }\n                this.pendingDataMessages = [];\n                this.tryCleanupConnection();\n            }\n            else if (cmd === CONTROL_SHUTDOWN) {\n                // This was previously the 'onKill' callback passed to the lower-level connection\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\n                this.onConnectionShutdown_(payload);\n            }\n            else if (cmd === CONTROL_RESET) {\n                // payload in this case is the host we should contact\n                this.onReset_(payload);\n            }\n            else if (cmd === CONTROL_ERROR) {\n                util_1.error('Server Error: ' + payload);\n            }\n            else if (cmd === CONTROL_PONG) {\n                this.log_('got pong on primary.');\n                this.onPrimaryResponse_();\n                this.sendPingOnPrimaryIfNecessary_();\n            }\n            else {\n                util_1.error('Unknown control packet command: ' + cmd);\n            }\n        }\n    };\n    /**\n     *\n     * @param {Object} handshake The handshake data returned from the server\n     * @private\n     */\n    Connection.prototype.onHandshake_ = function (handshake) {\n        var timestamp = handshake.ts;\n        var version = handshake.v;\n        var host = handshake.h;\n        this.sessionId = handshake.s;\n        this.repoInfo_.updateHost(host);\n        // if we've already closed the connection, then don't bother trying to progress further\n        if (this.state_ == 0 /* CONNECTING */) {\n            this.conn_.start();\n            this.onConnectionEstablished_(this.conn_, timestamp);\n            if (Constants_1.PROTOCOL_VERSION !== version) {\n                util_1.warn('Protocol version mismatch detected');\n            }\n            // TODO: do we want to upgrade? when? maybe a delay?\n            this.tryStartUpgrade_();\n        }\n    };\n    Connection.prototype.tryStartUpgrade_ = function () {\n        var conn = this.transportManager_.upgradeTransport();\n        if (conn) {\n            this.startUpgrade_(conn);\n        }\n    };\n    Connection.prototype.startUpgrade_ = function (conn) {\n        var _this = this;\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.sessionId);\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n        // can consider the transport healthy.\n        this.secondaryResponsesRequired_ =\n            conn['responsesRequiredToBeHealthy'] || 0;\n        var onMessage = this.connReceiver_(this.secondaryConn_);\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n        this.secondaryConn_.open(onMessage, onDisconnect);\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n        util_1.setTimeoutNonBlocking(function () {\n            if (_this.secondaryConn_) {\n                _this.log_('Timed out trying to upgrade.');\n                _this.secondaryConn_.close();\n            }\n        }, Math.floor(UPGRADE_TIMEOUT));\n    };\n    Connection.prototype.onReset_ = function (host) {\n        this.log_('Reset packet received.  New host: ' + host);\n        this.repoInfo_.updateHost(host);\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n        // We don't currently support resets after the connection has already been established\n        if (this.state_ === 1 /* CONNECTED */) {\n            this.close();\n        }\n        else {\n            // Close whatever connections we have open and start again.\n            this.closeConnections_();\n            this.start_();\n        }\n    };\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\n        var _this = this;\n        this.log_('Realtime connection established.');\n        this.conn_ = conn;\n        this.state_ = 1 /* CONNECTED */;\n        if (this.onReady_) {\n            this.onReady_(timestamp, this.sessionId);\n            this.onReady_ = null;\n        }\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n        // send some pings.\n        if (this.primaryResponsesRequired_ === 0) {\n            this.log_('Primary connection is healthy.');\n            this.isHealthy_ = true;\n        }\n        else {\n            util_1.setTimeoutNonBlocking(function () {\n                _this.sendPingOnPrimaryIfNecessary_();\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n        }\n    };\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\n            this.log_('sending ping on primary.');\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\n        }\n    };\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\n        var conn = this.secondaryConn_;\n        this.secondaryConn_ = null;\n        if (this.tx_ === conn || this.rx_ === conn) {\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\n            this.close();\n        }\n    };\n    /**\n     *\n     * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\n     * we should flush the host cache\n     * @private\n     */\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\n        this.conn_ = null;\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\n            this.log_('Realtime connection failed.');\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n            if (this.repoInfo_.isCacheableHost()) {\n                storage_1.PersistentStorage.remove('host:' + this.repoInfo_.host);\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n                this.repoInfo_.internalHost = this.repoInfo_.host;\n            }\n        }\n        else if (this.state_ === 1 /* CONNECTED */) {\n            this.log_('Realtime connection lost.');\n        }\n        this.close();\n    };\n    /**\n     *\n     * @param {string} reason\n     * @private\n     */\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\n        this.log_('Connection shutdown command received. Shutting down...');\n        if (this.onKill_) {\n            this.onKill_(reason);\n            this.onKill_ = null;\n        }\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\n        // so clear the callback.\n        this.onDisconnect_ = null;\n        this.close();\n    };\n    Connection.prototype.sendData_ = function (data) {\n        if (this.state_ !== 1 /* CONNECTED */) {\n            throw 'Connection is not connected';\n        }\n        else {\n            this.tx_.send(data);\n        }\n    };\n    /**\n     * Cleans up this connection, calling the appropriate callbacks\n     */\n    Connection.prototype.close = function () {\n        if (this.state_ !== 2 /* DISCONNECTED */) {\n            this.log_('Closing realtime connection.');\n            this.state_ = 2 /* DISCONNECTED */;\n            this.closeConnections_();\n            if (this.onDisconnect_) {\n                this.onDisconnect_();\n                this.onDisconnect_ = null;\n            }\n        }\n    };\n    /**\n     *\n     * @private\n     */\n    Connection.prototype.closeConnections_ = function () {\n        this.log_('Shutting down all connections');\n        if (this.conn_) {\n            this.conn_.close();\n            this.conn_ = null;\n        }\n        if (this.secondaryConn_) {\n            this.secondaryConn_.close();\n            this.secondaryConn_ = null;\n        }\n        if (this.healthyTimeout_) {\n            clearTimeout(this.healthyTimeout_);\n            this.healthyTimeout_ = null;\n        }\n    };\n    return Connection;\n}());\nexports.Connection = Connection;\n\n//# sourceMappingURL=Connection.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../core/util/util\");\nvar CountedSet_1 = require(\"../core/util/CountedSet\");\nvar StatsManager_1 = require(\"../core/stats/StatsManager\");\nvar PacketReceiver_1 = require(\"./polling/PacketReceiver\");\nvar Constants_1 = require(\"./Constants\");\nvar util_2 = require(\"@firebase/util\");\nvar util_3 = require(\"@firebase/util\");\n// URL query parameters associated with longpolling\nexports.FIREBASE_LONGPOLL_START_PARAM = 'start';\nexports.FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nexports.FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nexports.FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nexports.FIREBASE_LONGPOLL_ID_PARAM = 'id';\nexports.FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nexports.FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nexports.FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nexports.FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nexports.FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nexports.FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nexports.FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\nexports.FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\n//Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\nvar MAX_URL_DATA_SIZE = 1870;\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n/**\n * Keepalive period\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\n * length of 30 seconds that we can't exceed.\n * @const\n * @type {number}\n */\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\n/**\n * How long to wait before aborting a long-polling connection attempt.\n * @const\n * @type {number}\n */\nvar LP_CONNECT_TIMEOUT = 30000;\n/**\n * This class manages a single long-polling connection.\n *\n * @constructor\n * @implements {Transport}\n */\nvar BrowserPollConnection = /** @class */ (function () {\n    /**\n     * @param {string} connId An identifier for this connection, used for logging\n     * @param {RepoInfo} repoInfo The info for the endpoint to send data to.\n     * @param {string=} transportSessionId Optional transportSessionid if we are reconnecting for an existing\n     *                                         transport session\n     * @param {string=}  lastSessionId Optional lastSessionId if the PersistentConnection has already created a\n     *                                     connection previously\n     */\n    function BrowserPollConnection(connId, repoInfo, transportSessionId, lastSessionId) {\n        this.connId = connId;\n        this.repoInfo = repoInfo;\n        this.transportSessionId = transportSessionId;\n        this.lastSessionId = lastSessionId;\n        this.bytesSent = 0;\n        this.bytesReceived = 0;\n        this.everConnected_ = false;\n        this.log_ = util_1.logWrapper(connId);\n        this.stats_ = StatsManager_1.StatsManager.getCollection(repoInfo);\n        this.urlFn = function (params) {\n            return repoInfo.connectionURL(Constants_1.LONG_POLLING, params);\n        };\n    }\n    /**\n     *\n     * @param {function(Object)} onMessage Callback when messages arrive\n     * @param {function()} onDisconnect Callback with connection lost.\n     */\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\n        var _this = this;\n        this.curSegmentNum = 0;\n        this.onDisconnect_ = onDisconnect;\n        this.myPacketOrderer = new PacketReceiver_1.PacketReceiver(onMessage);\n        this.isClosed_ = false;\n        this.connectTimeoutTimer_ = setTimeout(function () {\n            _this.log_('Timed out trying to connect.');\n            // Make sure we clear the host cache\n            _this.onClosed_();\n            _this.connectTimeoutTimer_ = null;\n        }, Math.floor(LP_CONNECT_TIMEOUT));\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\n        util_1.executeWhenDOMReady(function () {\n            if (_this.isClosed_)\n                return;\n            //Set up a callback that gets triggered once a connection is set up.\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var command = args[0], arg1 = args[1], arg2 = args[2], arg3 = args[3], arg4 = args[4];\n                _this.incrementIncomingBytes_(args);\n                if (!_this.scriptTagHolder)\n                    return; // we closed the connection.\n                if (_this.connectTimeoutTimer_) {\n                    clearTimeout(_this.connectTimeoutTimer_);\n                    _this.connectTimeoutTimer_ = null;\n                }\n                _this.everConnected_ = true;\n                if (command == exports.FIREBASE_LONGPOLL_START_PARAM) {\n                    _this.id = arg1;\n                    _this.password = arg2;\n                }\n                else if (command === exports.FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\n                    if (arg1) {\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\n                        // through our already open polls), so don't send any more.\n                        _this.scriptTagHolder.sendNewPolls = false;\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\n                        // all of the responses up to this one before closing\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\n                            _this.onClosed_();\n                        });\n                    }\n                    else {\n                        _this.onClosed_();\n                    }\n                }\n                else {\n                    throw new Error('Unrecognized command received: ' + command);\n                }\n            }, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var pN = args[0], data = args[1];\n                _this.incrementIncomingBytes_(args);\n                _this.myPacketOrderer.handleResponse(pN, data);\n            }, function () {\n                _this.onClosed_();\n            }, _this.urlFn);\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n            //from cache.\n            var urlParams = {};\n            urlParams[exports.FIREBASE_LONGPOLL_START_PARAM] = 't';\n            urlParams[exports.FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier)\n                urlParams[exports.FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\n            urlParams[Constants_1.VERSION_PARAM] = Constants_1.PROTOCOL_VERSION;\n            if (_this.transportSessionId) {\n                urlParams[Constants_1.TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\n            }\n            if (_this.lastSessionId) {\n                urlParams[Constants_1.LAST_SESSION_PARAM] = _this.lastSessionId;\n            }\n            if (!util_3.isNodeSdk() &&\n                typeof location !== 'undefined' &&\n                location.href &&\n                location.href.indexOf(Constants_1.FORGE_DOMAIN) !== -1) {\n                urlParams[Constants_1.REFERER_PARAM] = Constants_1.FORGE_REF;\n            }\n            var connectURL = _this.urlFn(urlParams);\n            _this.log_('Connecting via long-poll to ' + connectURL);\n            _this.scriptTagHolder.addTag(connectURL, function () {\n                /* do nothing */\n            });\n        });\n    };\n    /**\n     * Call this when a handshake has completed successfully and we want to consider the connection established\n     */\n    BrowserPollConnection.prototype.start = function () {\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\n        this.addDisconnectPingFrame(this.id, this.password);\n    };\n    /**\n     * Forces long polling to be considered as a potential transport\n     */\n    BrowserPollConnection.forceAllow = function () {\n        BrowserPollConnection.forceAllow_ = true;\n    };\n    /**\n     * Forces longpolling to not be considered as a potential transport\n     */\n    BrowserPollConnection.forceDisallow = function () {\n        BrowserPollConnection.forceDisallow_ = true;\n    };\n    // Static method, use string literal so it can be accessed in a generic way\n    BrowserPollConnection.isAvailable = function () {\n        // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n        // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n        return (BrowserPollConnection.forceAllow_ ||\n            (!BrowserPollConnection.forceDisallow_ &&\n                typeof document !== 'undefined' &&\n                document.createElement != null &&\n                !util_1.isChromeExtensionContentScript() &&\n                !util_1.isWindowsStoreApp() &&\n                !util_3.isNodeSdk()));\n    };\n    /**\n     * No-op for polling\n     */\n    BrowserPollConnection.prototype.markConnectionHealthy = function () { };\n    /**\n     * Stops polling and cleans up the iframe\n     * @private\n     */\n    BrowserPollConnection.prototype.shutdown_ = function () {\n        this.isClosed_ = true;\n        if (this.scriptTagHolder) {\n            this.scriptTagHolder.close();\n            this.scriptTagHolder = null;\n        }\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n        if (this.myDisconnFrame) {\n            document.body.removeChild(this.myDisconnFrame);\n            this.myDisconnFrame = null;\n        }\n        if (this.connectTimeoutTimer_) {\n            clearTimeout(this.connectTimeoutTimer_);\n            this.connectTimeoutTimer_ = null;\n        }\n    };\n    /**\n     * Triggered when this transport is closed\n     * @private\n     */\n    BrowserPollConnection.prototype.onClosed_ = function () {\n        if (!this.isClosed_) {\n            this.log_('Longpoll is closing itself');\n            this.shutdown_();\n            if (this.onDisconnect_) {\n                this.onDisconnect_(this.everConnected_);\n                this.onDisconnect_ = null;\n            }\n        }\n    };\n    /**\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\n     * that we've left.\n     */\n    BrowserPollConnection.prototype.close = function () {\n        if (!this.isClosed_) {\n            this.log_('Longpoll is being closed.');\n            this.shutdown_();\n        }\n    };\n    /**\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\n     * broken into chunks (since URLs have a small maximum length).\n     * @param {!Object} data The JSON data to transmit.\n     */\n    BrowserPollConnection.prototype.send = function (data) {\n        var dataStr = util_2.stringify(data);\n        this.bytesSent += dataStr.length;\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\n        //first, lets get the base64-encoded data\n        var base64data = util_2.base64Encode(dataStr);\n        //We can only fit a certain amount in each URL, so we need to split this request\n        //up into multiple pieces if it doesn't fit in one request.\n        var dataSegs = util_1.splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n        //of segments so that we can reassemble the packet on the server.\n        for (var i = 0; i < dataSegs.length; i++) {\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\n            this.curSegmentNum++;\n        }\n    };\n    /**\n     * This is how we notify the server that we're leaving.\n     * We aren't able to send requests with DHTML on a window close event, but we can\n     * trigger XHR requests in some browsers (everything but Opera basically).\n     * @param {!string} id\n     * @param {!string} pw\n     */\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\n        if (util_3.isNodeSdk())\n            return;\n        this.myDisconnFrame = document.createElement('iframe');\n        var urlParams = {};\n        urlParams[exports.FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n        urlParams[exports.FIREBASE_LONGPOLL_ID_PARAM] = id;\n        urlParams[exports.FIREBASE_LONGPOLL_PW_PARAM] = pw;\n        this.myDisconnFrame.src = this.urlFn(urlParams);\n        this.myDisconnFrame.style.display = 'none';\n        document.body.appendChild(this.myDisconnFrame);\n    };\n    /**\n     * Used to track the bytes received by this client\n     * @param {*} args\n     * @private\n     */\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n        var bytesReceived = util_2.stringify(args).length;\n        this.bytesReceived += bytesReceived;\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\n    };\n    return BrowserPollConnection;\n}());\nexports.BrowserPollConnection = BrowserPollConnection;\n/*********************************************************************************************\n * A wrapper around an iframe that is used as a long-polling script holder.\n * @constructor\n *********************************************************************************************/\nvar FirebaseIFrameScriptHolder = /** @class */ (function () {\n    /**\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\n     */\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\n        this.onDisconnect = onDisconnect;\n        this.urlFn = urlFn;\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n        //problems in some browsers.\n        /**\n         * @type {CountedSet.<number, number>}\n         */\n        this.outstandingRequests = new CountedSet_1.CountedSet();\n        //A queue of the pending segments waiting for transmission to the server.\n        this.pendingSegs = [];\n        //A serial number. We use this for two things:\n        // 1) A way to ensure the browser doesn't cache responses to polls\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n        //    JSONP code in the order it was added to the iframe.\n        this.currentSerial = Math.floor(Math.random() * 100000000);\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n        // incoming data from the server that we're waiting for).\n        this.sendNewPolls = true;\n        if (!util_3.isNodeSdk()) {\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n            //iframes where we put the long-polling script tags. We have two callbacks:\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\n            //   2) Message Callback - Triggered when new data arrives.\n            this.uniqueCallbackIdentifier = util_1.LUIDGenerator();\n            window[exports.FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\n            window[exports.FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\n            //Create an iframe for us to add script tags to.\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\n            // Set the iframe's contents.\n            var script = '';\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n            // for ie9, but ie8 needs to do it again in the document itself.\n            if (this.myIFrame.src &&\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\n                var currentDomain = document.domain;\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n            }\n            var iframeContents = '<html><body>' + script + '</body></html>';\n            try {\n                this.myIFrame.doc.open();\n                this.myIFrame.doc.write(iframeContents);\n                this.myIFrame.doc.close();\n            }\n            catch (e) {\n                util_1.log('frame writing exception');\n                if (e.stack) {\n                    util_1.log(e.stack);\n                }\n                util_1.log(e);\n            }\n        }\n        else {\n            this.commandCB = commandCB;\n            this.onMessageCB = onMessageCB;\n        }\n    }\n    /**\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\n     * actually use.\n     * @private\n     * @return {Element}\n     */\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\n        var iframe = document.createElement('iframe');\n        iframe.style.display = 'none';\n        // This is necessary in order to initialize the document inside the iframe\n        if (document.body) {\n            document.body.appendChild(iframe);\n            try {\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n                var a = iframe.contentWindow.document;\n                if (!a) {\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n                    util_1.log('No IE domain setting required');\n                }\n            }\n            catch (e) {\n                var domain = document.domain;\n                iframe.src =\n                    \"javascript:void((function(){document.open();document.domain='\" +\n                        domain +\n                        \"';document.close();})())\";\n            }\n        }\n        else {\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n            // never gets hit.\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n        }\n        // Get the document of the iframe in a browser-specific way.\n        if (iframe.contentDocument) {\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n        }\n        else if (iframe.contentWindow) {\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\n        }\n        else if (iframe.document) {\n            iframe.doc = iframe.document; //others?\n        }\n        return iframe;\n    };\n    /**\n     * Cancel all outstanding queries and remove the frame.\n     */\n    FirebaseIFrameScriptHolder.prototype.close = function () {\n        var _this = this;\n        //Mark this iframe as dead, so no new requests are sent.\n        this.alive = false;\n        if (this.myIFrame) {\n            //We have to actually remove all of the html inside this iframe before removing it from the\n            //window, or IE will continue loading and executing the script tags we've already added, which\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\n            this.myIFrame.doc.body.innerHTML = '';\n            setTimeout(function () {\n                if (_this.myIFrame !== null) {\n                    document.body.removeChild(_this.myIFrame);\n                    _this.myIFrame = null;\n                }\n            }, Math.floor(0));\n        }\n        if (util_3.isNodeSdk() && this.myID) {\n            var urlParams = {};\n            urlParams[exports.FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM] = 't';\n            urlParams[exports.FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n            urlParams[exports.FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n            var theURL = this.urlFn(urlParams);\n            FirebaseIFrameScriptHolder.nodeRestRequest(theURL);\n        }\n        // Protect from being called recursively.\n        var onDisconnect = this.onDisconnect;\n        if (onDisconnect) {\n            this.onDisconnect = null;\n            onDisconnect();\n        }\n    };\n    /**\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\n     * @param {!string} id - The ID of this connection\n     * @param {!string} pw - The password for this connection\n     */\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\n        this.myID = id;\n        this.myPW = pw;\n        this.alive = true;\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n        while (this.newRequest_()) { }\n    };\n    /**\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\n     * too many outstanding requests and we are still alive.\n     *\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\n     * needed.\n     */\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n        // close the old request.\n        if (this.alive &&\n            this.sendNewPolls &&\n            this.outstandingRequests.count() < (this.pendingSegs.length > 0 ? 2 : 1)) {\n            //construct our url\n            this.currentSerial++;\n            var urlParams = {};\n            urlParams[exports.FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n            urlParams[exports.FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n            urlParams[exports.FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n            var theURL = this.urlFn(urlParams);\n            //Now add as much data as we can.\n            var curDataString = '';\n            var i = 0;\n            while (this.pendingSegs.length > 0) {\n                //first, lets see if the next segment will fit.\n                var nextSeg = this.pendingSegs[0];\n                if (nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <=\n                    MAX_URL_DATA_SIZE) {\n                    //great, the segment will fit. Lets append it.\n                    var theSeg = this.pendingSegs.shift();\n                    curDataString =\n                        curDataString +\n                            '&' +\n                            exports.FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\n                            i +\n                            '=' +\n                            theSeg.seg +\n                            '&' +\n                            exports.FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\n                            i +\n                            '=' +\n                            theSeg.ts +\n                            '&' +\n                            exports.FIREBASE_LONGPOLL_DATA_PARAM +\n                            i +\n                            '=' +\n                            theSeg.d;\n                    i++;\n                }\n                else {\n                    break;\n                }\n            }\n            theURL = theURL + curDataString;\n            this.addLongPollTag_(theURL, this.currentSerial);\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Queue a packet for transmission to the server.\n     * @param segnum - A sequential id for this packet segment used for reassembly\n     * @param totalsegs - The total number of segments in this packet\n     * @param data - The data for this segment.\n     */\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\n        //add this to the queue of segments to send.\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\n        //send the data immediately if there isn't already data being transmitted, unless\n        //startLongPoll hasn't been called yet.\n        if (this.alive) {\n            this.newRequest_();\n        }\n    };\n    /**\n     * Add a script tag for a regular long-poll request.\n     * @param {!string} url - The URL of the script tag.\n     * @param {!number} serial - The serial number of the request.\n     * @private\n     */\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\n        var _this = this;\n        //remember that we sent this request.\n        this.outstandingRequests.add(serial, 1);\n        var doNewRequest = function () {\n            _this.outstandingRequests.remove(serial);\n            _this.newRequest_();\n        };\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\n        var readyStateCB = function () {\n            // Request completed.  Cancel the keepalive.\n            clearTimeout(keepaliveTimeout);\n            // Trigger a new request so we can continue receiving data.\n            doNewRequest();\n        };\n        this.addTag(url, readyStateCB);\n    };\n    /**\n     * Add an arbitrary script tag to the iframe.\n     * @param {!string} url - The URL for the script tag source.\n     * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\n     */\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\n        var _this = this;\n        if (util_3.isNodeSdk()) {\n            this.doNodeLongPoll(url, loadCB);\n        }\n        else {\n            setTimeout(function () {\n                try {\n                    // if we're already closed, don't add this poll\n                    if (!_this.sendNewPolls)\n                        return;\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\n                    newScript_1.type = 'text/javascript';\n                    newScript_1.async = true;\n                    newScript_1.src = url;\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\n                        var rstate = newScript_1.readyState;\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\n                            if (newScript_1.parentNode) {\n                                newScript_1.parentNode.removeChild(newScript_1);\n                            }\n                            loadCB();\n                        }\n                    };\n                    newScript_1.onerror = function () {\n                        util_1.log('Long-poll script failed to load: ' + url);\n                        _this.sendNewPolls = false;\n                        _this.close();\n                    };\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\n                }\n                catch (e) {\n                    // TODO: we should make this error visible somehow\n                }\n            }, Math.floor(1));\n        }\n    };\n    return FirebaseIFrameScriptHolder;\n}());\nexports.FirebaseIFrameScriptHolder = FirebaseIFrameScriptHolder;\n\n//# sourceMappingURL=BrowserPollConnection.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/realtime/BrowserPollConnection.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar app_1 = require(\"@firebase/app\");\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"../core/util/util\");\nvar StatsManager_1 = require(\"../core/stats/StatsManager\");\nvar Constants_1 = require(\"./Constants\");\nvar util_3 = require(\"@firebase/util\");\nvar storage_1 = require(\"../core/storage/storage\");\nvar util_4 = require(\"@firebase/util\");\nvar util_5 = require(\"@firebase/util\");\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\nvar WebSocketImpl = null;\nif (typeof MozWebSocket !== 'undefined') {\n    WebSocketImpl = MozWebSocket;\n}\nelse if (typeof WebSocket !== 'undefined') {\n    WebSocketImpl = WebSocket;\n}\nfunction setWebSocketImpl(impl) {\n    WebSocketImpl = impl;\n}\nexports.setWebSocketImpl = setWebSocketImpl;\n/**\n * Create a new websocket connection with the given callbacks.\n * @constructor\n * @implements {Transport}\n */\nvar WebSocketConnection = /** @class */ (function () {\n    /**\n     * @param {string} connId identifier for this transport\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\n     *                                         session\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\n     */\n    function WebSocketConnection(connId, repoInfo, transportSessionId, lastSessionId) {\n        this.connId = connId;\n        this.keepaliveTimer = null;\n        this.frames = null;\n        this.totalFrames = 0;\n        this.bytesSent = 0;\n        this.bytesReceived = 0;\n        this.log_ = util_2.logWrapper(this.connId);\n        this.stats_ = StatsManager_1.StatsManager.getCollection(repoInfo);\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\n    }\n    /**\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\n     *                                         session\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\n     * @return {string} connection url\n     * @private\n     */\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\n        var urlParams = {};\n        urlParams[Constants_1.VERSION_PARAM] = Constants_1.PROTOCOL_VERSION;\n        if (!util_5.isNodeSdk() &&\n            typeof location !== 'undefined' &&\n            location.href &&\n            location.href.indexOf(Constants_1.FORGE_DOMAIN) !== -1) {\n            urlParams[Constants_1.REFERER_PARAM] = Constants_1.FORGE_REF;\n        }\n        if (transportSessionId) {\n            urlParams[Constants_1.TRANSPORT_SESSION_PARAM] = transportSessionId;\n        }\n        if (lastSessionId) {\n            urlParams[Constants_1.LAST_SESSION_PARAM] = lastSessionId;\n        }\n        return repoInfo.connectionURL(Constants_1.WEBSOCKET, urlParams);\n    };\n    /**\n     *\n     * @param onMessage Callback when messages arrive\n     * @param onDisconnect Callback with connection lost.\n     */\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\n        var _this = this;\n        this.onDisconnect = onDisconnect;\n        this.onMessage = onMessage;\n        this.log_('Websocket connecting to ' + this.connURL);\n        this.everConnected_ = false;\n        // Assume failure until proven otherwise.\n        storage_1.PersistentStorage.set('previous_websocket_failure', true);\n        try {\n            if (util_5.isNodeSdk()) {\n                var device = util_3.CONSTANTS.NODE_ADMIN ? 'AdminNode' : 'Node';\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n                var options = {\n                    headers: {\n                        'User-Agent': \"Firebase/\" + Constants_1.PROTOCOL_VERSION + \"/\" + app_1.default.SDK_VERSION + \"/\" + process.platform + \"/\" + device\n                    }\n                };\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n                var env = process['env'];\n                var proxy = this.connURL.indexOf('wss://') == 0\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\n                    : env['HTTP_PROXY'] || env['http_proxy'];\n                if (proxy) {\n                    options['proxy'] = { origin: proxy };\n                }\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\n            }\n            else {\n                this.mySock = new WebSocketImpl(this.connURL);\n            }\n        }\n        catch (e) {\n            this.log_('Error instantiating WebSocket.');\n            var error = e.message || e.data;\n            if (error) {\n                this.log_(error);\n            }\n            this.onClosed_();\n            return;\n        }\n        this.mySock.onopen = function () {\n            _this.log_('Websocket connected.');\n            _this.everConnected_ = true;\n        };\n        this.mySock.onclose = function () {\n            _this.log_('Websocket connection was disconnected.');\n            _this.mySock = null;\n            _this.onClosed_();\n        };\n        this.mySock.onmessage = function (m) {\n            _this.handleIncomingFrame(m);\n        };\n        this.mySock.onerror = function (e) {\n            _this.log_('WebSocket error.  Closing connection.');\n            var error = e.message || e.data;\n            if (error) {\n                _this.log_(error);\n            }\n            _this.onClosed_();\n        };\n    };\n    /**\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\n     */\n    WebSocketConnection.prototype.start = function () { };\n    WebSocketConnection.forceDisallow = function () {\n        WebSocketConnection.forceDisallow_ = true;\n    };\n    WebSocketConnection.isAvailable = function () {\n        var isOldAndroid = false;\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n                    isOldAndroid = true;\n                }\n            }\n        }\n        return (!isOldAndroid &&\n            WebSocketImpl !== null &&\n            !WebSocketConnection.forceDisallow_);\n    };\n    /**\n     * Returns true if we previously failed to connect with this transport.\n     * @return {boolean}\n     */\n    WebSocketConnection.previouslyFailed = function () {\n        // If our persistent storage is actually only in-memory storage,\n        // we default to assuming that it previously failed to be safe.\n        return (storage_1.PersistentStorage.isInMemoryStorage ||\n            storage_1.PersistentStorage.get('previous_websocket_failure') === true);\n    };\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\n        storage_1.PersistentStorage.remove('previous_websocket_failure');\n    };\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\n        this.frames.push(data);\n        if (this.frames.length == this.totalFrames) {\n            var fullMess = this.frames.join('');\n            this.frames = null;\n            var jsonMess = util_4.jsonEval(fullMess);\n            //handle the message\n            this.onMessage(jsonMess);\n        }\n    };\n    /**\n     * @param {number} frameCount The number of frames we are expecting from the server\n     * @private\n     */\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\n        this.totalFrames = frameCount;\n        this.frames = [];\n    };\n    /**\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\n     * @param {!String} data\n     * @return {?String} Any remaining data to be process, or null if there is none\n     * @private\n     */\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\n        util_1.assert(this.frames === null, 'We already have a frame buffer');\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n        if (data.length <= 6) {\n            var frameCount = Number(data);\n            if (!isNaN(frameCount)) {\n                this.handleNewFrameCount_(frameCount);\n                return null;\n            }\n        }\n        this.handleNewFrameCount_(1);\n        return data;\n    };\n    /**\n     * Process a websocket frame that has arrived from the server.\n     * @param mess The frame data\n     */\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\n        if (this.mySock === null)\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n        var data = mess['data'];\n        this.bytesReceived += data.length;\n        this.stats_.incrementCounter('bytes_received', data.length);\n        this.resetKeepAlive();\n        if (this.frames !== null) {\n            // we're buffering\n            this.appendFrame_(data);\n        }\n        else {\n            // try to parse out a frame count, otherwise, assume 1 and process it\n            var remainingData = this.extractFrameCount_(data);\n            if (remainingData !== null) {\n                this.appendFrame_(remainingData);\n            }\n        }\n    };\n    /**\n     * Send a message to the server\n     * @param {Object} data The JSON object to transmit\n     */\n    WebSocketConnection.prototype.send = function (data) {\n        this.resetKeepAlive();\n        var dataStr = util_4.stringify(data);\n        this.bytesSent += dataStr.length;\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\n        //up into multiple pieces if it doesn't fit in one request.\n        var dataSegs = util_2.splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\n        //Send the length header\n        if (dataSegs.length > 1) {\n            this.sendString_(String(dataSegs.length));\n        }\n        //Send the actual data in segments.\n        for (var i = 0; i < dataSegs.length; i++) {\n            this.sendString_(dataSegs[i]);\n        }\n    };\n    WebSocketConnection.prototype.shutdown_ = function () {\n        this.isClosed_ = true;\n        if (this.keepaliveTimer) {\n            clearInterval(this.keepaliveTimer);\n            this.keepaliveTimer = null;\n        }\n        if (this.mySock) {\n            this.mySock.close();\n            this.mySock = null;\n        }\n    };\n    WebSocketConnection.prototype.onClosed_ = function () {\n        if (!this.isClosed_) {\n            this.log_('WebSocket is closing itself');\n            this.shutdown_();\n            // since this is an internal close, trigger the close listener\n            if (this.onDisconnect) {\n                this.onDisconnect(this.everConnected_);\n                this.onDisconnect = null;\n            }\n        }\n    };\n    /**\n     * External-facing close handler.\n     * Close the websocket and kill the connection.\n     */\n    WebSocketConnection.prototype.close = function () {\n        if (!this.isClosed_) {\n            this.log_('WebSocket is being closed');\n            this.shutdown_();\n        }\n    };\n    /**\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\n     * the last activity.\n     */\n    WebSocketConnection.prototype.resetKeepAlive = function () {\n        var _this = this;\n        clearInterval(this.keepaliveTimer);\n        this.keepaliveTimer = setInterval(function () {\n            //If there has been no websocket activity for a while, send a no-op\n            if (_this.mySock) {\n                _this.sendString_('0');\n            }\n            _this.resetKeepAlive();\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\n    };\n    /**\n     * Send a string over the websocket.\n     *\n     * @param {string} str String to send.\n     * @private\n     */\n    WebSocketConnection.prototype.sendString_ = function (str) {\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n        // calls for some unknown reason.  We treat these as an error and disconnect.\n        // See https://app.asana.com/0/58926111402292/68021340250410\n        try {\n            this.mySock.send(str);\n        }\n        catch (e) {\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\n            setTimeout(this.onClosed_.bind(this), 0);\n        }\n    };\n    /**\n     * Number of response before we consider the connection \"healthy.\"\n     * @type {number}\n     */\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\n    /**\n     * Time to wait for the connection te become healthy before giving up.\n     * @type {number}\n     */\n    WebSocketConnection.healthyTimeout = 30000;\n    return WebSocketConnection;\n}());\nexports.WebSocketConnection = WebSocketConnection;\n\n//# sourceMappingURL=WebSocketConnection.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/realtime/WebSocketConnection.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Interface defining the set of actions that can be performed against the Firebase server\n * (basically corresponds to our wire protocol).\n *\n * @interface\n */\nvar ServerActions = /** @class */ (function () {\n    function ServerActions() {\n    }\n    /**\n     * @param {string} pathString\n     * @param {*} data\n     * @param {function(string, string)=} onComplete\n     * @param {string=} hash\n     */\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\n    /**\n     * @param {string} pathString\n     * @param {*} data\n     * @param {function(string, ?string)} onComplete\n     * @param {string=} hash\n     */\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\n    /**\n     * Refreshes the auth token for the current connection.\n     * @param {string} token The authentication token\n     */\n    ServerActions.prototype.refreshAuthToken = function (token) { };\n    /**\n     * @param {string} pathString\n     * @param {*} data\n     * @param {function(string, string)=} onComplete\n     */\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\n    /**\n     * @param {string} pathString\n     * @param {*} data\n     * @param {function(string, string)=} onComplete\n     */\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\n    /**\n     * @param {string} pathString\n     * @param {function(string, string)=} onComplete\n     */\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\n    /**\n     * @param {Object.<string, *>} stats\n     */\n    ServerActions.prototype.reportStats = function (stats) { };\n    return ServerActions;\n}());\nexports.ServerActions = ServerActions;\n\n//# sourceMappingURL=ServerActions.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/ServerActions.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar IndexedFilter_1 = require(\"./IndexedFilter\");\nvar PriorityIndex_1 = require(\"../../snap/indexes/PriorityIndex\");\nvar Node_1 = require(\"../../../core/snap/Node\");\nvar ChildrenNode_1 = require(\"../../snap/ChildrenNode\");\n/**\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\n *\n * @constructor\n * @implements {NodeFilter}\n */\nvar RangedFilter = /** @class */ (function () {\n    /**\n     * @param {!QueryParams} params\n     */\n    function RangedFilter(params) {\n        this.indexedFilter_ = new IndexedFilter_1.IndexedFilter(params.getIndex());\n        this.index_ = params.getIndex();\n        this.startPost_ = RangedFilter.getStartPost_(params);\n        this.endPost_ = RangedFilter.getEndPost_(params);\n    }\n    /**\n     * @return {!NamedNode}\n     */\n    RangedFilter.prototype.getStartPost = function () {\n        return this.startPost_;\n    };\n    /**\n     * @return {!NamedNode}\n     */\n    RangedFilter.prototype.getEndPost = function () {\n        return this.endPost_;\n    };\n    /**\n     * @param {!NamedNode} node\n     * @return {boolean}\n     */\n    RangedFilter.prototype.matches = function (node) {\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\n            this.index_.compare(node, this.getEndPost()) <= 0);\n    };\n    /**\n     * @inheritDoc\n     */\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n        if (!this.matches(new Node_1.NamedNode(key, newChild))) {\n            newChild = ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n        }\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n    };\n    /**\n     * @inheritDoc\n     */\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n        if (newSnap.isLeafNode()) {\n            // Make sure we have a children node with the correct index, not a leaf node;\n            newSnap = ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n        }\n        var filtered = newSnap.withIndex(this.index_);\n        // Don't support priorities on queries\n        filtered = filtered.updatePriority(ChildrenNode_1.ChildrenNode.EMPTY_NODE);\n        var self = this;\n        newSnap.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (key, childNode) {\n            if (!self.matches(new Node_1.NamedNode(key, childNode))) {\n                filtered = filtered.updateImmediateChild(key, ChildrenNode_1.ChildrenNode.EMPTY_NODE);\n            }\n        });\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\n    };\n    /**\n     * @inheritDoc\n     */\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n        // Don't support priorities on queries\n        return oldSnap;\n    };\n    /**\n     * @inheritDoc\n     */\n    RangedFilter.prototype.filtersNodes = function () {\n        return true;\n    };\n    /**\n     * @inheritDoc\n     */\n    RangedFilter.prototype.getIndexedFilter = function () {\n        return this.indexedFilter_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RangedFilter.prototype.getIndex = function () {\n        return this.index_;\n    };\n    /**\n     * @param {!QueryParams} params\n     * @return {!NamedNode}\n     * @private\n     */\n    RangedFilter.getStartPost_ = function (params) {\n        if (params.hasStart()) {\n            var startName = params.getIndexStartName();\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\n        }\n        else {\n            return params.getIndex().minPost();\n        }\n    };\n    /**\n     * @param {!QueryParams} params\n     * @return {!NamedNode}\n     * @private\n     */\n    RangedFilter.getEndPost_ = function (params) {\n        if (params.hasEnd()) {\n            var endName = params.getIndexEndName();\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\n        }\n        else {\n            return params.getIndex().maxPost();\n        }\n    };\n    return RangedFilter;\n}());\nexports.RangedFilter = RangedFilter;\n\n//# sourceMappingURL=RangedFilter.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/view/filter/RangedFilter.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar app_1 = require(\"@firebase/app\");\nvar Database_1 = require(\"./src/api/Database\");\nexports.Database = Database_1.Database;\nvar Query_1 = require(\"./src/api/Query\");\nexports.Query = Query_1.Query;\nvar Reference_1 = require(\"./src/api/Reference\");\nexports.Reference = Reference_1.Reference;\nvar util_1 = require(\"./src/core/util/util\");\nexports.enableLogging = util_1.enableLogging;\nvar RepoManager_1 = require(\"./src/core/RepoManager\");\nvar INTERNAL = require(\"./src/api/internal\");\nvar TEST_ACCESS = require(\"./src/api/test_access\");\nvar util_2 = require(\"@firebase/util\");\nvar ServerValue = Database_1.Database.ServerValue;\nexports.ServerValue = ServerValue;\nfunction registerDatabase(instance) {\n    // Register the Database Service with the 'firebase' namespace.\n    var namespace = instance.INTERNAL.registerService('database', function (app, unused, url) { return RepoManager_1.RepoManager.getInstance().databaseFromApp(app, url); }, \n    // firebase.database namespace properties\n    {\n        Reference: Reference_1.Reference,\n        Query: Query_1.Query,\n        Database: Database_1.Database,\n        enableLogging: util_1.enableLogging,\n        INTERNAL: INTERNAL,\n        ServerValue: ServerValue,\n        TEST_ACCESS: TEST_ACCESS\n    }, null, true);\n    if (util_2.isNodeSdk()) {\n        module.exports = namespace;\n    }\n}\nexports.registerDatabase = registerDatabase;\nregisterDatabase(app_1.default);\nvar DataSnapshot_1 = require(\"./src/api/DataSnapshot\");\nexports.DataSnapshot = DataSnapshot_1.DataSnapshot;\nvar onDisconnect_1 = require(\"./src/api/onDisconnect\");\nexports.OnDisconnect = onDisconnect_1.OnDisconnect;\n\n//# sourceMappingURL=index.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/index.js\n// module id = 433\n// module chunks = 0 1","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\n/**\n * Wraps a DOM Storage object and:\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\n *\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\n * and one for localStorage.\n *\n * @constructor\n */\nvar DOMStorageWrapper = /** @class */ (function () {\n    /**\n     * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\n     */\n    function DOMStorageWrapper(domStorage_) {\n        this.domStorage_ = domStorage_;\n        // Use a prefix to avoid collisions with other stuff saved by the app.\n        this.prefix_ = 'firebase:';\n    }\n    /**\n     * @param {string} key The key to save the value under\n     * @param {?Object} value The value being stored, or null to remove the key.\n     */\n    DOMStorageWrapper.prototype.set = function (key, value) {\n        if (value == null) {\n            this.domStorage_.removeItem(this.prefixedName_(key));\n        }\n        else {\n            this.domStorage_.setItem(this.prefixedName_(key), util_1.stringify(value));\n        }\n    };\n    /**\n     * @param {string} key\n     * @return {*} The value that was stored under this key, or null\n     */\n    DOMStorageWrapper.prototype.get = function (key) {\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n        if (storedVal == null) {\n            return null;\n        }\n        else {\n            return util_1.jsonEval(storedVal);\n        }\n    };\n    /**\n     * @param {string} key\n     */\n    DOMStorageWrapper.prototype.remove = function (key) {\n        this.domStorage_.removeItem(this.prefixedName_(key));\n    };\n    /**\n     * @param {string} name\n     * @return {string}\n     */\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\n        return this.prefix_ + name;\n    };\n    DOMStorageWrapper.prototype.toString = function () {\n        return this.domStorage_.toString();\n    };\n    return DOMStorageWrapper;\n}());\nexports.DOMStorageWrapper = DOMStorageWrapper;\n\n//# sourceMappingURL=DOMStorageWrapper.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/storage/DOMStorageWrapper.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\n/**\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\n * (TODO: create interface for both to implement).\n *\n * @constructor\n */\nvar MemoryStorage = /** @class */ (function () {\n    function MemoryStorage() {\n        this.cache_ = {};\n        this.isInMemoryStorage = true;\n    }\n    MemoryStorage.prototype.set = function (key, value) {\n        if (value == null) {\n            delete this.cache_[key];\n        }\n        else {\n            this.cache_[key] = value;\n        }\n    };\n    MemoryStorage.prototype.get = function (key) {\n        if (util_1.contains(this.cache_, key)) {\n            return this.cache_[key];\n        }\n        return null;\n    };\n    MemoryStorage.prototype.remove = function (key) {\n        delete this.cache_[key];\n    };\n    return MemoryStorage;\n}());\nexports.MemoryStorage = MemoryStorage;\n\n//# sourceMappingURL=MemoryStorage.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/storage/MemoryStorage.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar TransactionResult = /** @class */ (function () {\n    /**\n     * A type for the resolve value of Firebase.transaction.\n     * @constructor\n     * @dict\n     * @param {boolean} committed\n     * @param {DataSnapshot} snapshot\n     */\n    function TransactionResult(committed, snapshot) {\n        this.committed = committed;\n        this.snapshot = snapshot;\n    }\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n    // for end-users\n    TransactionResult.prototype.toJSON = function () {\n        util_1.validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\n    };\n    return TransactionResult;\n}());\nexports.TransactionResult = TransactionResult;\n\n//# sourceMappingURL=TransactionResult.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/api/TransactionResult.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\n/**\n * Fancy ID generator that creates 20-character string identifiers with the\n * following properties:\n *\n * 1. They're based on timestamp so that they sort *after* any existing ids.\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\n *    collide with other clients' IDs.\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\n *    that will sort properly).\n * 4. They're monotonically increasing. Even if you generate more than one in\n *    the same timestamp, the latter ones will sort after the former ones. We do\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\n *    in the case of a timestamp collision).\n */\nexports.nextPushId = (function () {\n    // Modeled after base64 web-safe chars, but ordered by ASCII.\n    var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n    // Timestamp of last push, used to prevent local collisions if you push twice\n    // in one ms.\n    var lastPushTime = 0;\n    // We generate 72-bits of randomness which get turned into 12 characters and\n    // appended to the timestamp to prevent collisions with other clients. We\n    // store the last characters we generated because in the event of a collision,\n    // we'll use those same characters except \"incremented\" by one.\n    var lastRandChars = [];\n    return function (now) {\n        var duplicateTime = now === lastPushTime;\n        lastPushTime = now;\n        var i;\n        var timeStampChars = new Array(8);\n        for (i = 7; i >= 0; i--) {\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\n            // NOTE: Can't use << here because javascript will convert to int and lose\n            // the upper bits.\n            now = Math.floor(now / 64);\n        }\n        util_1.assert(now === 0, 'Cannot push at time == 0');\n        var id = timeStampChars.join('');\n        if (!duplicateTime) {\n            for (i = 0; i < 12; i++) {\n                lastRandChars[i] = Math.floor(Math.random() * 64);\n            }\n        }\n        else {\n            // If the timestamp hasn't changed since last push, use the same random\n            // number, except incremented by 1.\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n                lastRandChars[i] = 0;\n            }\n            lastRandChars[i]++;\n        }\n        for (i = 0; i < 12; i++) {\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\n        }\n        util_1.assert(id.length === 20, 'nextPushId: Length should be 20.');\n        return id;\n    };\n})();\n\n//# sourceMappingURL=NextPushId.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/util/NextPushId.js\n// module id = 437\n// module chunks = 0 1","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DataSnapshot_1 = require(\"../../api/DataSnapshot\");\nvar Event_1 = require(\"./Event\");\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"@firebase/util\");\n/**\n * Represents registration for 'value' events.\n */\nvar ValueEventRegistration = /** @class */ (function () {\n    /**\n     * @param {?function(!DataSnapshot)} callback_\n     * @param {?function(Error)} cancelCallback_\n     * @param {?Object} context_\n     */\n    function ValueEventRegistration(callback_, cancelCallback_, context_) {\n        this.callback_ = callback_;\n        this.cancelCallback_ = cancelCallback_;\n        this.context_ = context_;\n    }\n    /**\n     * @inheritDoc\n     */\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\n        return eventType === 'value';\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\n        var index = query.getQueryParams().getIndex();\n        return new Event_1.DataEvent('value', this, new DataSnapshot_1.DataSnapshot(change.snapshotNode, query.getRef(), index));\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\n        var ctx = this.context_;\n        if (eventData.getEventType() === 'cancel') {\n            util_2.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\n            var cancelCB_1 = this.cancelCallback_;\n            return function () {\n                // We know that error exists, we checked above that this is a cancel event\n                cancelCB_1.call(ctx, eventData.error);\n            };\n        }\n        else {\n            var cb_1 = this.callback_;\n            return function () {\n                cb_1.call(ctx, eventData.snapshot);\n            };\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\n        if (this.cancelCallback_) {\n            return new Event_1.CancelEvent(this, error, path);\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueEventRegistration.prototype.matches = function (other) {\n        if (!(other instanceof ValueEventRegistration)) {\n            return false;\n        }\n        else if (!other.callback_ || !this.callback_) {\n            // If no callback specified, we consider it to match any callback.\n            return true;\n        }\n        else {\n            return (other.callback_ === this.callback_ && other.context_ === this.context_);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\n        return this.callback_ !== null;\n    };\n    return ValueEventRegistration;\n}());\nexports.ValueEventRegistration = ValueEventRegistration;\n/**\n * Represents the registration of 1 or more child_xxx events.\n *\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\n * register a group of callbacks together in the future.\n *\n * @constructor\n * @implements {EventRegistration}\n */\nvar ChildEventRegistration = /** @class */ (function () {\n    /**\n     * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\n     * @param {?function(Error)} cancelCallback_\n     * @param {Object=} context_\n     */\n    function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\n        this.callbacks_ = callbacks_;\n        this.cancelCallback_ = cancelCallback_;\n        this.context_ = context_;\n    }\n    /**\n     * @inheritDoc\n     */\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\n        eventToCheck =\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n        return util_1.contains(this.callbacks_, eventToCheck);\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\n        if (this.cancelCallback_) {\n            return new Event_1.CancelEvent(this, error, path);\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\n        util_2.assert(change.childName != null, 'Child events should have a childName.');\n        var ref = query.getRef().child(/** @type {!string} */ (change.childName));\n        var index = query.getQueryParams().getIndex();\n        return new Event_1.DataEvent(change.type, this, new DataSnapshot_1.DataSnapshot(change.snapshotNode, ref, index), change.prevName);\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\n        var ctx = this.context_;\n        if (eventData.getEventType() === 'cancel') {\n            util_2.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\n            var cancelCB_2 = this.cancelCallback_;\n            return function () {\n                // We know that error exists, we checked above that this is a cancel event\n                cancelCB_2.call(ctx, eventData.error);\n            };\n        }\n        else {\n            var cb_2 = this.callbacks_[eventData.eventType];\n            return function () {\n                cb_2.call(ctx, eventData.snapshot, eventData.prevName);\n            };\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildEventRegistration.prototype.matches = function (other) {\n        if (other instanceof ChildEventRegistration) {\n            if (!this.callbacks_ || !other.callbacks_) {\n                return true;\n            }\n            else if (this.context_ === other.context_) {\n                var otherCount = util_1.getCount(other.callbacks_);\n                var thisCount = util_1.getCount(this.callbacks_);\n                if (otherCount === thisCount) {\n                    // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\n                    //  If event types don't match, not a match\n                    // If count is not 1, exact match across all\n                    if (otherCount === 1) {\n                        var otherKey /** @type {!string} */ = util_1.getAnyKey(other.callbacks_);\n                        var thisKey /** @type {!string} */ = util_1.getAnyKey(this.callbacks_);\n                        return (thisKey === otherKey &&\n                            (!other.callbacks_[otherKey] ||\n                                !this.callbacks_[thisKey] ||\n                                other.callbacks_[otherKey] === this.callbacks_[thisKey]));\n                    }\n                    else {\n                        // Exact match on each key.\n                        return util_1.every(this.callbacks_, function (eventType, cb) { return other.callbacks_[eventType] === cb; });\n                    }\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\n        return this.callbacks_ !== null;\n    };\n    return ChildEventRegistration;\n}());\nexports.ChildEventRegistration = ChildEventRegistration;\n\n//# sourceMappingURL=EventRegistration.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/view/EventRegistration.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\n/**\n * Encapsulates the data needed to raise an event\n * @implements {Event}\n */\nvar DataEvent = /** @class */ (function () {\n    /**\n     * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\n     * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\n     * @param {!DataSnapshot} snapshot The data backing the event\n     * @param {?string=} prevName Optional, the name of the previous child for child_* events.\n     */\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\n        this.eventType = eventType;\n        this.eventRegistration = eventRegistration;\n        this.snapshot = snapshot;\n        this.prevName = prevName;\n    }\n    /**\n     * @inheritDoc\n     */\n    DataEvent.prototype.getPath = function () {\n        var ref = this.snapshot.getRef();\n        if (this.eventType === 'value') {\n            return ref.path;\n        }\n        else {\n            return ref.getParent().path;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DataEvent.prototype.getEventType = function () {\n        return this.eventType;\n    };\n    /**\n     * @inheritDoc\n     */\n    DataEvent.prototype.getEventRunner = function () {\n        return this.eventRegistration.getEventRunner(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    DataEvent.prototype.toString = function () {\n        return (this.getPath().toString() +\n            ':' +\n            this.eventType +\n            ':' +\n            util_1.stringify(this.snapshot.exportVal()));\n    };\n    return DataEvent;\n}());\nexports.DataEvent = DataEvent;\nvar CancelEvent = /** @class */ (function () {\n    /**\n     * @param {EventRegistration} eventRegistration\n     * @param {Error} error\n     * @param {!Path} path\n     */\n    function CancelEvent(eventRegistration, error, path) {\n        this.eventRegistration = eventRegistration;\n        this.error = error;\n        this.path = path;\n    }\n    /**\n     * @inheritDoc\n     */\n    CancelEvent.prototype.getPath = function () {\n        return this.path;\n    };\n    /**\n     * @inheritDoc\n     */\n    CancelEvent.prototype.getEventType = function () {\n        return 'cancel';\n    };\n    /**\n     * @inheritDoc\n     */\n    CancelEvent.prototype.getEventRunner = function () {\n        return this.eventRegistration.getEventRunner(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CancelEvent.prototype.toString = function () {\n        return this.path.toString() + ':cancel';\n    };\n    return CancelEvent;\n}());\nexports.CancelEvent = CancelEvent;\n\n//# sourceMappingURL=Event.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/view/Event.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"./util/util\");\nvar AckUserWrite_1 = require(\"./operation/AckUserWrite\");\nvar ChildrenNode_1 = require(\"./snap/ChildrenNode\");\nvar util_3 = require(\"@firebase/util\");\nvar ImmutableTree_1 = require(\"./util/ImmutableTree\");\nvar ListenComplete_1 = require(\"./operation/ListenComplete\");\nvar Merge_1 = require(\"./operation/Merge\");\nvar Operation_1 = require(\"./operation/Operation\");\nvar Overwrite_1 = require(\"./operation/Overwrite\");\nvar Path_1 = require(\"./util/Path\");\nvar SyncPoint_1 = require(\"./SyncPoint\");\nvar WriteTree_1 = require(\"./WriteTree\");\n/**\n * SyncTree is the central class for managing event callback registration, data caching, views\n * (query processing), and event generation.  There are typically two SyncTree instances for\n * each Repo, one for the normal Firebase data, and one for the .info data.\n *\n * It has a number of responsibilities, including:\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\n *    (applyUserOverwrite(), applyUserMerge()).\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\n *    applyServerMerge()).\n *  - Generating user-facing events for server and user changes (all of the apply* methods\n *    return the set of events that need to be raised as a result).\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\n *    to the correct set of paths and queries to satisfy the current set of user event\n *    callbacks (listens are started/stopped using the provided listenProvider).\n *\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\n * events are returned to the caller rather than raised synchronously.\n *\n * @constructor\n */\nvar SyncTree = /** @class */ (function () {\n    /**\n     * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\n     *   to server data.\n     */\n    function SyncTree(listenProvider_) {\n        this.listenProvider_ = listenProvider_;\n        /**\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\n         * @type {!ImmutableTree.<!SyncPoint>}\n         * @private\n         */\n        this.syncPointTree_ = ImmutableTree_1.ImmutableTree.Empty;\n        /**\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\n         * @type {!WriteTree}\n         * @private\n         */\n        this.pendingWriteTree_ = new WriteTree_1.WriteTree();\n        this.tagToQueryMap_ = {};\n        this.queryToTagMap_ = {};\n    }\n    /**\n     * Apply the data changes for a user-generated set() or transaction() call.\n     *\n     * @param {!Path} path\n     * @param {!Node} newData\n     * @param {number} writeId\n     * @param {boolean=} visible\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\n        // Record pending write.\n        this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\n        if (!visible) {\n            return [];\n        }\n        else {\n            return this.applyOperationToSyncPoints_(new Overwrite_1.Overwrite(Operation_1.OperationSource.User, path, newData));\n        }\n    };\n    /**\n     * Apply the data from a user-generated update() call\n     *\n     * @param {!Path} path\n     * @param {!Object.<string, !Node>} changedChildren\n     * @param {!number} writeId\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\n        // Record pending merge.\n        this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\n        var changeTree = ImmutableTree_1.ImmutableTree.fromObject(changedChildren);\n        return this.applyOperationToSyncPoints_(new Merge_1.Merge(Operation_1.OperationSource.User, path, changeTree));\n    };\n    /**\n     * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\n     *\n     * @param {!number} writeId\n     * @param {boolean=} revert True if the given write failed and needs to be reverted\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.ackUserWrite = function (writeId, revert) {\n        if (revert === void 0) { revert = false; }\n        var write = this.pendingWriteTree_.getWrite(writeId);\n        var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\n        if (!needToReevaluate) {\n            return [];\n        }\n        else {\n            var affectedTree_1 = ImmutableTree_1.ImmutableTree.Empty;\n            if (write.snap != null) {\n                // overwrite\n                affectedTree_1 = affectedTree_1.set(Path_1.Path.Empty, true);\n            }\n            else {\n                util_3.forEach(write.children, function (pathString, node) {\n                    affectedTree_1 = affectedTree_1.set(new Path_1.Path(pathString), node);\n                });\n            }\n            return this.applyOperationToSyncPoints_(new AckUserWrite_1.AckUserWrite(write.path, affectedTree_1, revert));\n        }\n    };\n    /**\n     * Apply new server data for the specified path..\n     *\n     * @param {!Path} path\n     * @param {!Node} newData\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.applyServerOverwrite = function (path, newData) {\n        return this.applyOperationToSyncPoints_(new Overwrite_1.Overwrite(Operation_1.OperationSource.Server, path, newData));\n    };\n    /**\n     * Apply new server data to be merged in at the specified path.\n     *\n     * @param {!Path} path\n     * @param {!Object.<string, !Node>} changedChildren\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\n        var changeTree = ImmutableTree_1.ImmutableTree.fromObject(changedChildren);\n        return this.applyOperationToSyncPoints_(new Merge_1.Merge(Operation_1.OperationSource.Server, path, changeTree));\n    };\n    /**\n     * Apply a listen complete for a query\n     *\n     * @param {!Path} path\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.applyListenComplete = function (path) {\n        return this.applyOperationToSyncPoints_(new ListenComplete_1.ListenComplete(Operation_1.OperationSource.Server, path));\n    };\n    /**\n     * Apply new server data for the specified tagged query.\n     *\n     * @param {!Path} path\n     * @param {!Node} snap\n     * @param {!number} tag\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\n        var queryKey = this.queryKeyForTag_(tag);\n        if (queryKey != null) {\n            var r = SyncTree.parseQueryKey_(queryKey);\n            var queryPath = r.path, queryId = r.queryId;\n            var relativePath = Path_1.Path.relativePath(queryPath, path);\n            var op = new Overwrite_1.Overwrite(Operation_1.OperationSource.forServerTaggedQuery(queryId), relativePath, snap);\n            return this.applyTaggedOperation_(queryPath, op);\n        }\n        else {\n            // Query must have been removed already\n            return [];\n        }\n    };\n    /**\n     * Apply server data to be merged in for the specified tagged query.\n     *\n     * @param {!Path} path\n     * @param {!Object.<string, !Node>} changedChildren\n     * @param {!number} tag\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\n        var queryKey = this.queryKeyForTag_(tag);\n        if (queryKey) {\n            var r = SyncTree.parseQueryKey_(queryKey);\n            var queryPath = r.path, queryId = r.queryId;\n            var relativePath = Path_1.Path.relativePath(queryPath, path);\n            var changeTree = ImmutableTree_1.ImmutableTree.fromObject(changedChildren);\n            var op = new Merge_1.Merge(Operation_1.OperationSource.forServerTaggedQuery(queryId), relativePath, changeTree);\n            return this.applyTaggedOperation_(queryPath, op);\n        }\n        else {\n            // We've already removed the query. No big deal, ignore the update\n            return [];\n        }\n    };\n    /**\n     * Apply a listen complete for a tagged query\n     *\n     * @param {!Path} path\n     * @param {!number} tag\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\n        var queryKey = this.queryKeyForTag_(tag);\n        if (queryKey) {\n            var r = SyncTree.parseQueryKey_(queryKey);\n            var queryPath = r.path, queryId = r.queryId;\n            var relativePath = Path_1.Path.relativePath(queryPath, path);\n            var op = new ListenComplete_1.ListenComplete(Operation_1.OperationSource.forServerTaggedQuery(queryId), relativePath);\n            return this.applyTaggedOperation_(queryPath, op);\n        }\n        else {\n            // We've already removed the query. No big deal, ignore the update\n            return [];\n        }\n    };\n    /**\n     * Add an event callback for the specified query.\n     *\n     * @param {!Query} query\n     * @param {!EventRegistration} eventRegistration\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\n        var path = query.path;\n        var serverCache = null;\n        var foundAncestorDefaultView = false;\n        // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n        // Consider optimizing this once there's a better understanding of what actual behavior will be.\n        this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\n            var relativePath = Path_1.Path.relativePath(pathToSyncPoint, path);\n            serverCache = serverCache || sp.getCompleteServerCache(relativePath);\n            foundAncestorDefaultView =\n                foundAncestorDefaultView || sp.hasCompleteView();\n        });\n        var syncPoint = this.syncPointTree_.get(path);\n        if (!syncPoint) {\n            syncPoint = new SyncPoint_1.SyncPoint();\n            this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\n        }\n        else {\n            foundAncestorDefaultView =\n                foundAncestorDefaultView || syncPoint.hasCompleteView();\n            serverCache = serverCache || syncPoint.getCompleteServerCache(Path_1.Path.Empty);\n        }\n        var serverCacheComplete;\n        if (serverCache != null) {\n            serverCacheComplete = true;\n        }\n        else {\n            serverCacheComplete = false;\n            serverCache = ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n            var subtree = this.syncPointTree_.subtree(path);\n            subtree.foreachChild(function (childName, childSyncPoint) {\n                var completeCache = childSyncPoint.getCompleteServerCache(Path_1.Path.Empty);\n                if (completeCache) {\n                    serverCache = serverCache.updateImmediateChild(childName, completeCache);\n                }\n            });\n        }\n        var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\n        if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\n            // We need to track a tag for this query\n            var queryKey = SyncTree.makeQueryKey_(query);\n            util_1.assert(!(queryKey in this.queryToTagMap_), 'View does not exist, but we have a tag');\n            var tag = SyncTree.getNextQueryTag_();\n            this.queryToTagMap_[queryKey] = tag;\n            // Coerce to string to avoid sparse arrays.\n            this.tagToQueryMap_['_' + tag] = queryKey;\n        }\n        var writesCache = this.pendingWriteTree_.childWrites(path);\n        var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\n        if (!viewAlreadyExists && !foundAncestorDefaultView) {\n            var view /** @type !View */ = syncPoint.viewForQuery(query);\n            events = events.concat(this.setupListener_(query, view));\n        }\n        return events;\n    };\n    /**\n     * Remove event callback(s).\n     *\n     * If query is the default query, we'll check all queries for the specified eventRegistration.\n     * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\n     *\n     * @param {!Query} query\n     * @param {?EventRegistration} eventRegistration If null, all callbacks are removed.\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\n     */\n    SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\n        var _this = this;\n        // Find the syncPoint first. Then deal with whether or not it has matching listeners\n        var path = query.path;\n        var maybeSyncPoint = this.syncPointTree_.get(path);\n        var cancelEvents = [];\n        // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n        // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n        // not loadsAllData().\n        if (maybeSyncPoint &&\n            (query.queryIdentifier() === 'default' ||\n                maybeSyncPoint.viewExistsForQuery(query))) {\n            /**\n             * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\n             */\n            var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\n            if (maybeSyncPoint.isEmpty()) {\n                this.syncPointTree_ = this.syncPointTree_.remove(path);\n            }\n            var removed = removedAndEvents.removed;\n            cancelEvents = removedAndEvents.events;\n            // We may have just removed one of many listeners and can short-circuit this whole process\n            // We may also not have removed a default listener, in which case all of the descendant listeners should already be\n            // properly set up.\n            //\n            // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n            // queryId === 'default'\n            var removingDefault = -1 !==\n                removed.findIndex(function (query) {\n                    return query.getQueryParams().loadsAllData();\n                });\n            var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\n                return parentSyncPoint.hasCompleteView();\n            });\n            if (removingDefault && !covered) {\n                var subtree = this.syncPointTree_.subtree(path);\n                // There are potentially child listeners. Determine what if any listens we need to send before executing the\n                // removal\n                if (!subtree.isEmpty()) {\n                    // We need to fold over our subtree and collect the listeners to send\n                    var newViews = this.collectDistinctViewsForSubTree_(subtree);\n                    // Ok, we've collected all the listens we need. Set them up.\n                    for (var i = 0; i < newViews.length; ++i) {\n                        var view = newViews[i], newQuery = view.getQuery();\n                        var listener = this.createListenerForView_(view);\n                        this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\n                    }\n                }\n                else {\n                    // There's nothing below us, so nothing we need to start listening on\n                }\n            }\n            // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n            // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n            // Also, note that if we have a cancelError, it's already been removed at the provider level.\n            if (!covered && removed.length > 0 && !cancelError) {\n                // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n                // default. Otherwise, we need to iterate through and cancel each individual query\n                if (removingDefault) {\n                    // We don't tag default listeners\n                    var defaultTag = null;\n                    this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\n                }\n                else {\n                    removed.forEach(function (queryToRemove) {\n                        var tagToRemove = _this.queryToTagMap_[SyncTree.makeQueryKey_(queryToRemove)];\n                        _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\n                    });\n                }\n            }\n            // Now, clear all of the tags we're tracking for the removed listens\n            this.removeTags_(removed);\n        }\n        else {\n            // No-op, this listener must've been already removed\n        }\n        return cancelEvents;\n    };\n    /**\n     * Returns a complete cache, if we have one, of the data at a particular path. The location must have a listener above\n     * it, but as this is only used by transaction code, that should always be the case anyways.\n     *\n     * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\n     * @param {!Path} path The path to the data we want\n     * @param {Array.<number>=} writeIdsToExclude A specific set to be excluded\n     * @return {?Node}\n     */\n    SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\n        var includeHiddenSets = true;\n        var writeTree = this.pendingWriteTree_;\n        var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\n            var relativePath = Path_1.Path.relativePath(pathSoFar, path);\n            var serverCache = syncPoint.getCompleteServerCache(relativePath);\n            if (serverCache) {\n                return serverCache;\n            }\n        });\n        return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\n    };\n    /**\n     * This collapses multiple unfiltered views into a single view, since we only need a single\n     * listener for them.\n     *\n     * @param {!ImmutableTree.<!SyncPoint>} subtree\n     * @return {!Array.<!View>}\n     * @private\n     */\n    SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\n        return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n            if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\n                var completeView = maybeChildSyncPoint.getCompleteView();\n                return [completeView];\n            }\n            else {\n                // No complete view here, flatten any deeper listens into an array\n                var views_1 = [];\n                if (maybeChildSyncPoint) {\n                    views_1 = maybeChildSyncPoint.getQueryViews();\n                }\n                util_3.forEach(childMap, function (key, childViews) {\n                    views_1 = views_1.concat(childViews);\n                });\n                return views_1;\n            }\n        });\n    };\n    /**\n     * @param {!Array.<!Query>} queries\n     * @private\n     */\n    SyncTree.prototype.removeTags_ = function (queries) {\n        for (var j = 0; j < queries.length; ++j) {\n            var removedQuery = queries[j];\n            if (!removedQuery.getQueryParams().loadsAllData()) {\n                // We should have a tag for this\n                var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\n                var removedQueryTag = this.queryToTagMap_[removedQueryKey];\n                delete this.queryToTagMap_[removedQueryKey];\n                delete this.tagToQueryMap_['_' + removedQueryTag];\n            }\n        }\n    };\n    /**\n     * Normalizes a query to a query we send the server for listening\n     * @param {!Query} query\n     * @return {!Query} The normalized query\n     * @private\n     */\n    SyncTree.queryForListening_ = function (query) {\n        if (query.getQueryParams().loadsAllData() &&\n            !query.getQueryParams().isDefault()) {\n            // We treat queries that load all data as default queries\n            // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n            // from Query\n            return /** @type {!Query} */ query.getRef();\n        }\n        else {\n            return query;\n        }\n    };\n    /**\n     * For a given new listen, manage the de-duplication of outstanding subscriptions.\n     *\n     * @param {!Query} query\n     * @param {!View} view\n     * @return {!Array.<!Event>} This method can return events to support synchronous data sources\n     * @private\n     */\n    SyncTree.prototype.setupListener_ = function (query, view) {\n        var path = query.path;\n        var tag = this.tagForQuery_(query);\n        var listener = this.createListenerForView_(view);\n        var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\n        var subtree = this.syncPointTree_.subtree(path);\n        // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n        // may need to shadow other listens as well.\n        if (tag) {\n            util_1.assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\n        }\n        else {\n            // Shadow everything at or below this location, this is a default listener.\n            var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n                if (!relativePath.isEmpty() &&\n                    maybeChildSyncPoint &&\n                    maybeChildSyncPoint.hasCompleteView()) {\n                    return [maybeChildSyncPoint.getCompleteView().getQuery()];\n                }\n                else {\n                    // No default listener here, flatten any deeper queries into an array\n                    var queries_1 = [];\n                    if (maybeChildSyncPoint) {\n                        queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) { return view.getQuery(); }));\n                    }\n                    util_3.forEach(childMap, function (key, childQueries) {\n                        queries_1 = queries_1.concat(childQueries);\n                    });\n                    return queries_1;\n                }\n            });\n            for (var i = 0; i < queriesToStop.length; ++i) {\n                var queryToStop = queriesToStop[i];\n                this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\n            }\n        }\n        return events;\n    };\n    /**\n     *\n     * @param {!View} view\n     * @return {{hashFn: function(), onComplete: function(!string, *)}}\n     * @private\n     */\n    SyncTree.prototype.createListenerForView_ = function (view) {\n        var _this = this;\n        var query = view.getQuery();\n        var tag = this.tagForQuery_(query);\n        return {\n            hashFn: function () {\n                var cache = view.getServerCache() || ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n                return cache.hash();\n            },\n            onComplete: function (status) {\n                if (status === 'ok') {\n                    if (tag) {\n                        return _this.applyTaggedListenComplete(query.path, tag);\n                    }\n                    else {\n                        return _this.applyListenComplete(query.path);\n                    }\n                }\n                else {\n                    // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n                    // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n                    var error = util_2.errorForServerCode(status, query);\n                    return _this.removeEventRegistration(query, \n                    /*eventRegistration*/ null, error);\n                }\n            }\n        };\n    };\n    /**\n     * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\n     * @private\n     * @param {!Query} query\n     * @return {string}\n     */\n    SyncTree.makeQueryKey_ = function (query) {\n        return query.path.toString() + '$' + query.queryIdentifier();\n    };\n    /**\n     * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\n     * @private\n     * @param {!string} queryKey\n     * @return {{queryId: !string, path: !Path}}\n     */\n    SyncTree.parseQueryKey_ = function (queryKey) {\n        var splitIndex = queryKey.indexOf('$');\n        util_1.assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\n        return {\n            queryId: queryKey.substr(splitIndex + 1),\n            path: new Path_1.Path(queryKey.substr(0, splitIndex))\n        };\n    };\n    /**\n     * Return the query associated with the given tag, if we have one\n     * @param {!number} tag\n     * @return {?string}\n     * @private\n     */\n    SyncTree.prototype.queryKeyForTag_ = function (tag) {\n        return this.tagToQueryMap_['_' + tag];\n    };\n    /**\n     * Return the tag associated with the given query.\n     * @param {!Query} query\n     * @return {?number}\n     * @private\n     */\n    SyncTree.prototype.tagForQuery_ = function (query) {\n        var queryKey = SyncTree.makeQueryKey_(query);\n        return util_3.safeGet(this.queryToTagMap_, queryKey);\n    };\n    /**\n     * Static accessor for query tags.\n     * @return {number}\n     * @private\n     */\n    SyncTree.getNextQueryTag_ = function () {\n        return SyncTree.nextQueryTag_++;\n    };\n    /**\n     * A helper method to apply tagged operations\n     *\n     * @param {!Path} queryPath\n     * @param {!Operation} operation\n     * @return {!Array.<!Event>}\n     * @private\n     */\n    SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\n        var syncPoint = this.syncPointTree_.get(queryPath);\n        util_1.assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n        var writesCache = this.pendingWriteTree_.childWrites(queryPath);\n        return syncPoint.applyOperation(operation, writesCache, \n        /*serverCache=*/ null);\n    };\n    /**\n     * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\n     *\n     * NOTES:\n     * - Descendant SyncPoints will be visited first (since we raise events depth-first).\n  \n     * - We call applyOperation() on each SyncPoint passing three things:\n     *   1. A version of the Operation that has been made relative to the SyncPoint location.\n     *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\n     *   3. A snapshot Node with cached server data, if we have it.\n  \n     * - We concatenate all of the events returned by each SyncPoint and return the result.\n     *\n     * @param {!Operation} operation\n     * @return {!Array.<!Event>}\n     * @private\n     */\n    SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\n        return this.applyOperationHelper_(operation, this.syncPointTree_, \n        /*serverCache=*/ null, this.pendingWriteTree_.childWrites(Path_1.Path.Empty));\n    };\n    /**\n     * Recursive helper for applyOperationToSyncPoints_\n     *\n     * @private\n     * @param {!Operation} operation\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\n     * @param {?Node} serverCache\n     * @param {!WriteTreeRef} writesCache\n     * @return {!Array.<!Event>}\n     */\n    SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\n        if (operation.path.isEmpty()) {\n            return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\n        }\n        else {\n            var syncPoint = syncPointTree.get(Path_1.Path.Empty);\n            // If we don't have cached server data, see if we can get it from this SyncPoint.\n            if (serverCache == null && syncPoint != null) {\n                serverCache = syncPoint.getCompleteServerCache(Path_1.Path.Empty);\n            }\n            var events = [];\n            var childName = operation.path.getFront();\n            var childOperation = operation.operationForChild(childName);\n            var childTree = syncPointTree.children.get(childName);\n            if (childTree && childOperation) {\n                var childServerCache = serverCache\n                    ? serverCache.getImmediateChild(childName)\n                    : null;\n                var childWritesCache = writesCache.child(childName);\n                events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\n            }\n            if (syncPoint) {\n                events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\n            }\n            return events;\n        }\n    };\n    /**\n     * Recursive helper for applyOperationToSyncPoints_\n     *\n     * @private\n     * @param {!Operation} operation\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\n     * @param {?Node} serverCache\n     * @param {!WriteTreeRef} writesCache\n     * @return {!Array.<!Event>}\n     */\n    SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\n        var _this = this;\n        var syncPoint = syncPointTree.get(Path_1.Path.Empty);\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\n        if (serverCache == null && syncPoint != null) {\n            serverCache = syncPoint.getCompleteServerCache(Path_1.Path.Empty);\n        }\n        var events = [];\n        syncPointTree.children.inorderTraversal(function (childName, childTree) {\n            var childServerCache = serverCache\n                ? serverCache.getImmediateChild(childName)\n                : null;\n            var childWritesCache = writesCache.child(childName);\n            var childOperation = operation.operationForChild(childName);\n            if (childOperation) {\n                events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\n            }\n        });\n        if (syncPoint) {\n            events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\n        }\n        return events;\n    };\n    /**\n     * Static tracker for next query tag.\n     * @type {number}\n     * @private\n     */\n    SyncTree.nextQueryTag_ = 1;\n    return SyncTree;\n}());\nexports.SyncTree = SyncTree;\n\n//# sourceMappingURL=SyncTree.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/SyncTree.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar Path_1 = require(\"../util/Path\");\nvar Operation_1 = require(\"./Operation\");\nvar AckUserWrite = /** @class */ (function () {\n    /**\n     *\n     * @param {!Path} path\n     * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\n     * @param {!boolean} revert\n     */\n    function AckUserWrite(\n    /**@inheritDoc */ path, \n    /**@inheritDoc */ affectedTree, \n    /**@inheritDoc */ revert) {\n        this.path = path;\n        this.affectedTree = affectedTree;\n        this.revert = revert;\n        /** @inheritDoc */\n        this.type = Operation_1.OperationType.ACK_USER_WRITE;\n        /** @inheritDoc */\n        this.source = Operation_1.OperationSource.User;\n    }\n    /**\n     * @inheritDoc\n     */\n    AckUserWrite.prototype.operationForChild = function (childName) {\n        if (!this.path.isEmpty()) {\n            util_1.assert(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\n            return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\n        }\n        else if (this.affectedTree.value != null) {\n            util_1.assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\n            // All child locations are affected as well; just return same operation.\n            return this;\n        }\n        else {\n            var childTree = this.affectedTree.subtree(new Path_1.Path(childName));\n            return new AckUserWrite(Path_1.Path.Empty, childTree, this.revert);\n        }\n    };\n    return AckUserWrite;\n}());\nexports.AckUserWrite = AckUserWrite;\n\n//# sourceMappingURL=AckUserWrite.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/operation/AckUserWrite.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Path_1 = require(\"../util/Path\");\nvar Operation_1 = require(\"./Operation\");\n/**\n * @param {!OperationSource} source\n * @param {!Path} path\n * @constructor\n * @implements {Operation}\n */\nvar ListenComplete = /** @class */ (function () {\n    function ListenComplete(source, path) {\n        this.source = source;\n        this.path = path;\n        /** @inheritDoc */\n        this.type = Operation_1.OperationType.LISTEN_COMPLETE;\n    }\n    ListenComplete.prototype.operationForChild = function (childName) {\n        if (this.path.isEmpty()) {\n            return new ListenComplete(this.source, Path_1.Path.Empty);\n        }\n        else {\n            return new ListenComplete(this.source, this.path.popFront());\n        }\n    };\n    return ListenComplete;\n}());\nexports.ListenComplete = ListenComplete;\n\n//# sourceMappingURL=ListenComplete.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/operation/ListenComplete.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Operation_1 = require(\"./Operation\");\nvar Overwrite_1 = require(\"./Overwrite\");\nvar Path_1 = require(\"../util/Path\");\nvar util_1 = require(\"@firebase/util\");\n/**\n * @param {!OperationSource} source\n * @param {!Path} path\n * @param {!ImmutableTree.<!Node>} children\n * @constructor\n * @implements {Operation}\n */\nvar Merge = /** @class */ (function () {\n    function Merge(\n    /**@inheritDoc */ source, \n    /**@inheritDoc */ path, \n    /**@inheritDoc */ children) {\n        this.source = source;\n        this.path = path;\n        this.children = children;\n        /** @inheritDoc */\n        this.type = Operation_1.OperationType.MERGE;\n    }\n    /**\n     * @inheritDoc\n     */\n    Merge.prototype.operationForChild = function (childName) {\n        if (this.path.isEmpty()) {\n            var childTree = this.children.subtree(new Path_1.Path(childName));\n            if (childTree.isEmpty()) {\n                // This child is unaffected\n                return null;\n            }\n            else if (childTree.value) {\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n                return new Overwrite_1.Overwrite(this.source, Path_1.Path.Empty, childTree.value);\n            }\n            else {\n                // This is a merge at a deeper level\n                return new Merge(this.source, Path_1.Path.Empty, childTree);\n            }\n        }\n        else {\n            util_1.assert(this.path.getFront() === childName, \"Can't get a merge for a child not on the path of the operation\");\n            return new Merge(this.source, this.path.popFront(), this.children);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Merge.prototype.toString = function () {\n        return ('Operation(' +\n            this.path +\n            ': ' +\n            this.source.toString() +\n            ' merge: ' +\n            this.children.toString() +\n            ')');\n    };\n    return Merge;\n}());\nexports.Merge = Merge;\n\n//# sourceMappingURL=Merge.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/operation/Merge.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar IndexedFilter_1 = require(\"./filter/IndexedFilter\");\nvar ViewProcessor_1 = require(\"./ViewProcessor\");\nvar ChildrenNode_1 = require(\"../snap/ChildrenNode\");\nvar CacheNode_1 = require(\"./CacheNode\");\nvar ViewCache_1 = require(\"./ViewCache\");\nvar EventGenerator_1 = require(\"./EventGenerator\");\nvar util_1 = require(\"@firebase/util\");\nvar Operation_1 = require(\"../operation/Operation\");\nvar Change_1 = require(\"./Change\");\nvar PriorityIndex_1 = require(\"../snap/indexes/PriorityIndex\");\n/**\n * A view represents a specific location and query that has 1 or more event registrations.\n *\n * It does several things:\n *  - Maintains the list of event registrations for this location/query.\n *  - Maintains a cache of the data visible for this location/query.\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\n *    registrations returns the set of events to be raised.\n * @constructor\n */\nvar View = /** @class */ (function () {\n    /**\n     *\n     * @param {!Query} query_\n     * @param {!ViewCache} initialViewCache\n     */\n    function View(query_, initialViewCache) {\n        this.query_ = query_;\n        this.eventRegistrations_ = [];\n        var params = this.query_.getQueryParams();\n        var indexFilter = new IndexedFilter_1.IndexedFilter(params.getIndex());\n        var filter = params.getNodeFilter();\n        /**\n         * @type {ViewProcessor}\n         * @private\n         */\n        this.processor_ = new ViewProcessor_1.ViewProcessor(filter);\n        var initialServerCache = initialViewCache.getServerCache();\n        var initialEventCache = initialViewCache.getEventCache();\n        // Don't filter server node with other filter than index, wait for tagged listen\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode_1.ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\n        var eventSnap = filter.updateFullNode(ChildrenNode_1.ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\n        var newServerCache = new CacheNode_1.CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\n        var newEventCache = new CacheNode_1.CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\n        /**\n         * @type {!ViewCache}\n         * @private\n         */\n        this.viewCache_ = new ViewCache_1.ViewCache(newEventCache, newServerCache);\n        /**\n         * @type {!EventGenerator}\n         * @private\n         */\n        this.eventGenerator_ = new EventGenerator_1.EventGenerator(this.query_);\n    }\n    /**\n     * @return {!Query}\n     */\n    View.prototype.getQuery = function () {\n        return this.query_;\n    };\n    /**\n     * @return {?Node}\n     */\n    View.prototype.getServerCache = function () {\n        return this.viewCache_.getServerCache().getNode();\n    };\n    /**\n     * @param {!Path} path\n     * @return {?Node}\n     */\n    View.prototype.getCompleteServerCache = function (path) {\n        var cache = this.viewCache_.getCompleteServerSnap();\n        if (cache) {\n            // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n            // we need to see if it contains the child we're interested in.\n            if (this.query_.getQueryParams().loadsAllData() ||\n                (!path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty())) {\n                return cache.getChild(path);\n            }\n        }\n        return null;\n    };\n    /**\n     * @return {boolean}\n     */\n    View.prototype.isEmpty = function () {\n        return this.eventRegistrations_.length === 0;\n    };\n    /**\n     * @param {!EventRegistration} eventRegistration\n     */\n    View.prototype.addEventRegistration = function (eventRegistration) {\n        this.eventRegistrations_.push(eventRegistration);\n    };\n    /**\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\n     */\n    View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\n        var cancelEvents = [];\n        if (cancelError) {\n            util_1.assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\n            var path_1 = this.query_.path;\n            this.eventRegistrations_.forEach(function (registration) {\n                cancelError /** @type {!Error} */ = cancelError;\n                var maybeEvent = registration.createCancelEvent(cancelError, path_1);\n                if (maybeEvent) {\n                    cancelEvents.push(maybeEvent);\n                }\n            });\n        }\n        if (eventRegistration) {\n            var remaining = [];\n            for (var i = 0; i < this.eventRegistrations_.length; ++i) {\n                var existing = this.eventRegistrations_[i];\n                if (!existing.matches(eventRegistration)) {\n                    remaining.push(existing);\n                }\n                else if (eventRegistration.hasAnyCallback()) {\n                    // We're removing just this one\n                    remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\n                    break;\n                }\n            }\n            this.eventRegistrations_ = remaining;\n        }\n        else {\n            this.eventRegistrations_ = [];\n        }\n        return cancelEvents;\n    };\n    /**\n     * Applies the given Operation, updates our cache, and returns the appropriate events.\n     *\n     * @param {!Operation} operation\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} completeServerCache\n     * @return {!Array.<!Event>}\n     */\n    View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\n        if (operation.type === Operation_1.OperationType.MERGE &&\n            operation.source.queryId !== null) {\n            util_1.assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\n            util_1.assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\n        }\n        var oldViewCache = this.viewCache_;\n        var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\n        this.processor_.assertIndexed(result.viewCache);\n        util_1.assert(result.viewCache.getServerCache().isFullyInitialized() ||\n            !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\n        this.viewCache_ = result.viewCache;\n        return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\n    };\n    /**\n     * @param {!EventRegistration} registration\n     * @return {!Array.<!Event>}\n     */\n    View.prototype.getInitialEvents = function (registration) {\n        var eventSnap = this.viewCache_.getEventCache();\n        var initialChanges = [];\n        if (!eventSnap.getNode().isLeafNode()) {\n            var eventNode = eventSnap.getNode();\n            eventNode.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (key, childNode) {\n                initialChanges.push(Change_1.Change.childAddedChange(key, childNode));\n            });\n        }\n        if (eventSnap.isFullyInitialized()) {\n            initialChanges.push(Change_1.Change.valueChange(eventSnap.getNode()));\n        }\n        return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\n    };\n    /**\n     * @private\n     * @param {!Array.<!Change>} changes\n     * @param {!Node} eventCache\n     * @param {EventRegistration=} eventRegistration\n     * @return {!Array.<!Event>}\n     */\n    View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\n        var registrations = eventRegistration\n            ? [eventRegistration]\n            : this.eventRegistrations_;\n        return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\n    };\n    return View;\n}());\nexports.View = View;\n\n//# sourceMappingURL=View.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/view/View.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Operation_1 = require(\"../operation/Operation\");\nvar util_1 = require(\"@firebase/util\");\nvar ChildChangeAccumulator_1 = require(\"./ChildChangeAccumulator\");\nvar Change_1 = require(\"./Change\");\nvar ChildrenNode_1 = require(\"../snap/ChildrenNode\");\nvar KeyIndex_1 = require(\"../snap/indexes/KeyIndex\");\nvar ImmutableTree_1 = require(\"../util/ImmutableTree\");\nvar Path_1 = require(\"../util/Path\");\nvar CompleteChildSource_1 = require(\"./CompleteChildSource\");\n/**\n * @constructor\n * @struct\n */\nvar ProcessorResult = /** @class */ (function () {\n    /**\n     * @param {!ViewCache} viewCache\n     * @param {!Array.<!Change>} changes\n     */\n    function ProcessorResult(viewCache, changes) {\n        this.viewCache = viewCache;\n        this.changes = changes;\n    }\n    return ProcessorResult;\n}());\nexports.ProcessorResult = ProcessorResult;\n/**\n * @constructor\n */\nvar ViewProcessor = /** @class */ (function () {\n    /**\n     * @param {!NodeFilter} filter_\n     */\n    function ViewProcessor(filter_) {\n        this.filter_ = filter_;\n    }\n    /**\n     * @param {!ViewCache} viewCache\n     */\n    ViewProcessor.prototype.assertIndexed = function (viewCache) {\n        util_1.assert(viewCache\n            .getEventCache()\n            .getNode()\n            .isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\n        util_1.assert(viewCache\n            .getServerCache()\n            .getNode()\n            .isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\n    };\n    /**\n     * @param {!ViewCache} oldViewCache\n     * @param {!Operation} operation\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} completeCache\n     * @return {!ProcessorResult}\n     */\n    ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\n        var accumulator = new ChildChangeAccumulator_1.ChildChangeAccumulator();\n        var newViewCache, filterServerNode;\n        if (operation.type === Operation_1.OperationType.OVERWRITE) {\n            var overwrite = operation;\n            if (overwrite.source.fromUser) {\n                newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\n            }\n            else {\n                util_1.assert(overwrite.source.fromServer, 'Unknown source.');\n                // We filter the node if it's a tagged update or the node has been previously filtered  and the\n                // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n                // again\n                filterServerNode =\n                    overwrite.source.tagged ||\n                        (oldViewCache.getServerCache().isFiltered() &&\n                            !overwrite.path.isEmpty());\n                newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\n            }\n        }\n        else if (operation.type === Operation_1.OperationType.MERGE) {\n            var merge = operation;\n            if (merge.source.fromUser) {\n                newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\n            }\n            else {\n                util_1.assert(merge.source.fromServer, 'Unknown source.');\n                // We filter the node if it's a tagged update or the node has been previously filtered\n                filterServerNode =\n                    merge.source.tagged || oldViewCache.getServerCache().isFiltered();\n                newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\n            }\n        }\n        else if (operation.type === Operation_1.OperationType.ACK_USER_WRITE) {\n            var ackUserWrite = operation;\n            if (!ackUserWrite.revert) {\n                newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\n            }\n            else {\n                newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\n            }\n        }\n        else if (operation.type === Operation_1.OperationType.LISTEN_COMPLETE) {\n            newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\n        }\n        else {\n            throw util_1.assertionError('Unknown operation type: ' + operation.type);\n        }\n        var changes = accumulator.getChanges();\n        ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\n        return new ProcessorResult(newViewCache, changes);\n    };\n    /**\n     * @param {!ViewCache} oldViewCache\n     * @param {!ViewCache} newViewCache\n     * @param {!Array.<!Change>} accumulator\n     * @private\n     */\n    ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\n        var eventSnap = newViewCache.getEventCache();\n        if (eventSnap.isFullyInitialized()) {\n            var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n            var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\n            if (accumulator.length > 0 ||\n                !oldViewCache.getEventCache().isFullyInitialized() ||\n                (isLeafOrEmpty &&\n                    !eventSnap\n                        .getNode()\n                        .equals(/** @type {!Node} */ (oldCompleteSnap))) ||\n                !eventSnap\n                    .getNode()\n                    .getPriority()\n                    .equals(oldCompleteSnap.getPriority())) {\n                accumulator.push(Change_1.Change.valueChange(\n                /** @type {!Node} */ newViewCache.getCompleteEventSnap()));\n            }\n        }\n    };\n    /**\n     * @param {!ViewCache} viewCache\n     * @param {!Path} changePath\n     * @param {!WriteTreeRef} writesCache\n     * @param {!CompleteChildSource} source\n     * @param {!ChildChangeAccumulator} accumulator\n     * @return {!ViewCache}\n     * @private\n     */\n    ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\n        var oldEventSnap = viewCache.getEventCache();\n        if (writesCache.shadowingWrite(changePath) != null) {\n            // we have a shadowing write, ignore changes\n            return viewCache;\n        }\n        else {\n            var newEventCache = void 0, serverNode = void 0;\n            if (changePath.isEmpty()) {\n                // TODO: figure out how this plays with \"sliding ack windows\"\n                util_1.assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\n                if (viewCache.getServerCache().isFiltered()) {\n                    // We need to special case this, because we need to only apply writes to complete children, or\n                    // we might end up raising events for incomplete children. If the server data is filtered deep\n                    // writes cannot be guaranteed to be complete\n                    var serverCache = viewCache.getCompleteServerSnap();\n                    var completeChildren = serverCache instanceof ChildrenNode_1.ChildrenNode\n                        ? serverCache\n                        : ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n                    var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\n                }\n                else {\n                    var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\n                }\n            }\n            else {\n                var childKey = changePath.getFront();\n                if (childKey == '.priority') {\n                    util_1.assert(changePath.getLength() == 1, \"Can't have a priority with additional path components\");\n                    var oldEventNode = oldEventSnap.getNode();\n                    serverNode = viewCache.getServerCache().getNode();\n                    // we might have overwrites for this priority\n                    var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\n                    if (updatedPriority != null) {\n                        newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\n                    }\n                    else {\n                        // priority didn't change, keep old node\n                        newEventCache = oldEventSnap.getNode();\n                    }\n                }\n                else {\n                    var childChangePath = changePath.popFront();\n                    // update child\n                    var newEventChild = void 0;\n                    if (oldEventSnap.isCompleteForChild(childKey)) {\n                        serverNode = viewCache.getServerCache().getNode();\n                        var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\n                        if (eventChildUpdate != null) {\n                            newEventChild = oldEventSnap\n                                .getNode()\n                                .getImmediateChild(childKey)\n                                .updateChild(childChangePath, eventChildUpdate);\n                        }\n                        else {\n                            // Nothing changed, just keep the old child\n                            newEventChild = oldEventSnap\n                                .getNode()\n                                .getImmediateChild(childKey);\n                        }\n                    }\n                    else {\n                        newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\n                    }\n                    if (newEventChild != null) {\n                        newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\n                    }\n                    else {\n                        // no complete child available or no change\n                        newEventCache = oldEventSnap.getNode();\n                    }\n                }\n            }\n            return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());\n        }\n    };\n    /**\n     * @param {!ViewCache} oldViewCache\n     * @param {!Path} changePath\n     * @param {!Node} changedSnap\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} completeCache\n     * @param {boolean} filterServerNode\n     * @param {!ChildChangeAccumulator} accumulator\n     * @return {!ViewCache}\n     * @private\n     */\n    ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\n        var oldServerSnap = oldViewCache.getServerCache();\n        var newServerCache;\n        var serverFilter = filterServerNode\n            ? this.filter_\n            : this.filter_.getIndexedFilter();\n        if (changePath.isEmpty()) {\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\n        }\n        else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n            // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n            var newServerNode = oldServerSnap\n                .getNode()\n                .updateChild(changePath, changedSnap);\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\n        }\n        else {\n            var childKey = changePath.getFront();\n            if (!oldServerSnap.isCompleteForPath(changePath) &&\n                changePath.getLength() > 1) {\n                // We don't update incomplete nodes with updates intended for other listeners\n                return oldViewCache;\n            }\n            var childChangePath = changePath.popFront();\n            var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n            var newChildNode = childNode.updateChild(childChangePath, changedSnap);\n            if (childKey == '.priority') {\n                newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\n            }\n            else {\n                newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, CompleteChildSource_1.NO_COMPLETE_CHILD_SOURCE, null);\n            }\n        }\n        var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());\n        var source = new CompleteChildSource_1.WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\n        return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\n    };\n    /**\n     * @param {!ViewCache} oldViewCache\n     * @param {!Path} changePath\n     * @param {!Node} changedSnap\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} completeCache\n     * @param {!ChildChangeAccumulator} accumulator\n     * @return {!ViewCache}\n     * @private\n     */\n    ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\n        var oldEventSnap = oldViewCache.getEventCache();\n        var newViewCache, newEventCache;\n        var source = new CompleteChildSource_1.WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\n        if (changePath.isEmpty()) {\n            newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\n            newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\n        }\n        else {\n            var childKey = changePath.getFront();\n            if (childKey === '.priority') {\n                newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\n                newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\n            }\n            else {\n                var childChangePath = changePath.popFront();\n                var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n                var newChild = void 0;\n                if (childChangePath.isEmpty()) {\n                    // Child overwrite, we can replace the child\n                    newChild = changedSnap;\n                }\n                else {\n                    var childNode = source.getCompleteChild(childKey);\n                    if (childNode != null) {\n                        if (childChangePath.getBack() === '.priority' &&\n                            childNode.getChild(childChangePath.parent()).isEmpty()) {\n                            // This is a priority update on an empty node. If this node exists on the server, the\n                            // server will send down the priority in the update, so ignore for now\n                            newChild = childNode;\n                        }\n                        else {\n                            newChild = childNode.updateChild(childChangePath, changedSnap);\n                        }\n                    }\n                    else {\n                        // There is no complete child node available\n                        newChild = ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n                    }\n                }\n                if (!oldChild.equals(newChild)) {\n                    var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\n                    newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\n                }\n                else {\n                    newViewCache = oldViewCache;\n                }\n            }\n        }\n        return newViewCache;\n    };\n    /**\n     * @param {!ViewCache} viewCache\n     * @param {string} childKey\n     * @return {boolean}\n     * @private\n     */\n    ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\n        return viewCache.getEventCache().isCompleteForChild(childKey);\n    };\n    /**\n     * @param {!ViewCache} viewCache\n     * @param {!Path} path\n     * @param {ImmutableTree.<!Node>} changedChildren\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} serverCache\n     * @param {!ChildChangeAccumulator} accumulator\n     * @return {!ViewCache}\n     * @private\n     */\n    ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\n        var _this = this;\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\n        // window leaving room for new items.  It's important we process these changes first, so we\n        // iterate the changes twice, first processing any that affect items currently in view.\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n        // not the other.\n        var curViewCache = viewCache;\n        changedChildren.foreach(function (relativePath, childNode) {\n            var writePath = path.child(relativePath);\n            if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n            }\n        });\n        changedChildren.foreach(function (relativePath, childNode) {\n            var writePath = path.child(relativePath);\n            if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n            }\n        });\n        return curViewCache;\n    };\n    /**\n     * @param {!Node} node\n     * @param {ImmutableTree.<!Node>} merge\n     * @return {!Node}\n     * @private\n     */\n    ViewProcessor.prototype.applyMerge_ = function (node, merge) {\n        merge.foreach(function (relativePath, childNode) {\n            node = node.updateChild(relativePath, childNode);\n        });\n        return node;\n    };\n    /**\n     * @param {!ViewCache} viewCache\n     * @param {!Path} path\n     * @param {!ImmutableTree.<!Node>} changedChildren\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} serverCache\n     * @param {boolean} filterServerNode\n     * @param {!ChildChangeAccumulator} accumulator\n     * @return {!ViewCache}\n     * @private\n     */\n    ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\n        var _this = this;\n        // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n        // wait for the complete data update coming soon.\n        if (viewCache\n            .getServerCache()\n            .getNode()\n            .isEmpty() &&\n            !viewCache.getServerCache().isFullyInitialized()) {\n            return viewCache;\n        }\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\n        // window leaving room for new items.  It's important we process these changes first, so we\n        // iterate the changes twice, first processing any that affect items currently in view.\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n        // not the other.\n        var curViewCache = viewCache;\n        var viewMergeTree;\n        if (path.isEmpty()) {\n            viewMergeTree = changedChildren;\n        }\n        else {\n            viewMergeTree = ImmutableTree_1.ImmutableTree.Empty.setTree(path, changedChildren);\n        }\n        var serverNode = viewCache.getServerCache().getNode();\n        viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\n            if (serverNode.hasChild(childKey)) {\n                var serverChild = viewCache\n                    .getServerCache()\n                    .getNode()\n                    .getImmediateChild(childKey);\n                var newChild = _this.applyMerge_(serverChild, childTree);\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path_1.Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n            }\n        });\n        viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\n            var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) &&\n                childMergeTree.value == null;\n            if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n                var serverChild = viewCache\n                    .getServerCache()\n                    .getNode()\n                    .getImmediateChild(childKey);\n                var newChild = _this.applyMerge_(serverChild, childMergeTree);\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path_1.Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n            }\n        });\n        return curViewCache;\n    };\n    /**\n     * @param {!ViewCache} viewCache\n     * @param {!Path} ackPath\n     * @param {!ImmutableTree<!boolean>} affectedTree\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} completeCache\n     * @param {!ChildChangeAccumulator} accumulator\n     * @return {!ViewCache}\n     * @private\n     */\n    ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\n        if (writesCache.shadowingWrite(ackPath) != null) {\n            return viewCache;\n        }\n        // Only filter server node if it is currently filtered\n        var filterServerNode = viewCache.getServerCache().isFiltered();\n        // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n        // now that it won't be shadowed.\n        var serverCache = viewCache.getServerCache();\n        if (affectedTree.value != null) {\n            // This is an overwrite.\n            if ((ackPath.isEmpty() && serverCache.isFullyInitialized()) ||\n                serverCache.isCompleteForPath(ackPath)) {\n                return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\n            }\n            else if (ackPath.isEmpty()) {\n                // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n                // should just re-apply whatever we have in our cache as a merge.\n                var changedChildren_1 = ImmutableTree_1.ImmutableTree.Empty;\n                serverCache.getNode().forEachChild(KeyIndex_1.KEY_INDEX, function (name, node) {\n                    changedChildren_1 = changedChildren_1.set(new Path_1.Path(name), node);\n                });\n                return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\n            }\n            else {\n                return viewCache;\n            }\n        }\n        else {\n            // This is a merge.\n            var changedChildren_2 = ImmutableTree_1.ImmutableTree.Empty;\n            affectedTree.foreach(function (mergePath, value) {\n                var serverCachePath = ackPath.child(mergePath);\n                if (serverCache.isCompleteForPath(serverCachePath)) {\n                    changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\n                }\n            });\n            return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\n        }\n    };\n    /**\n     * @param {!ViewCache} viewCache\n     * @param {!Path} path\n     * @param {!WriteTreeRef} writesCache\n     * @param {!ChildChangeAccumulator} accumulator\n     * @return {!ViewCache}\n     * @private\n     */\n    ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\n        var oldServerNode = viewCache.getServerCache();\n        var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());\n        return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, CompleteChildSource_1.NO_COMPLETE_CHILD_SOURCE, accumulator);\n    };\n    /**\n     * @param {!ViewCache} viewCache\n     * @param {!Path} path\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} completeServerCache\n     * @param {!ChildChangeAccumulator} accumulator\n     * @return {!ViewCache}\n     * @private\n     */\n    ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\n        var complete;\n        if (writesCache.shadowingWrite(path) != null) {\n            return viewCache;\n        }\n        else {\n            var source = new CompleteChildSource_1.WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\n            var oldEventCache = viewCache.getEventCache().getNode();\n            var newEventCache = void 0;\n            if (path.isEmpty() || path.getFront() === '.priority') {\n                var newNode = void 0;\n                if (viewCache.getServerCache().isFullyInitialized()) {\n                    newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n                }\n                else {\n                    var serverChildren = viewCache.getServerCache().getNode();\n                    util_1.assert(serverChildren instanceof ChildrenNode_1.ChildrenNode, 'serverChildren would be complete if leaf node');\n                    newNode = writesCache.calcCompleteEventChildren(serverChildren);\n                }\n                newNode = newNode;\n                newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\n            }\n            else {\n                var childKey = path.getFront();\n                var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\n                if (newChild == null &&\n                    viewCache.getServerCache().isCompleteForChild(childKey)) {\n                    newChild = oldEventCache.getImmediateChild(childKey);\n                }\n                if (newChild != null) {\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);\n                }\n                else if (viewCache\n                    .getEventCache()\n                    .getNode()\n                    .hasChild(childKey)) {\n                    // No complete child available, delete the existing one, if any\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode_1.ChildrenNode.EMPTY_NODE, path.popFront(), source, accumulator);\n                }\n                else {\n                    newEventCache = oldEventCache;\n                }\n                if (newEventCache.isEmpty() &&\n                    viewCache.getServerCache().isFullyInitialized()) {\n                    // We might have reverted all child writes. Maybe the old event was a leaf node\n                    complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n                    if (complete.isLeafNode()) {\n                        newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\n                    }\n                }\n            }\n            complete =\n                viewCache.getServerCache().isFullyInitialized() ||\n                    writesCache.shadowingWrite(Path_1.Path.Empty) != null;\n            return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\n        }\n    };\n    return ViewProcessor;\n}());\nexports.ViewProcessor = ViewProcessor;\n\n//# sourceMappingURL=ViewProcessor.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/view/ViewProcessor.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar Change_1 = require(\"./Change\");\nvar util_2 = require(\"@firebase/util\");\n/**\n * @constructor\n */\nvar ChildChangeAccumulator = /** @class */ (function () {\n    function ChildChangeAccumulator() {\n        this.changeMap_ = {};\n    }\n    /**\n     * @param {!Change} change\n     */\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\n        var type = change.type;\n        var childKey /** @type {!string} */ = change.childName;\n        util_2.assert(type == Change_1.Change.CHILD_ADDED ||\n            type == Change_1.Change.CHILD_CHANGED ||\n            type == Change_1.Change.CHILD_REMOVED, 'Only child changes supported for tracking');\n        util_2.assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\n        var oldChange = util_1.safeGet(this.changeMap_, childKey);\n        if (oldChange) {\n            var oldType = oldChange.type;\n            if (type == Change_1.Change.CHILD_ADDED && oldType == Change_1.Change.CHILD_REMOVED) {\n                this.changeMap_[childKey] = Change_1.Change.childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode);\n            }\n            else if (type == Change_1.Change.CHILD_REMOVED &&\n                oldType == Change_1.Change.CHILD_ADDED) {\n                delete this.changeMap_[childKey];\n            }\n            else if (type == Change_1.Change.CHILD_REMOVED &&\n                oldType == Change_1.Change.CHILD_CHANGED) {\n                this.changeMap_[childKey] = Change_1.Change.childRemovedChange(childKey, oldChange.oldSnap);\n            }\n            else if (type == Change_1.Change.CHILD_CHANGED &&\n                oldType == Change_1.Change.CHILD_ADDED) {\n                this.changeMap_[childKey] = Change_1.Change.childAddedChange(childKey, change.snapshotNode);\n            }\n            else if (type == Change_1.Change.CHILD_CHANGED &&\n                oldType == Change_1.Change.CHILD_CHANGED) {\n                this.changeMap_[childKey] = Change_1.Change.childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap);\n            }\n            else {\n                throw util_2.assertionError('Illegal combination of changes: ' +\n                    change +\n                    ' occurred after ' +\n                    oldChange);\n            }\n        }\n        else {\n            this.changeMap_[childKey] = change;\n        }\n    };\n    /**\n     * @return {!Array.<!Change>}\n     */\n    ChildChangeAccumulator.prototype.getChanges = function () {\n        return util_1.getValues(this.changeMap_);\n    };\n    return ChildChangeAccumulator;\n}());\nexports.ChildChangeAccumulator = ChildChangeAccumulator;\n\n//# sourceMappingURL=ChildChangeAccumulator.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/view/ChildChangeAccumulator.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CacheNode_1 = require(\"./CacheNode\");\n/**\n * An implementation of CompleteChildSource that never returns any additional children\n *\n * @private\n * @constructor\n * @implements CompleteChildSource\n */\nvar NoCompleteChildSource_ = /** @class */ (function () {\n    function NoCompleteChildSource_() {\n    }\n    /**\n     * @inheritDoc\n     */\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\n        return null;\n    };\n    return NoCompleteChildSource_;\n}());\nexports.NoCompleteChildSource_ = NoCompleteChildSource_;\n/**\n * Singleton instance.\n * @const\n * @type {!CompleteChildSource}\n */\nexports.NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n/**\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\n * old event caches available to calculate complete children.\n *\n *\n * @implements CompleteChildSource\n */\nvar WriteTreeCompleteChildSource = /** @class */ (function () {\n    /**\n     * @param {!WriteTreeRef} writes_\n     * @param {!ViewCache} viewCache_\n     * @param {?Node} optCompleteServerCache_\n     */\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\n        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }\n        this.writes_ = writes_;\n        this.viewCache_ = viewCache_;\n        this.optCompleteServerCache_ = optCompleteServerCache_;\n    }\n    /**\n     * @inheritDoc\n     */\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\n        var node = this.viewCache_.getEventCache();\n        if (node.isCompleteForChild(childKey)) {\n            return node.getNode().getImmediateChild(childKey);\n        }\n        else {\n            var serverNode = this.optCompleteServerCache_ != null\n                ? new CacheNode_1.CacheNode(this.optCompleteServerCache_, true, false)\n                : this.viewCache_.getServerCache();\n            return this.writes_.calcCompleteChild(childKey, serverNode);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\n        var completeServerData = this.optCompleteServerCache_ != null\n            ? this.optCompleteServerCache_\n            : this.viewCache_.getCompleteServerSnap();\n        var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\n        if (nodes.length === 0) {\n            return null;\n        }\n        else {\n            return nodes[0];\n        }\n    };\n    return WriteTreeCompleteChildSource;\n}());\nexports.WriteTreeCompleteChildSource = WriteTreeCompleteChildSource;\n\n//# sourceMappingURL=CompleteChildSource.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/view/CompleteChildSource.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Node_1 = require(\"../snap/Node\");\nvar Change_1 = require(\"./Change\");\nvar util_1 = require(\"@firebase/util\");\n/**\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\n * for details.\n *\n * @constructor\n */\nvar EventGenerator = /** @class */ (function () {\n    /**\n     *\n     * @param {!Query} query_\n     */\n    function EventGenerator(query_) {\n        this.query_ = query_;\n        /**\n         * @private\n         * @type {!Index}\n         */\n        this.index_ = this.query_.getQueryParams().getIndex();\n    }\n    /**\n     * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\n     * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\n     *\n     * Notes:\n     *  - child_moved events will be synthesized at this time for any child_changed events that affect\n     *    our index.\n     *  - prevName will be calculated based on the index ordering.\n     *\n     * @param {!Array.<!Change>} changes\n     * @param {!Node} eventCache\n     * @param {!Array.<!EventRegistration>} eventRegistrations\n     * @return {!Array.<!Event>}\n     */\n    EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {\n        var _this = this;\n        var events = [];\n        var moves = [];\n        changes.forEach(function (change) {\n            if (change.type === Change_1.Change.CHILD_CHANGED &&\n                _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\n                moves.push(Change_1.Change.childMovedChange(change.childName, change.snapshotNode));\n            }\n        });\n        this.generateEventsForType_(events, Change_1.Change.CHILD_REMOVED, changes, eventRegistrations, eventCache);\n        this.generateEventsForType_(events, Change_1.Change.CHILD_ADDED, changes, eventRegistrations, eventCache);\n        this.generateEventsForType_(events, Change_1.Change.CHILD_MOVED, moves, eventRegistrations, eventCache);\n        this.generateEventsForType_(events, Change_1.Change.CHILD_CHANGED, changes, eventRegistrations, eventCache);\n        this.generateEventsForType_(events, Change_1.Change.VALUE, changes, eventRegistrations, eventCache);\n        return events;\n    };\n    /**\n     * Given changes of a single change type, generate the corresponding events.\n     *\n     * @param {!Array.<!Event>} events\n     * @param {!string} eventType\n     * @param {!Array.<!Change>} changes\n     * @param {!Array.<!EventRegistration>} registrations\n     * @param {!Node} eventCache\n     * @private\n     */\n    EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {\n        var _this = this;\n        var filteredChanges = changes.filter(function (change) { return change.type === eventType; });\n        filteredChanges.sort(this.compareChanges_.bind(this));\n        filteredChanges.forEach(function (change) {\n            var materializedChange = _this.materializeSingleChange_(change, eventCache);\n            registrations.forEach(function (registration) {\n                if (registration.respondsTo(change.type)) {\n                    events.push(registration.createEvent(materializedChange, _this.query_));\n                }\n            });\n        });\n    };\n    /**\n     * @param {!Change} change\n     * @param {!Node} eventCache\n     * @return {!Change}\n     * @private\n     */\n    EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {\n        if (change.type === 'value' || change.type === 'child_removed') {\n            return change;\n        }\n        else {\n            change.prevName = eventCache.getPredecessorChildName(\n            /** @type {!string} */\n            change.childName, change.snapshotNode, this.index_);\n            return change;\n        }\n    };\n    /**\n     * @param {!Change} a\n     * @param {!Change} b\n     * @return {number}\n     * @private\n     */\n    EventGenerator.prototype.compareChanges_ = function (a, b) {\n        if (a.childName == null || b.childName == null) {\n            throw util_1.assertionError('Should only compare child_ events.');\n        }\n        var aWrapped = new Node_1.NamedNode(a.childName, a.snapshotNode);\n        var bWrapped = new Node_1.NamedNode(b.childName, b.snapshotNode);\n        return this.index_.compare(aWrapped, bWrapped);\n    };\n    return EventGenerator;\n}());\nexports.EventGenerator = EventGenerator;\n\n//# sourceMappingURL=EventGenerator.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/view/EventGenerator.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"@firebase/util\");\nvar Path_1 = require(\"./util/Path\");\nvar CompoundWrite_1 = require(\"./CompoundWrite\");\nvar PriorityIndex_1 = require(\"./snap/indexes/PriorityIndex\");\nvar ChildrenNode_1 = require(\"./snap/ChildrenNode\");\n/**\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\n * and addMerge(), and removed with removeWrite().\n *\n * @constructor\n */\nvar WriteTree = /** @class */ (function () {\n    function WriteTree() {\n        /**\n         * A tree tracking the result of applying all visible writes.  This does not include transactions with\n         * applyLocally=false or writes that are completely shadowed by other writes.\n         *\n         * @type {!CompoundWrite}\n         * @private\n         */\n        this.visibleWrites_ = CompoundWrite_1.CompoundWrite.Empty;\n        /**\n         * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\n         * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\n         * used by transactions).\n         *\n         * @type {!Array.<!WriteRecord>}\n         * @private\n         */\n        this.allWrites_ = [];\n        this.lastWriteId_ = -1;\n    }\n    /**\n     * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\n     *\n     * @param {!Path} path\n     * @return {!WriteTreeRef}\n     */\n    WriteTree.prototype.childWrites = function (path) {\n        return new WriteTreeRef(path, this);\n    };\n    /**\n     * Record a new overwrite from user code.\n     *\n     * @param {!Path} path\n     * @param {!Node} snap\n     * @param {!number} writeId\n     * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\n     */\n    WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\n        util_2.assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\n        if (visible === undefined) {\n            visible = true;\n        }\n        this.allWrites_.push({\n            path: path,\n            snap: snap,\n            writeId: writeId,\n            visible: visible\n        });\n        if (visible) {\n            this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\n        }\n        this.lastWriteId_ = writeId;\n    };\n    /**\n     * Record a new merge from user code.\n     *\n     * @param {!Path} path\n     * @param {!Object.<string, !Node>} changedChildren\n     * @param {!number} writeId\n     */\n    WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\n        util_2.assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\n        this.allWrites_.push({\n            path: path,\n            children: changedChildren,\n            writeId: writeId,\n            visible: true\n        });\n        this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\n        this.lastWriteId_ = writeId;\n    };\n    /**\n     * @param {!number} writeId\n     * @return {?WriteRecord}\n     */\n    WriteTree.prototype.getWrite = function (writeId) {\n        for (var i = 0; i < this.allWrites_.length; i++) {\n            var record = this.allWrites_[i];\n            if (record.writeId === writeId) {\n                return record;\n            }\n        }\n        return null;\n    };\n    /**\n     * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\n     * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\n     *\n     * @param {!number} writeId\n     * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\n     * events as a result).\n     */\n    WriteTree.prototype.removeWrite = function (writeId) {\n        // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n        // out of order.\n        //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n        //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n        var _this = this;\n        var idx = this.allWrites_.findIndex(function (s) {\n            return s.writeId === writeId;\n        });\n        util_2.assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n        var writeToRemove = this.allWrites_[idx];\n        this.allWrites_.splice(idx, 1);\n        var removedWriteWasVisible = writeToRemove.visible;\n        var removedWriteOverlapsWithOtherWrites = false;\n        var i = this.allWrites_.length - 1;\n        while (removedWriteWasVisible && i >= 0) {\n            var currentWrite = this.allWrites_[i];\n            if (currentWrite.visible) {\n                if (i >= idx &&\n                    this.recordContainsPath_(currentWrite, writeToRemove.path)) {\n                    // The removed write was completely shadowed by a subsequent write.\n                    removedWriteWasVisible = false;\n                }\n                else if (writeToRemove.path.contains(currentWrite.path)) {\n                    // Either we're covering some writes or they're covering part of us (depending on which came first).\n                    removedWriteOverlapsWithOtherWrites = true;\n                }\n            }\n            i--;\n        }\n        if (!removedWriteWasVisible) {\n            return false;\n        }\n        else if (removedWriteOverlapsWithOtherWrites) {\n            // There's some shadowing going on. Just rebuild the visible writes from scratch.\n            this.resetTree_();\n            return true;\n        }\n        else {\n            // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n            if (writeToRemove.snap) {\n                this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);\n            }\n            else {\n                var children = writeToRemove.children;\n                util_1.forEach(children, function (childName) {\n                    _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));\n                });\n            }\n            return true;\n        }\n    };\n    /**\n     * Return a complete snapshot for the given path if there's visible write data at that path, else null.\n     * No server data is considered.\n     *\n     * @param {!Path} path\n     * @return {?Node}\n     */\n    WriteTree.prototype.getCompleteWriteData = function (path) {\n        return this.visibleWrites_.getCompleteNode(path);\n    };\n    /**\n     * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\n     * writes), attempt to calculate a complete snapshot for the given path\n     *\n     * @param {!Path} treePath\n     * @param {?Node} completeServerCache\n     * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\n     * @return {?Node}\n     */\n    WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n        if (!writeIdsToExclude && !includeHiddenWrites) {\n            var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\n            if (shadowingNode != null) {\n                return shadowingNode;\n            }\n            else {\n                var subMerge = this.visibleWrites_.childCompoundWrite(treePath);\n                if (subMerge.isEmpty()) {\n                    return completeServerCache;\n                }\n                else if (completeServerCache == null &&\n                    !subMerge.hasCompleteWrite(Path_1.Path.Empty)) {\n                    // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n                    return null;\n                }\n                else {\n                    var layeredCache = completeServerCache || ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n                    return subMerge.apply(layeredCache);\n                }\n            }\n        }\n        else {\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\n            if (!includeHiddenWrites && merge.isEmpty()) {\n                return completeServerCache;\n            }\n            else {\n                // If the server cache is null, and we don't have a complete cache, we need to return null\n                if (!includeHiddenWrites &&\n                    completeServerCache == null &&\n                    !merge.hasCompleteWrite(Path_1.Path.Empty)) {\n                    return null;\n                }\n                else {\n                    var filter = function (write) {\n                        return ((write.visible || includeHiddenWrites) &&\n                            (!writeIdsToExclude ||\n                                !~writeIdsToExclude.indexOf(write.writeId)) &&\n                            (write.path.contains(treePath) || treePath.contains(write.path)));\n                    };\n                    var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\n                    var layeredCache = completeServerCache || ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n                    return mergeAtPath.apply(layeredCache);\n                }\n            }\n        }\n    };\n    /**\n     * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\n     * Used when creating new views, to pre-fill their complete event children snapshot.\n     *\n     * @param {!Path} treePath\n     * @param {?ChildrenNode} completeServerChildren\n     * @return {!ChildrenNode}\n     */\n    WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\n        var completeChildren = ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n        var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\n        if (topLevelSet) {\n            if (!topLevelSet.isLeafNode()) {\n                // we're shadowing everything. Return the children.\n                topLevelSet.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (childName, childSnap) {\n                    completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\n                });\n            }\n            return completeChildren;\n        }\n        else if (completeServerChildren) {\n            // Layer any children we have on top of this\n            // We know we don't have a top-level set, so just enumerate existing children\n            var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);\n            completeServerChildren.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (childName, childNode) {\n                var node = merge_1\n                    .childCompoundWrite(new Path_1.Path(childName))\n                    .apply(childNode);\n                completeChildren = completeChildren.updateImmediateChild(childName, node);\n            });\n            // Add any complete children we have from the set\n            merge_1.getCompleteChildren().forEach(function (namedNode) {\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n            });\n            return completeChildren;\n        }\n        else {\n            // We don't have anything to layer on top of. Layer on any children we have\n            // Note that we can return an empty snap if we have a defined delete\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\n            merge.getCompleteChildren().forEach(function (namedNode) {\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n            });\n            return completeChildren;\n        }\n    };\n    /**\n     * Given that the underlying server data has updated, determine what, if anything, needs to be\n     * applied to the event cache.\n     *\n     * Possibilities:\n     *\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n     *\n     * 2. Some write is completely shadowing. No events to be raised\n     *\n     * 3. Is partially shadowed. Events\n     *\n     * Either existingEventSnap or existingServerSnap must exist\n     *\n     * @param {!Path} treePath\n     * @param {!Path} childPath\n     * @param {?Node} existingEventSnap\n     * @param {?Node} existingServerSnap\n     * @return {?Node}\n     */\n    WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\n        util_2.assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\n        var path = treePath.child(childPath);\n        if (this.visibleWrites_.hasCompleteWrite(path)) {\n            // At this point we can probably guarantee that we're in case 2, meaning no events\n            // May need to check visibility while doing the findRootMostValueAndPath call\n            return null;\n        }\n        else {\n            // No complete shadowing. We're either partially shadowing or not shadowing at all.\n            var childMerge = this.visibleWrites_.childCompoundWrite(path);\n            if (childMerge.isEmpty()) {\n                // We're not shadowing at all. Case 1\n                return existingServerSnap.getChild(childPath);\n            }\n            else {\n                // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n                // However this is tricky to find out, since user updates don't necessary change the server\n                // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n                // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n                // only check if the updates change the serverNode.\n                // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n                return childMerge.apply(existingServerSnap.getChild(childPath));\n            }\n        }\n    };\n    /**\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\n     * complete child for this ChildKey.\n     *\n     * @param {!Path} treePath\n     * @param {!string} childKey\n     * @param {!CacheNode} existingServerSnap\n     * @return {?Node}\n     */\n    WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\n        var path = treePath.child(childKey);\n        var shadowingNode = this.visibleWrites_.getCompleteNode(path);\n        if (shadowingNode != null) {\n            return shadowingNode;\n        }\n        else {\n            if (existingServerSnap.isCompleteForChild(childKey)) {\n                var childMerge = this.visibleWrites_.childCompoundWrite(path);\n                return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));\n            }\n            else {\n                return null;\n            }\n        }\n    };\n    /**\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n     * a higher path, this will return the child of that write relative to the write and this path.\n     * Returns null if there is no write at this path.\n     *\n     * @param {!Path} path\n     * @return {?Node}\n     */\n    WriteTree.prototype.shadowingWrite = function (path) {\n        return this.visibleWrites_.getCompleteNode(path);\n    };\n    /**\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n     * the window, but may now be in the window.\n     *\n     * @param {!Path} treePath\n     * @param {?Node} completeServerData\n     * @param {!NamedNode} startPost\n     * @param {!number} count\n     * @param {boolean} reverse\n     * @param {!Index} index\n     * @return {!Array.<!NamedNode>}\n     */\n    WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\n        var toIterate;\n        var merge = this.visibleWrites_.childCompoundWrite(treePath);\n        var shadowingNode = merge.getCompleteNode(Path_1.Path.Empty);\n        if (shadowingNode != null) {\n            toIterate = shadowingNode;\n        }\n        else if (completeServerData != null) {\n            toIterate = merge.apply(completeServerData);\n        }\n        else {\n            // no children to iterate on\n            return [];\n        }\n        toIterate = toIterate.withIndex(index);\n        if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n            var nodes = [];\n            var cmp = index.getCompare();\n            var iter = reverse\n                ? toIterate.getReverseIteratorFrom(startPost, index)\n                : toIterate.getIteratorFrom(startPost, index);\n            var next = iter.getNext();\n            while (next && nodes.length < count) {\n                if (cmp(next, startPost) !== 0) {\n                    nodes.push(next);\n                }\n                next = iter.getNext();\n            }\n            return nodes;\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * @param {!WriteRecord} writeRecord\n     * @param {!Path} path\n     * @return {boolean}\n     * @private\n     */\n    WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\n        if (writeRecord.snap) {\n            return writeRecord.path.contains(path);\n        }\n        else {\n            // findKey can return undefined, so use !! to coerce to boolean\n            return !!util_1.findKey(writeRecord.children, function (childSnap, childName) {\n                return writeRecord.path.child(childName).contains(path);\n            });\n        }\n    };\n    /**\n     * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\n     * @private\n     */\n    WriteTree.prototype.resetTree_ = function () {\n        this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, Path_1.Path.Empty);\n        if (this.allWrites_.length > 0) {\n            this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\n        }\n        else {\n            this.lastWriteId_ = -1;\n        }\n    };\n    /**\n     * The default filter used when constructing the tree. Keep everything that's visible.\n     *\n     * @param {!WriteRecord} write\n     * @return {boolean}\n     * @private\n     */\n    WriteTree.DefaultFilter_ = function (write) {\n        return write.visible;\n    };\n    /**\n     * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\n     * event data at that path.\n     *\n     * @param {!Array.<!WriteRecord>} writes\n     * @param {!function(!WriteRecord):boolean} filter\n     * @param {!Path} treeRoot\n     * @return {!CompoundWrite}\n     * @private\n     */\n    WriteTree.layerTree_ = function (writes, filter, treeRoot) {\n        var compoundWrite = CompoundWrite_1.CompoundWrite.Empty;\n        for (var i = 0; i < writes.length; ++i) {\n            var write = writes[i];\n            // Theory, a later set will either:\n            // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n            // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n            if (filter(write)) {\n                var writePath = write.path;\n                var relativePath = void 0;\n                if (write.snap) {\n                    if (treeRoot.contains(writePath)) {\n                        relativePath = Path_1.Path.relativePath(treeRoot, writePath);\n                        compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\n                    }\n                    else if (writePath.contains(treeRoot)) {\n                        relativePath = Path_1.Path.relativePath(writePath, treeRoot);\n                        compoundWrite = compoundWrite.addWrite(Path_1.Path.Empty, write.snap.getChild(relativePath));\n                    }\n                    else {\n                        // There is no overlap between root path and write path, ignore write\n                    }\n                }\n                else if (write.children) {\n                    if (treeRoot.contains(writePath)) {\n                        relativePath = Path_1.Path.relativePath(treeRoot, writePath);\n                        compoundWrite = compoundWrite.addWrites(relativePath, write.children);\n                    }\n                    else if (writePath.contains(treeRoot)) {\n                        relativePath = Path_1.Path.relativePath(writePath, treeRoot);\n                        if (relativePath.isEmpty()) {\n                            compoundWrite = compoundWrite.addWrites(Path_1.Path.Empty, write.children);\n                        }\n                        else {\n                            var child = util_1.safeGet(write.children, relativePath.getFront());\n                            if (child) {\n                                // There exists a child in this node that matches the root path\n                                var deepNode = child.getChild(relativePath.popFront());\n                                compoundWrite = compoundWrite.addWrite(Path_1.Path.Empty, deepNode);\n                            }\n                        }\n                    }\n                    else {\n                        // There is no overlap between root path and write path, ignore write\n                    }\n                }\n                else {\n                    throw util_2.assertionError('WriteRecord should have .snap or .children');\n                }\n            }\n        }\n        return compoundWrite;\n    };\n    return WriteTree;\n}());\nexports.WriteTree = WriteTree;\n/**\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\n * just proxy to the underlying WriteTree.\n *\n * @constructor\n */\nvar WriteTreeRef = /** @class */ (function () {\n    /**\n     * @param {!Path} path\n     * @param {!WriteTree} writeTree\n     */\n    function WriteTreeRef(path, writeTree) {\n        this.treePath_ = path;\n        this.writeTree_ = writeTree;\n    }\n    /**\n     * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\n     * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\n     * can lead to a more expensive calculation.\n     *\n     * @param {?Node} completeServerCache\n     * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\n     * @return {?Node}\n     */\n    WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n        return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\n    };\n    /**\n     * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\n     * mix of the given server data and write data.\n     *\n     * @param {?ChildrenNode} completeServerChildren\n     * @return {!ChildrenNode}\n     */\n    WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\n        return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\n    };\n    /**\n     * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\n     * if anything, needs to be applied to the event cache.\n     *\n     * Possibilities:\n     *\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n     *\n     * 2. Some write is completely shadowing. No events to be raised\n     *\n     * 3. Is partially shadowed. Events should be raised\n     *\n     * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\n     *\n     * @param {!Path} path\n     * @param {?Node} existingEventSnap\n     * @param {?Node} existingServerSnap\n     * @return {?Node}\n     */\n    WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\n        return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\n    };\n    /**\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n     * a higher path, this will return the child of that write relative to the write and this path.\n     * Returns null if there is no write at this path.\n     *\n     * @param {!Path} path\n     * @return {?Node}\n     */\n    WriteTreeRef.prototype.shadowingWrite = function (path) {\n        return this.writeTree_.shadowingWrite(this.treePath_.child(path));\n    };\n    /**\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n     * the window, but may now be in the window\n     *\n     * @param {?Node} completeServerData\n     * @param {!NamedNode} startPost\n     * @param {!number} count\n     * @param {boolean} reverse\n     * @param {!Index} index\n     * @return {!Array.<!NamedNode>}\n     */\n    WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\n        return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\n    };\n    /**\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\n     * complete child for this ChildKey.\n     *\n     * @param {!string} childKey\n     * @param {!CacheNode} existingServerCache\n     * @return {?Node}\n     */\n    WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\n        return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\n    };\n    /**\n     * Return a WriteTreeRef for a child.\n     *\n     * @param {string} childName\n     * @return {!WriteTreeRef}\n     */\n    WriteTreeRef.prototype.child = function (childName) {\n        return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\n    };\n    return WriteTreeRef;\n}());\nexports.WriteTreeRef = WriteTreeRef;\n\n//# sourceMappingURL=WriteTree.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/WriteTree.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ImmutableTree_1 = require(\"./util/ImmutableTree\");\nvar Path_1 = require(\"./util/Path\");\nvar util_1 = require(\"@firebase/util\");\nvar Node_1 = require(\"./snap/Node\");\nvar PriorityIndex_1 = require(\"./snap/indexes/PriorityIndex\");\nvar util_2 = require(\"@firebase/util\");\n/**\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\n * to reflect the write added.\n *\n * @constructor\n * @param {!ImmutableTree.<!Node>} writeTree\n */\nvar CompoundWrite = /** @class */ (function () {\n    function CompoundWrite(writeTree_) {\n        this.writeTree_ = writeTree_;\n    }\n    /**\n     * @param {!Path} path\n     * @param {!Node} node\n     * @return {!CompoundWrite}\n     */\n    CompoundWrite.prototype.addWrite = function (path, node) {\n        if (path.isEmpty()) {\n            return new CompoundWrite(new ImmutableTree_1.ImmutableTree(node));\n        }\n        else {\n            var rootmost = this.writeTree_.findRootMostValueAndPath(path);\n            if (rootmost != null) {\n                var rootMostPath = rootmost.path;\n                var value = rootmost.value;\n                var relativePath = Path_1.Path.relativePath(rootMostPath, path);\n                value = value.updateChild(relativePath, node);\n                return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\n            }\n            else {\n                var subtree = new ImmutableTree_1.ImmutableTree(node);\n                var newWriteTree = this.writeTree_.setTree(path, subtree);\n                return new CompoundWrite(newWriteTree);\n            }\n        }\n    };\n    /**\n     * @param {!Path} path\n     * @param {!Object.<string, !Node>} updates\n     * @return {!CompoundWrite}\n     */\n    CompoundWrite.prototype.addWrites = function (path, updates) {\n        var newWrite = this;\n        util_1.forEach(updates, function (childKey, node) {\n            newWrite = newWrite.addWrite(path.child(childKey), node);\n        });\n        return newWrite;\n    };\n    /**\n     * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\n     * location, which must be removed by calling this method with that path.\n     *\n     * @param {!Path} path The path at which a write and all deeper writes should be removed\n     * @return {!CompoundWrite} The new CompoundWrite with the removed path\n     */\n    CompoundWrite.prototype.removeWrite = function (path) {\n        if (path.isEmpty()) {\n            return CompoundWrite.Empty;\n        }\n        else {\n            var newWriteTree = this.writeTree_.setTree(path, ImmutableTree_1.ImmutableTree.Empty);\n            return new CompoundWrite(newWriteTree);\n        }\n    };\n    /**\n     * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\n     * considered \"complete\".\n     *\n     * @param {!Path} path The path to check for\n     * @return {boolean} Whether there is a complete write at that path\n     */\n    CompoundWrite.prototype.hasCompleteWrite = function (path) {\n        return this.getCompleteNode(path) != null;\n    };\n    /**\n     * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\n     * writes from deeper paths, but will return child nodes from a more shallow path.\n     *\n     * @param {!Path} path The path to get a complete write\n     * @return {?Node} The node if complete at that path, or null otherwise.\n     */\n    CompoundWrite.prototype.getCompleteNode = function (path) {\n        var rootmost = this.writeTree_.findRootMostValueAndPath(path);\n        if (rootmost != null) {\n            return this.writeTree_\n                .get(rootmost.path)\n                .getChild(Path_1.Path.relativePath(rootmost.path, path));\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Returns all children that are guaranteed to be a complete overwrite.\n     *\n     * @return {!Array.<NamedNode>} A list of all complete children.\n     */\n    CompoundWrite.prototype.getCompleteChildren = function () {\n        var children = [];\n        var node = this.writeTree_.value;\n        if (node != null) {\n            // If it's a leaf node, it has no children; so nothing to do.\n            if (!node.isLeafNode()) {\n                node.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (childName, childNode) {\n                    children.push(new Node_1.NamedNode(childName, childNode));\n                });\n            }\n        }\n        else {\n            this.writeTree_.children.inorderTraversal(function (childName, childTree) {\n                if (childTree.value != null) {\n                    children.push(new Node_1.NamedNode(childName, childTree.value));\n                }\n            });\n        }\n        return children;\n    };\n    /**\n     * @param {!Path} path\n     * @return {!CompoundWrite}\n     */\n    CompoundWrite.prototype.childCompoundWrite = function (path) {\n        if (path.isEmpty()) {\n            return this;\n        }\n        else {\n            var shadowingNode = this.getCompleteNode(path);\n            if (shadowingNode != null) {\n                return new CompoundWrite(new ImmutableTree_1.ImmutableTree(shadowingNode));\n            }\n            else {\n                return new CompoundWrite(this.writeTree_.subtree(path));\n            }\n        }\n    };\n    /**\n     * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\n     * @return {boolean} Whether this CompoundWrite is empty\n     */\n    CompoundWrite.prototype.isEmpty = function () {\n        return this.writeTree_.isEmpty();\n    };\n    /**\n     * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\n     * node\n     * @param {!Node} node The node to apply this CompoundWrite to\n     * @return {!Node} The node with all writes applied\n     */\n    CompoundWrite.prototype.apply = function (node) {\n        return CompoundWrite.applySubtreeWrite_(Path_1.Path.Empty, this.writeTree_, node);\n    };\n    /**\n     * @type {!CompoundWrite}\n     */\n    CompoundWrite.Empty = new CompoundWrite(new ImmutableTree_1.ImmutableTree(null));\n    /**\n     * @param {!Path} relativePath\n     * @param {!ImmutableTree.<!Node>} writeTree\n     * @param {!Node} node\n     * @return {!Node}\n     * @private\n     */\n    CompoundWrite.applySubtreeWrite_ = function (relativePath, writeTree, node) {\n        if (writeTree.value != null) {\n            // Since there a write is always a leaf, we're done here\n            return node.updateChild(relativePath, writeTree.value);\n        }\n        else {\n            var priorityWrite_1 = null;\n            writeTree.children.inorderTraversal(function (childKey, childTree) {\n                if (childKey === '.priority') {\n                    // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n                    // to apply priorities to empty nodes that are later filled\n                    util_2.assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\n                    priorityWrite_1 = childTree.value;\n                }\n                else {\n                    node = CompoundWrite.applySubtreeWrite_(relativePath.child(childKey), childTree, node);\n                }\n            });\n            // If there was a priority write, we only apply it if the node is not empty\n            if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\n                node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);\n            }\n            return node;\n        }\n    };\n    return CompoundWrite;\n}());\nexports.CompoundWrite = CompoundWrite;\n\n//# sourceMappingURL=CompoundWrite.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/CompoundWrite.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ChildrenNode_1 = require(\"./snap/ChildrenNode\");\n/**\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\n *\n * @constructor\n */\nvar SnapshotHolder = /** @class */ (function () {\n    function SnapshotHolder() {\n        this.rootNode_ = ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n    }\n    SnapshotHolder.prototype.getNode = function (path) {\n        return this.rootNode_.getChild(path);\n    };\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n    };\n    return SnapshotHolder;\n}());\nexports.SnapshotHolder = SnapshotHolder;\n\n//# sourceMappingURL=SnapshotHolder.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/SnapshotHolder.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"./util/util\");\n/**\n * Abstraction around FirebaseApp's token fetching capabilities.\n */\nvar AuthTokenProvider = /** @class */ (function () {\n    /**\n     * @param {!FirebaseApp} app_\n     */\n    function AuthTokenProvider(app_) {\n        this.app_ = app_;\n    }\n    /**\n     * @param {boolean} forceRefresh\n     * @return {!Promise<FirebaseAuthTokenData>}\n     */\n    AuthTokenProvider.prototype.getToken = function (forceRefresh) {\n        return this.app_['INTERNAL']['getToken'](forceRefresh).then(null, \n        // .catch\n        function (error) {\n            // TODO: Need to figure out all the cases this is raised and whether\n            // this makes sense.\n            if (error && error.code === 'auth/token-not-initialized') {\n                util_1.log('Got auth/token-not-initialized error.  Treating as null token.');\n                return null;\n            }\n            else {\n                return Promise.reject(error);\n            }\n        });\n    };\n    AuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\n        // TODO: We might want to wrap the listener and call it with no args to\n        // avoid a leaky abstraction, but that makes removing the listener harder.\n        this.app_['INTERNAL']['addAuthTokenListener'](listener);\n    };\n    AuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\n        this.app_['INTERNAL']['removeAuthTokenListener'](listener);\n    };\n    AuthTokenProvider.prototype.notifyForInvalidToken = function () {\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\n            this.app_.name +\n            '\" are invalid. This usually indicates your app was not ' +\n            'initialized correctly. ';\n        if ('credential' in this.app_.options) {\n            errorMessage +=\n                'Make sure the \"credential\" property provided to initializeApp() ' +\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n                    'project.';\n        }\n        else if ('serviceAccount' in this.app_.options) {\n            errorMessage +=\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n                    'project.';\n        }\n        else {\n            errorMessage +=\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\n                    'initializeApp() match the values provided for your app at ' +\n                    'https://console.firebase.google.com/.';\n        }\n        util_1.warn(errorMessage);\n    };\n    return AuthTokenProvider;\n}());\nexports.AuthTokenProvider = AuthTokenProvider;\n\n//# sourceMappingURL=AuthTokenProvider.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/AuthTokenProvider.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"@firebase/util\");\n/**\n * Tracks a collection of stats.\n *\n * @constructor\n */\nvar StatsCollection = /** @class */ (function () {\n    function StatsCollection() {\n        this.counters_ = {};\n    }\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\n        if (amount === void 0) { amount = 1; }\n        if (!util_2.contains(this.counters_, name))\n            this.counters_[name] = 0;\n        this.counters_[name] += amount;\n    };\n    StatsCollection.prototype.get = function () {\n        return util_1.deepCopy(this.counters_);\n    };\n    return StatsCollection;\n}());\nexports.StatsCollection = StatsCollection;\n\n//# sourceMappingURL=StatsCollection.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/stats/StatsCollection.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"../util/util\");\nvar StatsListener_1 = require(\"./StatsListener\");\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\n// We'll continue to report stats on average every 5 minutes.\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n/**\n * @constructor\n */\nvar StatsReporter = /** @class */ (function () {\n    /**\n     * @param collection\n     * @param server_\n     */\n    function StatsReporter(collection, server_) {\n        this.server_ = server_;\n        this.statsToReport_ = {};\n        this.statsListener_ = new StatsListener_1.StatsListener(collection);\n        var timeout = FIRST_STATS_MIN_TIME +\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n        util_2.setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n    }\n    StatsReporter.prototype.includeStat = function (stat) {\n        this.statsToReport_[stat] = true;\n    };\n    StatsReporter.prototype.reportStats_ = function () {\n        var _this = this;\n        var stats = this.statsListener_.get();\n        var reportedStats = {};\n        var haveStatsToReport = false;\n        util_1.forEach(stats, function (stat, value) {\n            if (value > 0 && util_1.contains(_this.statsToReport_, stat)) {\n                reportedStats[stat] = value;\n                haveStatsToReport = true;\n            }\n        });\n        if (haveStatsToReport) {\n            this.server_.reportStats(reportedStats);\n        }\n        // queue our next run.\n        util_2.setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\n    };\n    return StatsReporter;\n}());\nexports.StatsReporter = StatsReporter;\n\n//# sourceMappingURL=StatsReporter.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/stats/StatsReporter.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../util/util\");\n/**\n * The event queue serves a few purposes:\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\n *    events being queued.\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\n *    left off, ensuring that the events are still raised synchronously and in order.\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\n *    events are raised synchronously.\n *\n * NOTE: This can all go away if/when we move to async events.\n *\n * @constructor\n */\nvar EventQueue = /** @class */ (function () {\n    function EventQueue() {\n        /**\n         * @private\n         * @type {!Array.<EventList>}\n         */\n        this.eventLists_ = [];\n        /**\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\n         * @private\n         * @type {!number}\n         */\n        this.recursionDepth_ = 0;\n    }\n    /**\n     * @param {!Array.<Event>} eventDataList The new events to queue.\n     */\n    EventQueue.prototype.queueEvents = function (eventDataList) {\n        // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n        var currList = null;\n        for (var i = 0; i < eventDataList.length; i++) {\n            var eventData = eventDataList[i];\n            var eventPath = eventData.getPath();\n            if (currList !== null && !eventPath.equals(currList.getPath())) {\n                this.eventLists_.push(currList);\n                currList = null;\n            }\n            if (currList === null) {\n                currList = new EventList(eventPath);\n            }\n            currList.add(eventData);\n        }\n        if (currList) {\n            this.eventLists_.push(currList);\n        }\n    };\n    /**\n     * Queues the specified events and synchronously raises all events (including previously queued ones)\n     * for the specified path.\n     *\n     * It is assumed that the new events are all for the specified path.\n     *\n     * @param {!Path} path The path to raise events for.\n     * @param {!Array.<Event>} eventDataList The new events to raise.\n     */\n    EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {\n        this.queueEvents(eventDataList);\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\n            return eventPath.equals(path);\n        });\n    };\n    /**\n     * Queues the specified events and synchronously raises all events (including previously queued ones) for\n     * locations related to the specified change path (i.e. all ancestors and descendants).\n     *\n     * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\n     *\n     * @param {!Path} changedPath The path to raise events for.\n     * @param {!Array.<!Event>} eventDataList The events to raise\n     */\n    EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {\n        this.queueEvents(eventDataList);\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\n            return eventPath.contains(changedPath) || changedPath.contains(eventPath);\n        });\n    };\n    /**\n     * @param {!function(!Path):boolean} predicate\n     * @private\n     */\n    EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {\n        this.recursionDepth_++;\n        var sentAll = true;\n        for (var i = 0; i < this.eventLists_.length; i++) {\n            var eventList = this.eventLists_[i];\n            if (eventList) {\n                var eventPath = eventList.getPath();\n                if (predicate(eventPath)) {\n                    this.eventLists_[i].raise();\n                    this.eventLists_[i] = null;\n                }\n                else {\n                    sentAll = false;\n                }\n            }\n        }\n        if (sentAll) {\n            this.eventLists_ = [];\n        }\n        this.recursionDepth_--;\n    };\n    return EventQueue;\n}());\nexports.EventQueue = EventQueue;\n/**\n * @param {!Path} path\n * @constructor\n */\nvar EventList = /** @class */ (function () {\n    function EventList(path_) {\n        this.path_ = path_;\n        /**\n         * @type {!Array.<Event>}\n         * @private\n         */\n        this.events_ = [];\n    }\n    /**\n     * @param {!Event} eventData\n     */\n    EventList.prototype.add = function (eventData) {\n        this.events_.push(eventData);\n    };\n    /**\n     * Iterates through the list and raises each event\n     */\n    EventList.prototype.raise = function () {\n        for (var i = 0; i < this.events_.length; i++) {\n            var eventData = this.events_[i];\n            if (eventData !== null) {\n                this.events_[i] = null;\n                var eventFn = eventData.getEventRunner();\n                if (util_1.logger) {\n                    util_1.log('event: ' + eventData.toString());\n                }\n                util_1.exceptionGuard(eventFn);\n            }\n        }\n    };\n    /**\n     * @return {!Path}\n     */\n    EventList.prototype.getPath = function () {\n        return this.path_;\n    };\n    return EventList;\n}());\nexports.EventList = EventList;\n\n//# sourceMappingURL=EventQueue.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/view/EventQueue.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar EventEmitter_1 = require(\"./EventEmitter\");\nvar util_1 = require(\"@firebase/util\");\n/**\n * @extends {EventEmitter}\n */\nvar VisibilityMonitor = /** @class */ (function (_super) {\n    tslib_1.__extends(VisibilityMonitor, _super);\n    function VisibilityMonitor() {\n        var _this = _super.call(this, ['visible']) || this;\n        var hidden;\n        var visibilityChange;\n        if (typeof document !== 'undefined' &&\n            typeof document.addEventListener !== 'undefined') {\n            if (typeof document['hidden'] !== 'undefined') {\n                // Opera 12.10 and Firefox 18 and later support\n                visibilityChange = 'visibilitychange';\n                hidden = 'hidden';\n            }\n            else if (typeof document['mozHidden'] !== 'undefined') {\n                visibilityChange = 'mozvisibilitychange';\n                hidden = 'mozHidden';\n            }\n            else if (typeof document['msHidden'] !== 'undefined') {\n                visibilityChange = 'msvisibilitychange';\n                hidden = 'msHidden';\n            }\n            else if (typeof document['webkitHidden'] !== 'undefined') {\n                visibilityChange = 'webkitvisibilitychange';\n                hidden = 'webkitHidden';\n            }\n        }\n        // Initially, we always assume we are visible. This ensures that in browsers\n        // without page visibility support or in cases where we are never visible\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n        // reconnects\n        _this.visible_ = true;\n        if (visibilityChange) {\n            document.addEventListener(visibilityChange, function () {\n                var visible = !document[hidden];\n                if (visible !== _this.visible_) {\n                    _this.visible_ = visible;\n                    _this.trigger('visible', visible);\n                }\n            }, false);\n        }\n        return _this;\n    }\n    VisibilityMonitor.getInstance = function () {\n        return new VisibilityMonitor();\n    };\n    /**\n     * @param {!string} eventType\n     * @return {Array.<boolean>}\n     */\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\n        util_1.assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n        return [this.visible_];\n    };\n    return VisibilityMonitor;\n}(EventEmitter_1.EventEmitter));\nexports.VisibilityMonitor = VisibilityMonitor;\n\n//# sourceMappingURL=VisibilityMonitor.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/util/VisibilityMonitor.js\n// module id = 456\n// module chunks = 0 1","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@firebase/util\");\nvar EventEmitter_1 = require(\"./EventEmitter\");\nvar util_2 = require(\"@firebase/util\");\n/**\n * Monitors online state (as reported by window.online/offline events).\n *\n * The expectation is that this could have many false positives (thinks we are online\n * when we're not), but no false negatives.  So we can safely use it to determine when\n * we definitely cannot reach the internet.\n *\n * @extends {EventEmitter}\n */\nvar OnlineMonitor = /** @class */ (function (_super) {\n    tslib_1.__extends(OnlineMonitor, _super);\n    function OnlineMonitor() {\n        var _this = _super.call(this, ['online']) || this;\n        _this.online_ = true;\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\n        // for Cordova.\n        if (typeof window !== 'undefined' &&\n            typeof window.addEventListener !== 'undefined' &&\n            !util_2.isMobileCordova()) {\n            window.addEventListener('online', function () {\n                if (!_this.online_) {\n                    _this.online_ = true;\n                    _this.trigger('online', true);\n                }\n            }, false);\n            window.addEventListener('offline', function () {\n                if (_this.online_) {\n                    _this.online_ = false;\n                    _this.trigger('online', false);\n                }\n            }, false);\n        }\n        return _this;\n    }\n    OnlineMonitor.getInstance = function () {\n        return new OnlineMonitor();\n    };\n    /**\n     * @param {!string} eventType\n     * @return {Array.<boolean>}\n     */\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\n        util_1.assert(eventType === 'online', 'Unknown event type: ' + eventType);\n        return [this.online_];\n    };\n    /**\n     * @return {boolean}\n     */\n    OnlineMonitor.prototype.currentlyOnline = function () {\n        return this.online_;\n    };\n    return OnlineMonitor;\n}(EventEmitter_1.EventEmitter));\nexports.OnlineMonitor = OnlineMonitor;\n\n//# sourceMappingURL=OnlineMonitor.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/util/OnlineMonitor.js\n// module id = 457\n// module chunks = 0 1","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BrowserPollConnection_1 = require(\"./BrowserPollConnection\");\nvar WebSocketConnection_1 = require(\"./WebSocketConnection\");\nvar util_1 = require(\"../core/util/util\");\n/**\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\n * lifecycle.\n *\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\n * they are available.\n * @constructor\n */\nvar TransportManager = /** @class */ (function () {\n    /**\n     * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\n     */\n    function TransportManager(repoInfo) {\n        this.initTransports_(repoInfo);\n    }\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\n        /**\n         * @const\n         * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\n         */\n        get: function () {\n            return [BrowserPollConnection_1.BrowserPollConnection, WebSocketConnection_1.WebSocketConnection];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {!RepoInfo} repoInfo\n     * @private\n     */\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\n        var isWebSocketsAvailable = WebSocketConnection_1.WebSocketConnection && WebSocketConnection_1.WebSocketConnection['isAvailable']();\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection_1.WebSocketConnection.previouslyFailed();\n        if (repoInfo.webSocketOnly) {\n            if (!isWebSocketsAvailable)\n                util_1.warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\n            isSkipPollConnection = true;\n        }\n        if (isSkipPollConnection) {\n            this.transports_ = [WebSocketConnection_1.WebSocketConnection];\n        }\n        else {\n            var transports_1 = (this.transports_ = []);\n            util_1.each(TransportManager.ALL_TRANSPORTS, function (i, transport) {\n                if (transport && transport['isAvailable']()) {\n                    transports_1.push(transport);\n                }\n            });\n        }\n    };\n    /**\n     * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\n     * initial transport to use\n     */\n    TransportManager.prototype.initialTransport = function () {\n        if (this.transports_.length > 0) {\n            return this.transports_[0];\n        }\n        else {\n            throw new Error('No transports available');\n        }\n    };\n    /**\n     * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\n     * transport, or null\n     */\n    TransportManager.prototype.upgradeTransport = function () {\n        if (this.transports_.length > 1) {\n            return this.transports_[1];\n        }\n        else {\n            return null;\n        }\n    };\n    return TransportManager;\n}());\nexports.TransportManager = TransportManager;\n\n//# sourceMappingURL=TransportManager.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/realtime/TransportManager.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../../core/util/util\");\n/**\n * This class ensures the packets from the server arrive in order\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\n * @constructor\n */\nvar PacketReceiver = /** @class */ (function () {\n    /**\n     * @param onMessage_\n     */\n    function PacketReceiver(onMessage_) {\n        this.onMessage_ = onMessage_;\n        this.pendingResponses = [];\n        this.currentResponseNum = 0;\n        this.closeAfterResponse = -1;\n        this.onClose = null;\n    }\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\n        this.closeAfterResponse = responseNum;\n        this.onClose = callback;\n        if (this.closeAfterResponse < this.currentResponseNum) {\n            this.onClose();\n            this.onClose = null;\n        }\n    };\n    /**\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\n     * browsers will respond in the same order as the requests we sent\n     * @param {number} requestNum\n     * @param {Array} data\n     */\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\n        var _this = this;\n        this.pendingResponses[requestNum] = data;\n        var _loop_1 = function () {\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\n            delete this_1.pendingResponses[this_1.currentResponseNum];\n            var _loop_2 = function (i) {\n                if (toProcess[i]) {\n                    util_1.exceptionGuard(function () {\n                        _this.onMessage_(toProcess[i]);\n                    });\n                }\n            };\n            for (var i = 0; i < toProcess.length; ++i) {\n                _loop_2(i);\n            }\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\n                if (this_1.onClose) {\n                    this_1.onClose();\n                    this_1.onClose = null;\n                }\n                return \"break\";\n            }\n            this_1.currentResponseNum++;\n        };\n        var this_1 = this;\n        while (this.pendingResponses[this.currentResponseNum]) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    };\n    return PacketReceiver;\n}());\nexports.PacketReceiver = PacketReceiver;\n\n//# sourceMappingURL=PacketReceiver.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/realtime/polling/PacketReceiver.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"./util/util\");\nvar util_3 = require(\"@firebase/util\");\nvar util_4 = require(\"@firebase/util\");\nvar util_5 = require(\"@firebase/util\");\nvar ServerActions_1 = require(\"./ServerActions\");\n/**\n * An implementation of ServerActions that communicates with the server via REST requests.\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\n * persistent connection (using WebSockets or long-polling)\n */\nvar ReadonlyRestClient = /** @class */ (function (_super) {\n    tslib_1.__extends(ReadonlyRestClient, _super);\n    /**\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\n     * @param {AuthTokenProvider} authTokenProvider_\n     * @implements {ServerActions}\n     */\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\n        var _this = _super.call(this) || this;\n        _this.repoInfo_ = repoInfo_;\n        _this.onDataUpdate_ = onDataUpdate_;\n        _this.authTokenProvider_ = authTokenProvider_;\n        /** @private {function(...[*])} */\n        _this.log_ = util_2.logWrapper('p:rest:');\n        /**\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\n         * that's been removed. :-/\n         *\n         * @private {!Object.<string, !Object>}\n         */\n        _this.listens_ = {};\n        return _this;\n    }\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\n        throw new Error('Method not implemented.');\n    };\n    /**\n     * @param {!Query} query\n     * @param {?number=} tag\n     * @return {string}\n     * @private\n     */\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\n        if (tag !== undefined) {\n            return 'tag$' + tag;\n        }\n        else {\n            util_1.assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\n            return query.path.toString();\n        }\n    };\n    /** @inheritDoc */\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n        var _this = this;\n        var pathString = query.path.toString();\n        this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier());\n        // Mark this listener so we can tell if it's removed.\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\n        var thisListen = {};\n        this.listens_[listenId] = thisListen;\n        var queryStringParamaters = query\n            .getQueryParams()\n            .toRestQueryStringParameters();\n        this.restRequest_(pathString + '.json', queryStringParamaters, function (error, result) {\n            var data = result;\n            if (error === 404) {\n                data = null;\n                error = null;\n            }\n            if (error === null) {\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\n            }\n            if (util_4.safeGet(_this.listens_, listenId) === thisListen) {\n                var status_1;\n                if (!error) {\n                    status_1 = 'ok';\n                }\n                else if (error == 401) {\n                    status_1 = 'permission_denied';\n                }\n                else {\n                    status_1 = 'rest_error:' + error;\n                }\n                onComplete(status_1, null);\n            }\n        });\n    };\n    /** @inheritDoc */\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\n        delete this.listens_[listenId];\n    };\n    /** @inheritDoc */\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\n        // no-op since we just always call getToken.\n    };\n    /**\n     * Performs a REST request to the given path, with the provided query string parameters,\n     * and any auth credentials we have.\n     *\n     * @param {!string} pathString\n     * @param {!Object.<string, *>} queryStringParameters\n     * @param {?function(?number, *=)} callback\n     * @private\n     */\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\n        var _this = this;\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\n        queryStringParameters['format'] = 'export';\n        this.authTokenProvider_\n            .getToken(/*forceRefresh=*/ false)\n            .then(function (authTokenData) {\n            var authToken = authTokenData && authTokenData.accessToken;\n            if (authToken) {\n                queryStringParameters['auth'] = authToken;\n            }\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\n                _this.repoInfo_.host +\n                pathString +\n                '?' +\n                util_5.querystring(queryStringParameters);\n            _this.log_('Sending REST request for ' + url);\n            var xhr = new XMLHttpRequest();\n            xhr.onreadystatechange = function () {\n                if (callback && xhr.readyState === 4) {\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\n                    var res = null;\n                    if (xhr.status >= 200 && xhr.status < 300) {\n                        try {\n                            res = util_3.jsonEval(xhr.responseText);\n                        }\n                        catch (e) {\n                            util_2.warn('Failed to parse JSON response for ' +\n                                url +\n                                ': ' +\n                                xhr.responseText);\n                        }\n                        callback(null, res);\n                    }\n                    else {\n                        // 401 and 404 are expected.\n                        if (xhr.status !== 401 && xhr.status !== 404) {\n                            util_2.warn('Got unsuccessful REST response for ' +\n                                url +\n                                ' Status: ' +\n                                xhr.status);\n                        }\n                        callback(xhr.status);\n                    }\n                    callback = null;\n                }\n            };\n            xhr.open('GET', url, /*asynchronous=*/ true);\n            xhr.send();\n        });\n    };\n    return ReadonlyRestClient;\n}(ServerActions_1.ServerActions));\nexports.ReadonlyRestClient = ReadonlyRestClient;\n\n//# sourceMappingURL=ReadonlyRestClient.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/ReadonlyRestClient.js\n// module id = 460\n// module chunks = 0 1","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"../util/util\");\nvar KeyIndex_1 = require(\"../snap/indexes/KeyIndex\");\nvar PriorityIndex_1 = require(\"../snap/indexes/PriorityIndex\");\nvar ValueIndex_1 = require(\"../snap/indexes/ValueIndex\");\nvar PathIndex_1 = require(\"../snap/indexes/PathIndex\");\nvar IndexedFilter_1 = require(\"./filter/IndexedFilter\");\nvar LimitedFilter_1 = require(\"./filter/LimitedFilter\");\nvar RangedFilter_1 = require(\"./filter/RangedFilter\");\nvar util_3 = require(\"@firebase/util\");\n/**\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\n * user-facing API level, so it is not done here.\n * @constructor\n */\nvar QueryParams = /** @class */ (function () {\n    function QueryParams() {\n        this.limitSet_ = false;\n        this.startSet_ = false;\n        this.startNameSet_ = false;\n        this.endSet_ = false;\n        this.endNameSet_ = false;\n        this.limit_ = 0;\n        this.viewFrom_ = '';\n        this.indexStartValue_ = null;\n        this.indexStartName_ = '';\n        this.indexEndValue_ = null;\n        this.indexEndName_ = '';\n        this.index_ = PriorityIndex_1.PRIORITY_INDEX;\n    }\n    /**\n     * @return {boolean}\n     */\n    QueryParams.prototype.hasStart = function () {\n        return this.startSet_;\n    };\n    /**\n     * @return {boolean} True if it would return from left.\n     */\n    QueryParams.prototype.isViewFromLeft = function () {\n        if (this.viewFrom_ === '') {\n            // limit(), rather than limitToFirst or limitToLast was called.\n            // This means that only one of startSet_ and endSet_ is true. Use them\n            // to calculate which side of the view to anchor to. If neither is set,\n            // anchor to the end.\n            return this.startSet_;\n        }\n        else {\n            return (this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT);\n        }\n    };\n    /**\n     * Only valid to call if hasStart() returns true\n     * @return {*}\n     */\n    QueryParams.prototype.getIndexStartValue = function () {\n        util_1.assert(this.startSet_, 'Only valid if start has been set');\n        return this.indexStartValue_;\n    };\n    /**\n     * Only valid to call if hasStart() returns true.\n     * Returns the starting key name for the range defined by these query parameters\n     * @return {!string}\n     */\n    QueryParams.prototype.getIndexStartName = function () {\n        util_1.assert(this.startSet_, 'Only valid if start has been set');\n        if (this.startNameSet_) {\n            return this.indexStartName_;\n        }\n        else {\n            return util_2.MIN_NAME;\n        }\n    };\n    /**\n     * @return {boolean}\n     */\n    QueryParams.prototype.hasEnd = function () {\n        return this.endSet_;\n    };\n    /**\n     * Only valid to call if hasEnd() returns true.\n     * @return {*}\n     */\n    QueryParams.prototype.getIndexEndValue = function () {\n        util_1.assert(this.endSet_, 'Only valid if end has been set');\n        return this.indexEndValue_;\n    };\n    /**\n     * Only valid to call if hasEnd() returns true.\n     * Returns the end key name for the range defined by these query parameters\n     * @return {!string}\n     */\n    QueryParams.prototype.getIndexEndName = function () {\n        util_1.assert(this.endSet_, 'Only valid if end has been set');\n        if (this.endNameSet_) {\n            return this.indexEndName_;\n        }\n        else {\n            return util_2.MAX_NAME;\n        }\n    };\n    /**\n     * @return {boolean}\n     */\n    QueryParams.prototype.hasLimit = function () {\n        return this.limitSet_;\n    };\n    /**\n     * @return {boolean} True if a limit has been set and it has been explicitly anchored\n     */\n    QueryParams.prototype.hasAnchoredLimit = function () {\n        return this.limitSet_ && this.viewFrom_ !== '';\n    };\n    /**\n     * Only valid to call if hasLimit() returns true\n     * @return {!number}\n     */\n    QueryParams.prototype.getLimit = function () {\n        util_1.assert(this.limitSet_, 'Only valid if limit has been set');\n        return this.limit_;\n    };\n    /**\n     * @return {!Index}\n     */\n    QueryParams.prototype.getIndex = function () {\n        return this.index_;\n    };\n    /**\n     * @return {!QueryParams}\n     * @private\n     */\n    QueryParams.prototype.copy_ = function () {\n        var copy = new QueryParams();\n        copy.limitSet_ = this.limitSet_;\n        copy.limit_ = this.limit_;\n        copy.startSet_ = this.startSet_;\n        copy.indexStartValue_ = this.indexStartValue_;\n        copy.startNameSet_ = this.startNameSet_;\n        copy.indexStartName_ = this.indexStartName_;\n        copy.endSet_ = this.endSet_;\n        copy.indexEndValue_ = this.indexEndValue_;\n        copy.endNameSet_ = this.endNameSet_;\n        copy.indexEndName_ = this.indexEndName_;\n        copy.index_ = this.index_;\n        copy.viewFrom_ = this.viewFrom_;\n        return copy;\n    };\n    /**\n     * @param {!number} newLimit\n     * @return {!QueryParams}\n     */\n    QueryParams.prototype.limit = function (newLimit) {\n        var newParams = this.copy_();\n        newParams.limitSet_ = true;\n        newParams.limit_ = newLimit;\n        newParams.viewFrom_ = '';\n        return newParams;\n    };\n    /**\n     * @param {!number} newLimit\n     * @return {!QueryParams}\n     */\n    QueryParams.prototype.limitToFirst = function (newLimit) {\n        var newParams = this.copy_();\n        newParams.limitSet_ = true;\n        newParams.limit_ = newLimit;\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\n        return newParams;\n    };\n    /**\n     * @param {!number} newLimit\n     * @return {!QueryParams}\n     */\n    QueryParams.prototype.limitToLast = function (newLimit) {\n        var newParams = this.copy_();\n        newParams.limitSet_ = true;\n        newParams.limit_ = newLimit;\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\n        return newParams;\n    };\n    /**\n     * @param {*} indexValue\n     * @param {?string=} key\n     * @return {!QueryParams}\n     */\n    QueryParams.prototype.startAt = function (indexValue, key) {\n        var newParams = this.copy_();\n        newParams.startSet_ = true;\n        if (!(indexValue !== undefined)) {\n            indexValue = null;\n        }\n        newParams.indexStartValue_ = indexValue;\n        if (key != null) {\n            newParams.startNameSet_ = true;\n            newParams.indexStartName_ = key;\n        }\n        else {\n            newParams.startNameSet_ = false;\n            newParams.indexStartName_ = '';\n        }\n        return newParams;\n    };\n    /**\n     * @param {*} indexValue\n     * @param {?string=} key\n     * @return {!QueryParams}\n     */\n    QueryParams.prototype.endAt = function (indexValue, key) {\n        var newParams = this.copy_();\n        newParams.endSet_ = true;\n        if (!(indexValue !== undefined)) {\n            indexValue = null;\n        }\n        newParams.indexEndValue_ = indexValue;\n        if (key !== undefined) {\n            newParams.endNameSet_ = true;\n            newParams.indexEndName_ = key;\n        }\n        else {\n            newParams.endNameSet_ = false;\n            newParams.indexEndName_ = '';\n        }\n        return newParams;\n    };\n    /**\n     * @param {!Index} index\n     * @return {!QueryParams}\n     */\n    QueryParams.prototype.orderBy = function (index) {\n        var newParams = this.copy_();\n        newParams.index_ = index;\n        return newParams;\n    };\n    /**\n     * @return {!Object}\n     */\n    QueryParams.prototype.getQueryObject = function () {\n        var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\n        var obj = {};\n        if (this.startSet_) {\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\n            if (this.startNameSet_) {\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\n            }\n        }\n        if (this.endSet_) {\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\n            if (this.endNameSet_) {\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\n            }\n        }\n        if (this.limitSet_) {\n            obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\n            var viewFrom = this.viewFrom_;\n            if (viewFrom === '') {\n                if (this.isViewFromLeft()) {\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n                }\n                else {\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n                }\n            }\n            obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\n        }\n        // For now, priority index is the default, so we only specify if it's some other index\n        if (this.index_ !== PriorityIndex_1.PRIORITY_INDEX) {\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\n        }\n        return obj;\n    };\n    /**\n     * @return {boolean}\n     */\n    QueryParams.prototype.loadsAllData = function () {\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\n    };\n    /**\n     * @return {boolean}\n     */\n    QueryParams.prototype.isDefault = function () {\n        return this.loadsAllData() && this.index_ == PriorityIndex_1.PRIORITY_INDEX;\n    };\n    /**\n     * @return {!NodeFilter}\n     */\n    QueryParams.prototype.getNodeFilter = function () {\n        if (this.loadsAllData()) {\n            return new IndexedFilter_1.IndexedFilter(this.getIndex());\n        }\n        else if (this.hasLimit()) {\n            return new LimitedFilter_1.LimitedFilter(this);\n        }\n        else {\n            return new RangedFilter_1.RangedFilter(this);\n        }\n    };\n    /**\n     * Returns a set of REST query string parameters representing this query.\n     *\n     * @return {!Object.<string,*>} query string parameters\n     */\n    QueryParams.prototype.toRestQueryStringParameters = function () {\n        var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\n        var qs = {};\n        if (this.isDefault()) {\n            return qs;\n        }\n        var orderBy;\n        if (this.index_ === PriorityIndex_1.PRIORITY_INDEX) {\n            orderBy = REST_CONSTANTS.PRIORITY_INDEX;\n        }\n        else if (this.index_ === ValueIndex_1.VALUE_INDEX) {\n            orderBy = REST_CONSTANTS.VALUE_INDEX;\n        }\n        else if (this.index_ === KeyIndex_1.KEY_INDEX) {\n            orderBy = REST_CONSTANTS.KEY_INDEX;\n        }\n        else {\n            util_1.assert(this.index_ instanceof PathIndex_1.PathIndex, 'Unrecognized index type!');\n            orderBy = this.index_.toString();\n        }\n        qs[REST_CONSTANTS.ORDER_BY] = util_3.stringify(orderBy);\n        if (this.startSet_) {\n            qs[REST_CONSTANTS.START_AT] = util_3.stringify(this.indexStartValue_);\n            if (this.startNameSet_) {\n                qs[REST_CONSTANTS.START_AT] += ',' + util_3.stringify(this.indexStartName_);\n            }\n        }\n        if (this.endSet_) {\n            qs[REST_CONSTANTS.END_AT] = util_3.stringify(this.indexEndValue_);\n            if (this.endNameSet_) {\n                qs[REST_CONSTANTS.END_AT] += ',' + util_3.stringify(this.indexEndName_);\n            }\n        }\n        if (this.limitSet_) {\n            if (this.isViewFromLeft()) {\n                qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\n            }\n            else {\n                qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\n            }\n        }\n        return qs;\n    };\n    /**\n     * Wire Protocol Constants\n     * @const\n     * @enum {string}\n     * @private\n     */\n    QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {\n        INDEX_START_VALUE: 'sp',\n        INDEX_START_NAME: 'sn',\n        INDEX_END_VALUE: 'ep',\n        INDEX_END_NAME: 'en',\n        LIMIT: 'l',\n        VIEW_FROM: 'vf',\n        VIEW_FROM_LEFT: 'l',\n        VIEW_FROM_RIGHT: 'r',\n        INDEX: 'i'\n    };\n    /**\n     * REST Query Constants\n     * @const\n     * @enum {string}\n     * @private\n     */\n    QueryParams.REST_QUERY_CONSTANTS_ = {\n        ORDER_BY: 'orderBy',\n        PRIORITY_INDEX: '$priority',\n        VALUE_INDEX: '$value',\n        KEY_INDEX: '$key',\n        START_AT: 'startAt',\n        END_AT: 'endAt',\n        LIMIT_TO_FIRST: 'limitToFirst',\n        LIMIT_TO_LAST: 'limitToLast'\n    };\n    /**\n     * Default, empty query parameters\n     * @type {!QueryParams}\n     * @const\n     */\n    QueryParams.DEFAULT = new QueryParams();\n    return QueryParams;\n}());\nexports.QueryParams = QueryParams;\n\n//# sourceMappingURL=QueryParams.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/view/QueryParams.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar RangedFilter_1 = require(\"./RangedFilter\");\nvar ChildrenNode_1 = require(\"../../snap/ChildrenNode\");\nvar Node_1 = require(\"../../snap/Node\");\nvar util_1 = require(\"@firebase/util\");\nvar Change_1 = require(\"../Change\");\n/**\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\n *\n * @constructor\n * @implements {NodeFilter}\n */\nvar LimitedFilter = /** @class */ (function () {\n    /**\n     * @param {!QueryParams} params\n     */\n    function LimitedFilter(params) {\n        this.rangedFilter_ = new RangedFilter_1.RangedFilter(params);\n        this.index_ = params.getIndex();\n        this.limit_ = params.getLimit();\n        this.reverse_ = !params.isViewFromLeft();\n    }\n    /**\n     * @inheritDoc\n     */\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n        if (!this.rangedFilter_.matches(new Node_1.NamedNode(key, newChild))) {\n            newChild = ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n        }\n        if (snap.getImmediateChild(key).equals(newChild)) {\n            // No change\n            return snap;\n        }\n        else if (snap.numChildren() < this.limit_) {\n            return this.rangedFilter_\n                .getIndexedFilter()\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n        }\n        else {\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n        var filtered;\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n            // Make sure we have a children node with the correct index, not a leaf node;\n            filtered = ChildrenNode_1.ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n        }\n        else {\n            if (this.limit_ * 2 < newSnap.numChildren() &&\n                newSnap.isIndexed(this.index_)) {\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n                filtered = ChildrenNode_1.ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n                // anchor to the startPost, endPost, or last element as appropriate\n                var iterator = void 0;\n                if (this.reverse_) {\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\n                }\n                else {\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\n                }\n                var count = 0;\n                while (iterator.hasNext() && count < this.limit_) {\n                    var next = iterator.getNext();\n                    var inRange = void 0;\n                    if (this.reverse_) {\n                        inRange =\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\n                    }\n                    else {\n                        inRange =\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\n                    }\n                    if (inRange) {\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\n                        count++;\n                    }\n                    else {\n                        // if we have reached the end post, we cannot keep adding elemments\n                        break;\n                    }\n                }\n            }\n            else {\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n                filtered = newSnap.withIndex(this.index_);\n                // Don't support priorities on queries\n                filtered = filtered.updatePriority(ChildrenNode_1.ChildrenNode.EMPTY_NODE);\n                var startPost = void 0;\n                var endPost = void 0;\n                var cmp = void 0;\n                var iterator = void 0;\n                if (this.reverse_) {\n                    iterator = filtered.getReverseIterator(this.index_);\n                    startPost = this.rangedFilter_.getEndPost();\n                    endPost = this.rangedFilter_.getStartPost();\n                    var indexCompare_1 = this.index_.getCompare();\n                    cmp = function (a, b) { return indexCompare_1(b, a); };\n                }\n                else {\n                    iterator = filtered.getIterator(this.index_);\n                    startPost = this.rangedFilter_.getStartPost();\n                    endPost = this.rangedFilter_.getEndPost();\n                    cmp = this.index_.getCompare();\n                }\n                var count = 0;\n                var foundStartPost = false;\n                while (iterator.hasNext()) {\n                    var next = iterator.getNext();\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\n                        // start adding\n                        foundStartPost = true;\n                    }\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\n                    if (inRange) {\n                        count++;\n                    }\n                    else {\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode_1.ChildrenNode.EMPTY_NODE);\n                    }\n                }\n            }\n        }\n        return this.rangedFilter_\n            .getIndexedFilter()\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\n    };\n    /**\n     * @inheritDoc\n     */\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n        // Don't support priorities on queries\n        return oldSnap;\n    };\n    /**\n     * @inheritDoc\n     */\n    LimitedFilter.prototype.filtersNodes = function () {\n        return true;\n    };\n    /**\n     * @inheritDoc\n     */\n    LimitedFilter.prototype.getIndexedFilter = function () {\n        return this.rangedFilter_.getIndexedFilter();\n    };\n    /**\n     * @inheritDoc\n     */\n    LimitedFilter.prototype.getIndex = function () {\n        return this.index_;\n    };\n    /**\n     * @param {!Node} snap\n     * @param {string} childKey\n     * @param {!Node} childSnap\n     * @param {!CompleteChildSource} source\n     * @param {?ChildChangeAccumulator} changeAccumulator\n     * @return {!Node}\n     * @private\n     */\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\n        // TODO: rename all cache stuff etc to general snap terminology\n        var cmp;\n        if (this.reverse_) {\n            var indexCmp_1 = this.index_.getCompare();\n            cmp = function (a, b) { return indexCmp_1(b, a); };\n        }\n        else {\n            cmp = this.index_.getCompare();\n        }\n        var oldEventCache = snap;\n        util_1.assert(oldEventCache.numChildren() == this.limit_, '');\n        var newChildNamedNode = new Node_1.NamedNode(childKey, childSnap);\n        var windowBoundary = this.reverse_\n            ? oldEventCache.getFirstChild(this.index_)\n            : oldEventCache.getLastChild(this.index_);\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\n        if (oldEventCache.hasChild(childKey)) {\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\n            while (nextChild != null &&\n                (nextChild.name == childKey || oldEventCache.hasChild(nextChild.name))) {\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\n                // the limited filter...\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\n            }\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\n            if (remainsInWindow) {\n                if (changeAccumulator != null) {\n                    changeAccumulator.trackChildChange(Change_1.Change.childChangedChange(childKey, childSnap, oldChildSnap));\n                }\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\n            }\n            else {\n                if (changeAccumulator != null) {\n                    changeAccumulator.trackChildChange(Change_1.Change.childRemovedChange(childKey, oldChildSnap));\n                }\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode_1.ChildrenNode.EMPTY_NODE);\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\n                if (nextChildInRange) {\n                    if (changeAccumulator != null) {\n                        changeAccumulator.trackChildChange(Change_1.Change.childAddedChange(nextChild.name, nextChild.node));\n                    }\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\n                }\n                else {\n                    return newEventCache;\n                }\n            }\n        }\n        else if (childSnap.isEmpty()) {\n            // we're deleting a node, but it was not in the window, so ignore it\n            return snap;\n        }\n        else if (inRange) {\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n                if (changeAccumulator != null) {\n                    changeAccumulator.trackChildChange(Change_1.Change.childRemovedChange(windowBoundary.name, windowBoundary.node));\n                    changeAccumulator.trackChildChange(Change_1.Change.childAddedChange(childKey, childSnap));\n                }\n                return oldEventCache\n                    .updateImmediateChild(childKey, childSnap)\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode_1.ChildrenNode.EMPTY_NODE);\n            }\n            else {\n                return snap;\n            }\n        }\n        else {\n            return snap;\n        }\n    };\n    return LimitedFilter;\n}());\nexports.LimitedFilter = LimitedFilter;\n\n//# sourceMappingURL=LimitedFilter.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/view/filter/LimitedFilter.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar Reference_1 = require(\"../api/Reference\");\nvar DataSnapshot_1 = require(\"../api/DataSnapshot\");\nvar Path_1 = require(\"./util/Path\");\nvar Tree_1 = require(\"./util/Tree\");\nvar PriorityIndex_1 = require(\"./snap/indexes/PriorityIndex\");\nvar util_2 = require(\"./util/util\");\nvar ServerValues_1 = require(\"./util/ServerValues\");\nvar validation_1 = require(\"./util/validation\");\nvar util_3 = require(\"@firebase/util\");\nvar nodeFromJSON_1 = require(\"./snap/nodeFromJSON\");\nvar ChildrenNode_1 = require(\"./snap/ChildrenNode\");\nvar Repo_1 = require(\"./Repo\");\n// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\n// For now it's part of Repo, but in its own file.\n/**\n * @enum {number}\n */\nvar TransactionStatus;\n(function (TransactionStatus) {\n    // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n    // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n    // mismatched hash.\n    TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\";\n    // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n    // or rejected yet).\n    TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\";\n    // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n    // removed when we get a chance to prune completed ones.\n    TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\";\n    // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n    // If it comes back as unsuccessful, we'll abort it.\n    TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\";\n    // Temporary state used to mark transactions that need to be aborted.\n    TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\n})(TransactionStatus = exports.TransactionStatus || (exports.TransactionStatus = {}));\n/**\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\n * @type {number}\n * @const\n * @private\n */\nRepo_1.Repo.MAX_TRANSACTION_RETRIES_ = 25;\n/**\n * Setup the transaction data structures\n * @private\n */\nRepo_1.Repo.prototype.transactions_init_ = function () {\n    /**\n     * Stores queues of outstanding transactions for Firebase locations.\n     *\n     * @type {!Tree.<Array.<!Transaction>>}\n     * @private\n     */\n    this.transactionQueueTree_ = new Tree_1.Tree();\n};\n/**\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\n *\n * @param {!Path} path Path at which to do transaction.\n * @param {function(*):*} transactionUpdate Update callback.\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\n */\nRepo_1.Repo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\n    this.log_('transaction on ' + path);\n    // Add a watch to make sure we get server updates.\n    var valueCallback = function () { };\n    var watchRef = new Reference_1.Reference(this, path);\n    watchRef.on('value', valueCallback);\n    var unwatcher = function () {\n        watchRef.off('value', valueCallback);\n    };\n    // Initialize transaction.\n    var transaction = {\n        path: path,\n        update: transactionUpdate,\n        onComplete: onComplete,\n        // One of TransactionStatus enums.\n        status: null,\n        // Used when combining transactions at different locations to figure out which one goes first.\n        order: util_2.LUIDGenerator(),\n        // Whether to raise local events for this transaction.\n        applyLocally: applyLocally,\n        // Count of how many times we've retried the transaction.\n        retryCount: 0,\n        // Function to call to clean up our .on() listener.\n        unwatcher: unwatcher,\n        // Stores why a transaction was aborted.\n        abortReason: null,\n        currentWriteId: null,\n        currentInputSnapshot: null,\n        currentOutputSnapshotRaw: null,\n        currentOutputSnapshotResolved: null\n    };\n    // Run transaction initially.\n    var currentState = this.getLatestState_(path);\n    transaction.currentInputSnapshot = currentState;\n    var newVal = transaction.update(currentState.val());\n    if (newVal === undefined) {\n        // Abort transaction.\n        transaction.unwatcher();\n        transaction.currentOutputSnapshotRaw = null;\n        transaction.currentOutputSnapshotResolved = null;\n        if (transaction.onComplete) {\n            // We just set the input snapshot, so this cast should be safe\n            var snapshot = new DataSnapshot_1.DataSnapshot(transaction.currentInputSnapshot, new Reference_1.Reference(this, transaction.path), PriorityIndex_1.PRIORITY_INDEX);\n            transaction.onComplete(null, false, snapshot);\n        }\n    }\n    else {\n        validation_1.validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\n        // Mark as run and add to our queue.\n        transaction.status = TransactionStatus.RUN;\n        var queueNode = this.transactionQueueTree_.subTree(path);\n        var nodeQueue = queueNode.getValue() || [];\n        nodeQueue.push(transaction);\n        queueNode.setValue(nodeQueue);\n        // Update visibleData and raise events\n        // Note: We intentionally raise events after updating all of our transaction state, since the user could\n        // start new transactions from the event callbacks.\n        var priorityForNode = void 0;\n        if (typeof newVal === 'object' &&\n            newVal !== null &&\n            util_3.contains(newVal, '.priority')) {\n            priorityForNode = util_3.safeGet(newVal, '.priority');\n            util_1.assert(validation_1.isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\n                'Priority must be a valid string, finite number, server value, or null.');\n        }\n        else {\n            var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) ||\n                ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n            priorityForNode = currentNode.getPriority().val();\n        }\n        priorityForNode /** @type {null|number|string} */ = priorityForNode;\n        var serverValues = this.generateServerValues();\n        var newNodeUnresolved = nodeFromJSON_1.nodeFromJSON(newVal, priorityForNode);\n        var newNode = ServerValues_1.resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n        transaction.currentOutputSnapshotResolved = newNode;\n        transaction.currentWriteId = this.getNextWriteId_();\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\n        this.sendReadyTransactions_();\n    }\n};\n/**\n * @param {!Path} path\n * @param {Array.<number>=} excludeSets A specific set to exclude\n * @return {Node}\n * @private\n */\nRepo_1.Repo.prototype.getLatestState_ = function (path, excludeSets) {\n    return (this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) ||\n        ChildrenNode_1.ChildrenNode.EMPTY_NODE);\n};\n/**\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\n * complete.\n *\n * Externally it's called with no arguments, but it calls itself recursively with a particular\n * transactionQueueTree node to recurse through the tree.\n *\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\n * @private\n */\nRepo_1.Repo.prototype.sendReadyTransactions_ = function (node) {\n    var _this = this;\n    if (node === void 0) { node = this.transactionQueueTree_; }\n    // Before recursing, make sure any completed transactions are removed.\n    if (!node) {\n        this.pruneCompletedTransactionsBelowNode_(node);\n    }\n    if (node.getValue() !== null) {\n        var queue = this.buildTransactionQueue_(node);\n        util_1.assert(queue.length > 0, 'Sending zero length transaction queue');\n        var allRun = queue.every(function (transaction) { return transaction.status === TransactionStatus.RUN; });\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\n        if (allRun) {\n            this.sendTransactionQueue_(node.path(), queue);\n        }\n    }\n    else if (node.hasChildren()) {\n        node.forEachChild(function (childNode) {\n            _this.sendReadyTransactions_(childNode);\n        });\n    }\n};\n/**\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\n *\n * @param {!Path} path The location of the queue.\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\n * @private\n */\nRepo_1.Repo.prototype.sendTransactionQueue_ = function (path, queue) {\n    var _this = this;\n    // Mark transactions as sent and increment retry count!\n    var setsToIgnore = queue.map(function (txn) {\n        return txn.currentWriteId;\n    });\n    var latestState = this.getLatestState_(path, setsToIgnore);\n    var snapToSend = latestState;\n    var latestHash = latestState.hash();\n    for (var i = 0; i < queue.length; i++) {\n        var txn = queue[i];\n        util_1.assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\n        txn.status = TransactionStatus.SENT;\n        txn.retryCount++;\n        var relativePath = Path_1.Path.relativePath(path, txn.path);\n        // If we've gotten to this point, the output snapshot must be defined.\n        snapToSend = snapToSend.updateChild(relativePath /**@type {!Node} */, txn.currentOutputSnapshotRaw);\n    }\n    var dataToSend = snapToSend.val(true);\n    var pathToSend = path;\n    // Send the put.\n    this.server_.put(pathToSend.toString(), dataToSend, function (status) {\n        _this.log_('transaction put response', {\n            path: pathToSend.toString(),\n            status: status\n        });\n        var events = [];\n        if (status === 'ok') {\n            // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n            // the callback could trigger more transactions or sets.\n            var callbacks = [];\n            for (var i = 0; i < queue.length; i++) {\n                queue[i].status = TransactionStatus.COMPLETED;\n                events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\n                if (queue[i].onComplete) {\n                    // We never unset the output snapshot, and given that this transaction is complete, it should be set\n                    var node = queue[i].currentOutputSnapshotResolved;\n                    var ref = new Reference_1.Reference(_this, queue[i].path);\n                    var snapshot = new DataSnapshot_1.DataSnapshot(node, ref, PriorityIndex_1.PRIORITY_INDEX);\n                    callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\n                }\n                queue[i].unwatcher();\n            }\n            // Now remove the completed transactions.\n            _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path));\n            // There may be pending transactions that we can now send.\n            _this.sendReadyTransactions_();\n            _this.eventQueue_.raiseEventsForChangedPath(path, events);\n            // Finally, trigger onComplete callbacks.\n            for (var i = 0; i < callbacks.length; i++) {\n                util_2.exceptionGuard(callbacks[i]);\n            }\n        }\n        else {\n            // transactions are no longer sent.  Update their status appropriately.\n            if (status === 'datastale') {\n                for (var i = 0; i < queue.length; i++) {\n                    if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT)\n                        queue[i].status = TransactionStatus.NEEDS_ABORT;\n                    else\n                        queue[i].status = TransactionStatus.RUN;\n                }\n            }\n            else {\n                util_2.warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\n                for (var i = 0; i < queue.length; i++) {\n                    queue[i].status = TransactionStatus.NEEDS_ABORT;\n                    queue[i].abortReason = status;\n                }\n            }\n            _this.rerunTransactions_(path);\n        }\n    }, latestHash);\n};\n/**\n * Finds all transactions dependent on the data at changedPath and reruns them.\n *\n * Should be called any time cached data changes.\n *\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\n * be raised for.\n *\n * @param {!Path} changedPath The path in mergedData that changed.\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\n * @private\n */\nRepo_1.Repo.prototype.rerunTransactions_ = function (changedPath) {\n    var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\n    var path = rootMostTransactionNode.path();\n    var queue = this.buildTransactionQueue_(rootMostTransactionNode);\n    this.rerunTransactionQueue_(queue, path);\n    return path;\n};\n/**\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\n *\n * @param {Array.<Transaction>} queue The queue of transactions to run.\n * @param {!Path} path The path the queue is for.\n * @private\n */\nRepo_1.Repo.prototype.rerunTransactionQueue_ = function (queue, path) {\n    if (queue.length === 0) {\n        return; // Nothing to do!\n    }\n    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n    // the callback could trigger more transactions or sets.\n    var callbacks = [];\n    var events = [];\n    // Ignore all of the sets we're going to re-run.\n    var txnsToRerun = queue.filter(function (q) {\n        return q.status === TransactionStatus.RUN;\n    });\n    var setsToIgnore = txnsToRerun.map(function (q) {\n        return q.currentWriteId;\n    });\n    for (var i = 0; i < queue.length; i++) {\n        var transaction = queue[i];\n        var relativePath = Path_1.Path.relativePath(path, transaction.path);\n        var abortTransaction = false, abortReason = void 0;\n        util_1.assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\n        if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n            abortTransaction = true;\n            abortReason = transaction.abortReason;\n            events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n        }\n        else if (transaction.status === TransactionStatus.RUN) {\n            if (transaction.retryCount >= Repo_1.Repo.MAX_TRANSACTION_RETRIES_) {\n                abortTransaction = true;\n                abortReason = 'maxretry';\n                events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n            }\n            else {\n                // This code reruns a transaction\n                var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\n                transaction.currentInputSnapshot = currentNode;\n                var newData = queue[i].update(currentNode.val());\n                if (newData !== undefined) {\n                    validation_1.validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\n                    var newDataNode = nodeFromJSON_1.nodeFromJSON(newData);\n                    var hasExplicitPriority = typeof newData === 'object' &&\n                        newData != null &&\n                        util_3.contains(newData, '.priority');\n                    if (!hasExplicitPriority) {\n                        // Keep the old priority if there wasn't a priority explicitly specified.\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n                    }\n                    var oldWriteId = transaction.currentWriteId;\n                    var serverValues = this.generateServerValues();\n                    var newNodeResolved = ServerValues_1.resolveDeferredValueSnapshot(newDataNode, serverValues);\n                    transaction.currentOutputSnapshotRaw = newDataNode;\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\n                    transaction.currentWriteId = this.getNextWriteId_();\n                    // Mutates setsToIgnore in place\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n                    events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\n                }\n                else {\n                    abortTransaction = true;\n                    abortReason = 'nodata';\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n                }\n            }\n        }\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\n        events = [];\n        if (abortTransaction) {\n            // Abort.\n            queue[i].status = TransactionStatus.COMPLETED;\n            // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\n            // So defer the unwatcher until we're done.\n            (function (unwatcher) {\n                setTimeout(unwatcher, Math.floor(0));\n            })(queue[i].unwatcher);\n            if (queue[i].onComplete) {\n                if (abortReason === 'nodata') {\n                    var ref = new Reference_1.Reference(this, queue[i].path);\n                    // We set this field immediately, so it's safe to cast to an actual snapshot\n                    var lastInput /** @type {!Node} */ = queue[i].currentInputSnapshot;\n                    var snapshot = new DataSnapshot_1.DataSnapshot(lastInput, ref, PriorityIndex_1.PRIORITY_INDEX);\n                    callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\n                }\n                else {\n                    callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\n                }\n            }\n        }\n    }\n    // Clean up completed transactions.\n    this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);\n    // Now fire callbacks, now that we're in a good, known state.\n    for (var i = 0; i < callbacks.length; i++) {\n        util_2.exceptionGuard(callbacks[i]);\n    }\n    // Try to send the transaction result to the server.\n    this.sendReadyTransactions_();\n};\n/**\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\n * the node for the given path if there are no pending transactions on any ancestor.\n *\n * @param {!Path} path The location to start at.\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\n * @private\n */\nRepo_1.Repo.prototype.getAncestorTransactionNode_ = function (path) {\n    var front;\n    // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\n    var transactionNode = this.transactionQueueTree_;\n    while ((front = path.getFront()) !== null &&\n        transactionNode.getValue() === null) {\n        transactionNode = transactionNode.subTree(front);\n        path = path.popFront();\n    }\n    return transactionNode;\n};\n/**\n * Builds the queue of all transactions at or below the specified transactionNode.\n *\n * @param {!Tree.<Array.<Transaction>>} transactionNode\n * @return {Array.<Transaction>} The generated queue.\n * @private\n */\nRepo_1.Repo.prototype.buildTransactionQueue_ = function (transactionNode) {\n    // Walk any child transaction queues and aggregate them into a single queue.\n    var transactionQueue = [];\n    this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue);\n    // Sort them by the order the transactions were created.\n    transactionQueue.sort(function (a, b) {\n        return a.order - b.order;\n    });\n    return transactionQueue;\n};\n/**\n * @param {!Tree.<Array.<Transaction>>} node\n * @param {Array.<Transaction>} queue\n * @private\n */\nRepo_1.Repo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\n    var _this = this;\n    var nodeQueue = node.getValue();\n    if (nodeQueue !== null) {\n        for (var i = 0; i < nodeQueue.length; i++) {\n            queue.push(nodeQueue[i]);\n        }\n    }\n    node.forEachChild(function (child) {\n        _this.aggregateTransactionQueuesForNode_(child, queue);\n    });\n};\n/**\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\n *\n * @param {!Tree.<Array.<!Transaction>>} node\n * @private\n */\nRepo_1.Repo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\n    var _this = this;\n    var queue = node.getValue();\n    if (queue) {\n        var to = 0;\n        for (var from = 0; from < queue.length; from++) {\n            if (queue[from].status !== TransactionStatus.COMPLETED) {\n                queue[to] = queue[from];\n                to++;\n            }\n        }\n        queue.length = to;\n        node.setValue(queue.length > 0 ? queue : null);\n    }\n    node.forEachChild(function (childNode) {\n        _this.pruneCompletedTransactionsBelowNode_(childNode);\n    });\n};\n/**\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\n * since we consider them incompatible with transactions.\n *\n * @param {!Path} path Path for which we want to abort related transactions.\n * @return {!Path}\n * @private\n */\nRepo_1.Repo.prototype.abortTransactions_ = function (path) {\n    var _this = this;\n    var affectedPath = this.getAncestorTransactionNode_(path).path();\n    var transactionNode = this.transactionQueueTree_.subTree(path);\n    transactionNode.forEachAncestor(function (node) {\n        _this.abortTransactionsOnNode_(node);\n    });\n    this.abortTransactionsOnNode_(transactionNode);\n    transactionNode.forEachDescendant(function (node) {\n        _this.abortTransactionsOnNode_(node);\n    });\n    return affectedPath;\n};\n/**\n * Abort transactions stored in this transaction queue node.\n *\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\n * @private\n */\nRepo_1.Repo.prototype.abortTransactionsOnNode_ = function (node) {\n    var queue = node.getValue();\n    if (queue !== null) {\n        // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n        // the callback could trigger more transactions or sets.\n        var callbacks = [];\n        // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\n        // can be immediately aborted and removed.\n        var events = [];\n        var lastSent = -1;\n        for (var i = 0; i < queue.length; i++) {\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n                // Already marked.  No action needed.\n            }\n            else if (queue[i].status === TransactionStatus.SENT) {\n                util_1.assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\n                lastSent = i;\n                // Mark transaction for abort when it comes back.\n                queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n                queue[i].abortReason = 'set';\n            }\n            else {\n                util_1.assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort');\n                // We can abort it immediately.\n                queue[i].unwatcher();\n                events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\n                if (queue[i].onComplete) {\n                    var snapshot = null;\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\n                }\n            }\n        }\n        if (lastSent === -1) {\n            // We're not waiting for any sent transactions.  We can clear the queue.\n            node.setValue(null);\n        }\n        else {\n            // Remove the transactions we aborted.\n            queue.length = lastSent + 1;\n        }\n        // Now fire the callbacks.\n        this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\n        for (var i = 0; i < callbacks.length; i++) {\n            util_2.exceptionGuard(callbacks[i]);\n        }\n    }\n};\n\n//# sourceMappingURL=Repo_transaction.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/Repo_transaction.js\n// module id = 463\n// module chunks = 0 1","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar Path_1 = require(\"./Path\");\nvar util_2 = require(\"@firebase/util\");\n/**\n * Node in a Tree.\n */\nvar TreeNode = /** @class */ (function () {\n    function TreeNode() {\n        // TODO: Consider making accessors that create children and value lazily or\n        // separate Internal / Leaf 'types'.\n        this.children = {};\n        this.childCount = 0;\n        this.value = null;\n    }\n    return TreeNode;\n}());\nexports.TreeNode = TreeNode;\n/**\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\n * children.\n */\nvar Tree = /** @class */ (function () {\n    /**\n     * @template T\n     * @param {string=} name_ Optional name of the node.\n     * @param {Tree=} parent_ Optional parent node.\n     * @param {TreeNode=} node_ Optional node to wrap.\n     */\n    function Tree(name_, parent_, node_) {\n        if (name_ === void 0) { name_ = ''; }\n        if (parent_ === void 0) { parent_ = null; }\n        if (node_ === void 0) { node_ = new TreeNode(); }\n        this.name_ = name_;\n        this.parent_ = parent_;\n        this.node_ = node_;\n    }\n    /**\n     * Returns a sub-Tree for the given path.\n     *\n     * @param {!(string|Path)} pathObj Path to look up.\n     * @return {!Tree.<T>} Tree for path.\n     */\n    Tree.prototype.subTree = function (pathObj) {\n        // TODO: Require pathObj to be Path?\n        var path = pathObj instanceof Path_1.Path ? pathObj : new Path_1.Path(pathObj);\n        var child = this, next;\n        while ((next = path.getFront()) !== null) {\n            var childNode = util_2.safeGet(child.node_.children, next) || new TreeNode();\n            child = new Tree(next, child, childNode);\n            path = path.popFront();\n        }\n        return child;\n    };\n    /**\n     * Returns the data associated with this tree node.\n     *\n     * @return {?T} The data or null if no data exists.\n     */\n    Tree.prototype.getValue = function () {\n        return this.node_.value;\n    };\n    /**\n     * Sets data to this tree node.\n     *\n     * @param {!T} value Value to set.\n     */\n    Tree.prototype.setValue = function (value) {\n        util_1.assert(typeof value !== 'undefined', 'Cannot set value to undefined');\n        this.node_.value = value;\n        this.updateParents_();\n    };\n    /**\n     * Clears the contents of the tree node (its value and all children).\n     */\n    Tree.prototype.clear = function () {\n        this.node_.value = null;\n        this.node_.children = {};\n        this.node_.childCount = 0;\n        this.updateParents_();\n    };\n    /**\n     * @return {boolean} Whether the tree has any children.\n     */\n    Tree.prototype.hasChildren = function () {\n        return this.node_.childCount > 0;\n    };\n    /**\n     * @return {boolean} Whether the tree is empty (no value or children).\n     */\n    Tree.prototype.isEmpty = function () {\n        return this.getValue() === null && !this.hasChildren();\n    };\n    /**\n     * Calls action for each child of this tree node.\n     *\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\n     */\n    Tree.prototype.forEachChild = function (action) {\n        var _this = this;\n        util_2.forEach(this.node_.children, function (child, childTree) {\n            action(new Tree(child, _this, childTree));\n        });\n    };\n    /**\n     * Does a depth-first traversal of this node's descendants, calling action for each one.\n     *\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\n     * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\n     *   false.\n     * @param {boolean=} childrenFirst Whether to call action on children before calling it on\n     *   parent.\n     */\n    Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\n        if (includeSelf && !childrenFirst)\n            action(this);\n        this.forEachChild(function (child) {\n            child.forEachDescendant(action, /*includeSelf=*/ true, childrenFirst);\n        });\n        if (includeSelf && childrenFirst)\n            action(this);\n    };\n    /**\n     * Calls action on each ancestor node.\n     *\n     * @param {function(!Tree.<T>)} action Action to be called on each parent; return\n     *   true to abort.\n     * @param {boolean=} includeSelf Whether to call action on this node as well.\n     * @return {boolean} true if the action callback returned true.\n     */\n    Tree.prototype.forEachAncestor = function (action, includeSelf) {\n        var node = includeSelf ? this : this.parent();\n        while (node !== null) {\n            if (action(node)) {\n                return true;\n            }\n            node = node.parent();\n        }\n        return false;\n    };\n    /**\n     * Does a depth-first traversal of this node's descendants.  When a descendant with a value\n     * is found, action is called on it and traversal does not continue inside the node.\n     * Action is *not* called on this node.\n     *\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\n     */\n    Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\n        this.forEachChild(function (child) {\n            if (child.getValue() !== null)\n                action(child);\n            else\n                child.forEachImmediateDescendantWithValue(action);\n        });\n    };\n    /**\n     * @return {!Path} The path of this tree node, as a Path.\n     */\n    Tree.prototype.path = function () {\n        return new Path_1.Path(this.parent_ === null\n            ? this.name_\n            : this.parent_.path() + '/' + this.name_);\n    };\n    /**\n     * @return {string} The name of the tree node.\n     */\n    Tree.prototype.name = function () {\n        return this.name_;\n    };\n    /**\n     * @return {?Tree} The parent tree node, or null if this is the root of the tree.\n     */\n    Tree.prototype.parent = function () {\n        return this.parent_;\n    };\n    /**\n     * Adds or removes this child from its parent based on whether it's empty or not.\n     *\n     * @private\n     */\n    Tree.prototype.updateParents_ = function () {\n        if (this.parent_ !== null)\n            this.parent_.updateChild_(this.name_, this);\n    };\n    /**\n     * Adds or removes the passed child to this tree node, depending on whether it's empty.\n     *\n     * @param {string} childName The name of the child to update.\n     * @param {!Tree.<T>} child The child to update.\n     * @private\n     */\n    Tree.prototype.updateChild_ = function (childName, child) {\n        var childEmpty = child.isEmpty();\n        var childExists = util_2.contains(this.node_.children, childName);\n        if (childEmpty && childExists) {\n            delete this.node_.children[childName];\n            this.node_.childCount--;\n            this.updateParents_();\n        }\n        else if (!childEmpty && !childExists) {\n            this.node_.children[childName] = child.node_;\n            this.node_.childCount++;\n            this.updateParents_();\n        }\n    };\n    return Tree;\n}());\nexports.Tree = Tree;\n\n//# sourceMappingURL=Tree.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@firebase/database/dist/cjs/src/core/util/Tree.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar WebSocketConnection_1 = require(\"../realtime/WebSocketConnection\");\nvar BrowserPollConnection_1 = require(\"../realtime/BrowserPollConnection\");\n/**\n * INTERNAL methods for internal-use only (tests, etc.).\n *\n * Customers shouldn't use these or else should be aware that they could break at any time.\n *\n * @const\n */\nexports.forceLongPolling = function () {\n    WebSocketConnection_1.WebSocketConnection.forceDisallow();\n    BrowserPollConnection_1.BrowserPollConnection.forceAllow();\n};\nexports.forceWebSockets = function () {\n    BrowserPollConnection_1.BrowserPollConnection.forceDisallow();\n};\n/* Used by App Manager */\nexports.isWebSocketsAvailable = function () {\n    return WebSocketConnection_1.WebSocketConnection['isAvailable']();\n};\nexports.setSecurityDebugCallback = function (ref, callback) {\n    ref.repo.persistentConnection_.securityDebugCallback_ = callback;\n};\nexports.stats = function (ref, showDelta) {\n    ref.repo.stats(showDelta);\n};\nexports.statsIncrementCounter = function (ref, metric) {\n    ref.repo.statsIncrementCounter(metric);\n};\nexports.dataUpdateCount = function (ref) {\n    return ref.repo.dataUpdateCount;\n};\nexports.interceptServerData = function (ref, callback) {\n    return ref.repo.interceptServerData_(callback);\n};\n\n//# sourceMappingURL=internal.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/api/internal.js\n// module id = 465\n// module chunks = 0 1","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar RepoInfo_1 = require(\"../core/RepoInfo\");\nvar PersistentConnection_1 = require(\"../core/PersistentConnection\");\nvar RepoManager_1 = require(\"../core/RepoManager\");\nvar Connection_1 = require(\"../realtime/Connection\");\nexports.DataConnection = PersistentConnection_1.PersistentConnection;\n/**\n * @param {!string} pathString\n * @param {function(*)} onComplete\n */\nPersistentConnection_1.PersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\n    this.sendRequest('q', { p: pathString }, onComplete);\n};\n/**\n * @param {*} data\n * @param {function(*)} onEcho\n */\nPersistentConnection_1.PersistentConnection.prototype.echo = function (data, onEcho) {\n    this.sendRequest('echo', { d: data }, onEcho);\n};\n// RealTimeConnection properties that we use in tests.\nexports.RealTimeConnection = Connection_1.Connection;\n/**\n * @param {function(): string} newHash\n * @return {function()}\n */\nexports.hijackHash = function (newHash) {\n    var oldPut = PersistentConnection_1.PersistentConnection.prototype.put;\n    PersistentConnection_1.PersistentConnection.prototype.put = function (pathString, data, opt_onComplete, opt_hash) {\n        if (opt_hash !== undefined) {\n            opt_hash = newHash();\n        }\n        oldPut.call(this, pathString, data, opt_onComplete, opt_hash);\n    };\n    return function () {\n        PersistentConnection_1.PersistentConnection.prototype.put = oldPut;\n    };\n};\n/**\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\n */\nexports.ConnectionTarget = RepoInfo_1.RepoInfo;\n/**\n * @param {!Query} query\n * @return {!string}\n */\nexports.queryIdentifier = function (query) {\n    return query.queryIdentifier();\n};\n/**\n * @param {!Query} firebaseRef\n * @return {!Object}\n */\nexports.listens = function (firebaseRef) {\n    return firebaseRef.repo.persistentConnection_.listens_;\n};\n/**\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\n *\n * @param {boolean} forceRestClient\n */\nexports.forceRestClient = function (forceRestClient) {\n    RepoManager_1.RepoManager.getInstance().forceRestClient(forceRestClient);\n};\n\n//# sourceMappingURL=test_access.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/api/test_access.js\n// module id = 466\n// module chunks = 0 1","\"use strict\";\nvar combineLatest_1 = require('../operators/combineLatest');\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from this Observable with values from\n * Observables passed as arguments. This is done by subscribing to each\n * Observable, in order, and collecting an array of each of the most recent\n * values any time any of the input Observables emits, then either taking that\n * array and passing it as arguments to an optional `project` function and\n * emitting the return value of that, or just emitting the array of recent\n * values directly if there is no `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method combineLatest\n * @owner Observable\n */\nfunction combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return combineLatest_1.combineLatest.apply(void 0, observables)(this);\n}\nexports.combineLatest = combineLatest;\n//# sourceMappingURL=combineLatest.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/operator/combineLatest.js\n// module id = 467\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\nvar isArray_1 = require('../util/isArray');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar none = {};\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from this Observable with values from\n * Observables passed as arguments. This is done by subscribing to each\n * Observable, in order, and collecting an array of each of the most recent\n * values any time any of the input Observables emits, then either taking that\n * array and passing it as arguments to an optional `project` function and\n * emitting the return value of that, or just emitting the array of recent\n * values directly if there is no `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method combineLatest\n * @owner Observable\n */\nfunction combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var project = null;\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n    if (observables.length === 1 && isArray_1.isArray(observables[0])) {\n        observables = observables[0].slice();\n    }\n    return function (source) { return source.lift.call(new ArrayObservable_1.ArrayObservable([source].concat(observables)), new CombineLatestOperator(project)); };\n}\nexports.combineLatest = combineLatest;\nvar CombineLatestOperator = (function () {\n    function CombineLatestOperator(project) {\n        this.project = project;\n    }\n    CombineLatestOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CombineLatestSubscriber(subscriber, this.project));\n    };\n    return CombineLatestOperator;\n}());\nexports.CombineLatestOperator = CombineLatestOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CombineLatestSubscriber = (function (_super) {\n    __extends(CombineLatestSubscriber, _super);\n    function CombineLatestSubscriber(destination, project) {\n        _super.call(this, destination);\n        this.project = project;\n        this.active = 0;\n        this.values = [];\n        this.observables = [];\n    }\n    CombineLatestSubscriber.prototype._next = function (observable) {\n        this.values.push(none);\n        this.observables.push(observable);\n    };\n    CombineLatestSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            this.active = len;\n            this.toRespond = len;\n            for (var i = 0; i < len; i++) {\n                var observable = observables[i];\n                this.add(subscribeToResult_1.subscribeToResult(this, observable, observable, i));\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {\n        if ((this.active -= 1) === 0) {\n            this.destination.complete();\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var values = this.values;\n        var oldVal = values[outerIndex];\n        var toRespond = !this.toRespond\n            ? 0\n            : oldVal === none ? --this.toRespond : this.toRespond;\n        values[outerIndex] = innerValue;\n        if (toRespond === 0) {\n            if (this.project) {\n                this._tryProject(values);\n            }\n            else {\n                this.destination.next(values.slice());\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype._tryProject = function (values) {\n        var result;\n        try {\n            result = this.project.apply(this, values);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return CombineLatestSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.CombineLatestSubscriber = CombineLatestSubscriber;\n//# sourceMappingURL=combineLatest.js.map\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/operators/combineLatest.js","\"use strict\";\nvar async_1 = require('../scheduler/async');\nvar auditTime_1 = require('../operators/auditTime');\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source values, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * <img src=\"./img/auditTime.png\" width=\"100%\">\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.auditTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method auditTime\n * @owner Observable\n */\nfunction auditTime(duration, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return auditTime_1.auditTime(duration, scheduler)(this);\n}\nexports.auditTime = auditTime;\n//# sourceMappingURL=auditTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/operator/auditTime.js\n// module id = 469\n// module chunks = 0 1","\"use strict\";\nvar async_1 = require('../scheduler/async');\nvar audit_1 = require('./audit');\nvar timer_1 = require('../observable/timer');\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source values, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * <img src=\"./img/auditTime.png\" width=\"100%\">\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.auditTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method auditTime\n * @owner Observable\n */\nfunction auditTime(duration, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return audit_1.audit(function () { return timer_1.timer(duration, scheduler); });\n}\nexports.auditTime = auditTime;\n//# sourceMappingURL=auditTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/operators/auditTime.js\n// module id = 470\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/audit.png\" width=\"100%\">\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value or completes, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.audit(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method audit\n * @owner Observable\n */\nfunction audit(durationSelector) {\n    return function auditOperatorFunction(source) {\n        return source.lift(new AuditOperator(durationSelector));\n    };\n}\nexports.audit = audit;\nvar AuditOperator = (function () {\n    function AuditOperator(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    AuditOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new AuditSubscriber(subscriber, this.durationSelector));\n    };\n    return AuditOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AuditSubscriber = (function (_super) {\n    __extends(AuditSubscriber, _super);\n    function AuditSubscriber(destination, durationSelector) {\n        _super.call(this, destination);\n        this.durationSelector = durationSelector;\n        this.hasValue = false;\n    }\n    AuditSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n        if (!this.throttled) {\n            var duration = tryCatch_1.tryCatch(this.durationSelector)(value);\n            if (duration === errorObject_1.errorObject) {\n                this.destination.error(errorObject_1.errorObject.e);\n            }\n            else {\n                var innerSubscription = subscribeToResult_1.subscribeToResult(this, duration);\n                if (innerSubscription.closed) {\n                    this.clearThrottle();\n                }\n                else {\n                    this.add(this.throttled = innerSubscription);\n                }\n            }\n        }\n    };\n    AuditSubscriber.prototype.clearThrottle = function () {\n        var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = null;\n            throttled.unsubscribe();\n        }\n        if (hasValue) {\n            this.value = null;\n            this.hasValue = false;\n            this.destination.next(value);\n        }\n    };\n    AuditSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n        this.clearThrottle();\n    };\n    AuditSubscriber.prototype.notifyComplete = function () {\n        this.clearThrottle();\n    };\n    return AuditSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=audit.js.map\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/operators/audit.js","\"use strict\";\nvar TimerObservable_1 = require('./TimerObservable');\nexports.timer = TimerObservable_1.TimerObservable.create;\n//# sourceMappingURL=timer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/observable/timer.js\n// module id = 472\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isNumeric_1 = require('../util/isNumeric');\nvar Observable_1 = require('../Observable');\nvar async_1 = require('../scheduler/async');\nvar isScheduler_1 = require('../util/isScheduler');\nvar isDate_1 = require('../util/isDate');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar TimerObservable = (function (_super) {\n    __extends(TimerObservable, _super);\n    function TimerObservable(dueTime, period, scheduler) {\n        if (dueTime === void 0) { dueTime = 0; }\n        _super.call(this);\n        this.period = -1;\n        this.dueTime = 0;\n        if (isNumeric_1.isNumeric(period)) {\n            this.period = Number(period) < 1 && 1 || Number(period);\n        }\n        else if (isScheduler_1.isScheduler(period)) {\n            scheduler = period;\n        }\n        if (!isScheduler_1.isScheduler(scheduler)) {\n            scheduler = async_1.async;\n        }\n        this.scheduler = scheduler;\n        this.dueTime = isDate_1.isDate(dueTime) ?\n            (+dueTime - this.scheduler.now()) :\n            dueTime;\n    }\n    /**\n     * Creates an Observable that starts emitting after an `initialDelay` and\n     * emits ever increasing numbers after each `period` of time thereafter.\n     *\n     * <span class=\"informal\">Its like {@link interval}, but you can specify when\n     * should the emissions start.</span>\n     *\n     * <img src=\"./img/timer.png\" width=\"100%\">\n     *\n     * `timer` returns an Observable that emits an infinite sequence of ascending\n     * integers, with a constant interval of time, `period` of your choosing\n     * between those emissions. The first emission happens after the specified\n     * `initialDelay`. The initial delay may be a {@link Date}. By default, this\n     * operator uses the `async` IScheduler to provide a notion of time, but you\n     * may pass any IScheduler to it. If `period` is not specified, the output\n     * Observable emits only one value, `0`. Otherwise, it emits an infinite\n     * sequence.\n     *\n     * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>\n     * var numbers = Rx.Observable.timer(3000, 1000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @example <caption>Emits one number after five seconds</caption>\n     * var numbers = Rx.Observable.timer(5000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link interval}\n     * @see {@link delay}\n     *\n     * @param {number|Date} initialDelay The initial delay time to wait before\n     * emitting the first value of `0`.\n     * @param {number} [period] The period of time between emissions of the\n     * subsequent numbers.\n     * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n     * the emission of values, and providing a notion of \"time\".\n     * @return {Observable} An Observable that emits a `0` after the\n     * `initialDelay` and ever increasing numbers after each `period` of time\n     * thereafter.\n     * @static true\n     * @name timer\n     * @owner Observable\n     */\n    TimerObservable.create = function (initialDelay, period, scheduler) {\n        if (initialDelay === void 0) { initialDelay = 0; }\n        return new TimerObservable(initialDelay, period, scheduler);\n    };\n    TimerObservable.dispatch = function (state) {\n        var index = state.index, period = state.period, subscriber = state.subscriber;\n        var action = this;\n        subscriber.next(index);\n        if (subscriber.closed) {\n            return;\n        }\n        else if (period === -1) {\n            return subscriber.complete();\n        }\n        state.index = index + 1;\n        action.schedule(state, period);\n    };\n    TimerObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, period = _a.period, dueTime = _a.dueTime, scheduler = _a.scheduler;\n        return scheduler.schedule(TimerObservable.dispatch, dueTime, {\n            index: index, period: period, subscriber: subscriber\n        });\n    };\n    return TimerObservable;\n}(Observable_1.Observable));\nexports.TimerObservable = TimerObservable;\n//# sourceMappingURL=TimerObservable.js.map\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxjs/observable/TimerObservable.js","\"use strict\";\nvar isArray_1 = require('../util/isArray');\nfunction isNumeric(val) {\n    // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n    // subtraction forces infinities to NaN\n    // adding 1 corrects loss of precision from parseFloat (#15100)\n    return !isArray_1.isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\nexports.isNumeric = isNumeric;\n;\n//# sourceMappingURL=isNumeric.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/util/isNumeric.js\n// module id = 474\n// module chunks = 0 1","\"use strict\";\nfunction isDate(value) {\n    return value instanceof Date && !isNaN(+value);\n}\nexports.isDate = isDate;\n//# sourceMappingURL=isDate.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/util/isDate.js\n// module id = 475\n// module chunks = 0 1"]}